@model appSERP.Models.SYSSETT.UserFavoriteModel
@using appSERP.Views.Shared.appResource
@{
    ViewBag.Title = "DataModel";
    Layout = "~/Views/Shared/appLayout/_ModalLayout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <!-- Header -->
        <div class="container-fluid">
            @Html.Action("ViewSettingModalHeader", "ViewSetting", new { pModalHeaderTitle = "الصفحات المفضله ", pId = Model.UserFavoriteId })
        </div>
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-12">
                @Html.HiddenFor(model => model.UserFavoriteId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserFavoriteId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                <select id="selectUser" class="selectpicker" name="UserId" data-live-search="true" data-live-search-placeholder="Search" data-actions-box="true"></select>
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ObjectId, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                <select id="selectObject" class="selectpicker" name="ObjectId" data-live-search="true" data-live-search-placeholder="Search" data-actions-box="true"></select>
                @Html.ValidationMessageFor(model => model.ObjectId, "", new { @class = "text-danger" })
            </div>
        </div>


    </div>
    <div class="form-group divModalFooter">
        <div class="col-md-offset-2 col-md-12">
            <input type="submit" value="@appResource.btnSave" class="btn btn-success" />
            <button type="button" class="btn btn-light" data-dismiss="modal">@appResource.btnClose</button>
        </div>
    </div>
}
<script>
    var vUserId = 0;
    var vObjectId = 0;
     // List GetUser
    $.post('/Home/GetUser',
        null,
        function (data, status) {
            var vDataJSON = JSON.parse(data);
            $.each(vDataJSON, function (i, User) {
                $('#selectUser').append('<option data-id="' + User.UserId + '" value="' + User.UserId + '" sort-id="' + i + '">' + User.UserFullName + '</option>')
                if (i == 0) {
                    vUserId = User.UserId;
                }
            })
            if (parseInt('@ViewBag.vbcUserId') > 0) {
                vUserId = parseInt('@ViewBag.vbcUserId');
            }
            $('#selectUser').val(vUserId);
            // Refresh Select Picker
            $('.selectpicker').selectpicker('refresh');
        }
    )

    // List GetObject
    $.post('/Home/GetObject',
        null,
        function (data, status) {
            var vDataJSON = JSON.parse(data);
            $.each(vDataJSON, function (i, Object) {
                $('#selectObject').append('<option data-id="' + Object.ObjectId + '" value="' + Object.ObjectId + '" sort-id="' + i + '">' + Object.ObjectNameL1 + '</option>')
                if (i == 0) {
                    vObjectId = Object.ObjectId;
                }
            })
                    if (parseInt('@ViewBag.vbcObjectId') > 0) {
                        vObjectId  = parseInt('@ViewBag.vbcObjectId');
            }
            $('#selectUser').val(vUserId);
            $('#selectObject').val(vObjectId);
            // Refresh Select Picker
            $('.selectpicker').selectpicker('refresh');
        }
    )
</script>