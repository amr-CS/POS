@model appSERP.Models.FA.AssetReasonTypeModel
@using appSERP.Views.Shared.appResource
@{
    Layout = "~/Views/Shared/appLayout/_ModalLayout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <!-- Header -->
        <div class="container-fluid">
            @Html.Action("ViewSettingModalHeader", "ViewSetting", new { pModalHeaderTitle = appResource.AssetReasonType, pId = Model.AssetReasonTypeId })
        </div>
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.HiddenFor(model => model.AssetReasonTypeId, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.AssetReasonTypeId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AssetReasonTypeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AssetReasonTypeNameL1, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AssetReasonTypeNameL1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AssetReasonTypeNameL1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AssetReasonTypeNameL2, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AssetReasonTypeNameL2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AssetReasonTypeNameL2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AssetReasonTypeIsActive, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.AssetReasonTypeIsActive)
                        @Html.ValidationMessageFor(model => model.AssetReasonTypeIsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="@appResource.btnSave" class="btn btn-success" />
                    <button type="button" class="btn btn-light" data-dismiss="modal">@appResource.btnClose</button>
                </div>
            </div>
        </div>
    }


</body>
</html>
