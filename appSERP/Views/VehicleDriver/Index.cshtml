@using appSERP.Views.Shared.appResource;
@using appSERP.appCode.Setting.User;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    ViewBag.Title = "سائقي المركبات";
}
<style>
    .btnUtility {
        background-color: #dfe6e9;
        color: #444;
    }

    /* expanding input CSS only */
    #myInput {
        width: 130px;
        -webkit-transition: width 0.3s ease-in-out;
    }

        #myInput:focus {
            width: 100%;
            -webkit-transition: width 0.5s ease-in-out;
        }

    /*.fullHeightInput {
        height: 50px;
    }*/
</style>
<div class="">
    @Html.Action("ViewSettingHeader", "ViewSetting", new { pHeaderTitle = "", pIsNew = false })
</div>
@*<div class="container-fluid">*@
<div class="bg-white border rounded p-3">
    <div class="w-100">
        <div class="d-flex justify-content-end">
            <div class="btn-group m-2" role="group" aria-label="First group">
                <!-- Save -->
                <button class="btn btnUtility btnSave" title="@appResource.btnSave"><i class="fa fa-save"></i></button>
                <button class="btn btnUtility btnSearch" title="@appResource.btnSearch"><i class="fa fa-search"></i></button>

            </div>
            <div class="btn-group m-2" role="group" aria-label="First group">
                <!-- Copy -->
                <button class="btn btnUtility btnCopy" title="@appResource.ttCopy"><i class="fa fa-copy"></i></button>
                <!-- Cut -->
                <button class="btn btnUtility btnCut" title="@appResource.ttCut"><i class="fa fa-cut"></i></button>
                <!-- Paste -->
                <button class="btn btnUtility btnPaste" title="@appResource.ttPaste"><i class="fa fa-paste"></i></button>
            </div>


            <div class="btn-group m-2" role="group" aria-label="First group">
                <!-- Print -->
                <button class="btn btnUtility btnPrint btnDataTablePrint" title="@appResource.ttPrint "><i class="fa fa-print"></i></button>
                <!-- Sort Asc -->
                <button class="btn btnUtility btnSortAsc" title="@appResource.ttSortAsc"><i class="fa fa-sort-asc"></i></button>
                <!-- Sort Asc -->
                <button class="btn btnUtility btnSortDesc" title="@appResource.ttSortDesc"><i class="fa fa-sort-desc"></i></button>
            </div>

            <div class="btn-group m-2" role="group" aria-label="First group">
                <!-- ADD -->
                <button class="btn btnUtility" title="@appResource.ttAdd"><i class="fa fa-plus"></i></button>
                <!-- Edit -->
                <button class="btn btnUtility " id="btnEdit" title="@appResource.ttEdit"><i class="fa fa-edit"></i></button>
            </div>

            <div class="btn-group m-2" role="group" aria-label="First group">
                <!-- PDF -->
                <button class="btn btnUtility btnPDF" title="@appResource.ttPDF"><i class="fa fa-file-pdf-o"></i></button>
                <!-- Excel -->
                <button class="btn btnUtility btnExcel btnDataTablePrint " title="@appResource.ttExcel"><i class="fa fa-file-excel-o"></i></button>
                <!-- Word -->
                <button class="btn btnUtility btnWord" id="btnWord" title="@appResource.ttWord"><i class="fa fa-file-word-o"></i></button>
            </div>


            <div class="btn-group m-2" role="group" aria-label="First group">
                <!-- Close -->
                <button class="btn btnUtility btnClose" title="@appResource.ttClose"><i class="fa fa-close"></i></button>
            </div>

            <div class="btn-group m-2" role="group" aria-label="First group">
                <!-- Next -->
                <button class="btn btnUtility   btnFirst" id="btnFirst" title=" @appResource.ttFirst"><i class="fa  fa-fast-forward"></i></button>
                <!-- Prev -->
                <button class="btn btnUtility   btnNext" id="btnNext" title="@appResource.ttNext"><i class="fa  fa-forward "></i></button>
                <!-- First -->
                <button class="btn btnUtility btnPrev" id="btnPrev" title="@appResource.ttPrev"><i class="fa fa-backward"></i></button>
                <!-- Last -->
                <button class="btn btnUtility btnLast" id="btnLast" title="@appResource.ttLast"><i class="fa fa-fast-backward"></i></button>
            </div>


            <div class="btn-group m-2" role="group" aria-label="First group">
                <!-- Full Screen -->
                <button class="btn btnUtility btnFullScreen" title="@appResource.ttFullScreen"><i class="fa fa-window-maximize"></i></button>
            </div>

            <div class="btn-group m-2" role="group" aria-label="First group">
                <div class="dropdown">
                    <button class="btn btnUtility dropdown-toggle " type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="fa fa-table"></i>
                    </button>
                    <div id="chkboxdiv" class="flex-shrink-1 dropdown-menu" aria-labelledby="dropdownMenuButton"></div>
                </div>
            </div>
        </div>
    </div>
</div>
@*</div>*@
@*<div class="container-fluid">*@
<div class="row bg-white border rounded p-3 divVehicleDriver">

    <table class="tblVehicleDriver border" width="100%">
        <!-- Head -->
        <thead>
            <tr>

                <th></th>
                <th>@appResource._No</th>

                <th colspan="2">@appResource._Driver</th>
                <th colspan="2">@appResource._Vehicle</th>
                <th>@appResource.DateOfMovement</th>
                <th>@appResource._Counter</th>
                <th>@appResource._Note</th>
                <th>@appResource.MovementStatus</th>
                <th class="thActions">@appResource._Actions</th>

            </tr>
        </thead>
        <tbody class="tblVehicleDriverBody"></tbody>
    </table>
</div>
@*</div>*@
<div id="VehicleDataModal" class="fade modal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="VehicleDataModalContent"></div>
    </div>
</div>
<div id="DriverDataModal" class="fade modal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="DriverDataModalContent"></div>
    </div>
</div>
<div id="VehicleDataModal" class="fade modal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="VehicleDataModalContent"></div>
    </div>
</div>
<!-- Confirm Delete Modal -->
<div id="confirmDeleteModal" class="fade modal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="confirmDeleteModalContent"></div>
    </div>
</div>
<!-- Confirm Delete Modal -->
<div id="CommentModal" class="fade modal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="CommentModalContent"></div>
    </div>
</div>
<div id="VehicleDriverDataModal" class="fade modal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="VehicleDriverDataModalContent"></div>
    </div>
</div>
<div id="VehicleDriverAlertDataModal" class="fade modal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="VehicleDriverAlertDataModalContent"></div>
    </div>
</div>
<script>
    // Variable For The Last Valid Row To Insert
    var vLastrowToInsert = 0;
    function funGetTodayDate() {
        var today = new Date();
        var dd = String(today.getDate()).padStart(2, '0');
        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
        var yyyy = today.getFullYear();

        today = yyyy + '-' + mm + '-' + dd;
        return today;

    }
    funGetVehicleDrivers()
    function funGetVehicleDrivers() {
        var VTableBody = $('.tblVehicleDriverBody')
        $.post('/VehicleDriver/GetVehicleDriver',
            {
            }
            , function (data, status) {
                if (data != undefined && data != '') {

                    var vDataResult = JSON.parse(data);
                    $.each(vDataResult, function (i, VehicleDriver) {
                        if (i==0) {
                            localStorage.setItem('lstDrivers', VehicleDriver.tblEmpAll[0]);
                        }
                        var vRowContent = funVehicleDriverRowConfig(VehicleDriver);

                        VTableBody.append(vRowContent);
                    })
                }
                else {
                    var vEmptyRow = funAddEmptyRow()

                    VTableBody.append(vEmptyRow);
                }

            }

        )

    }
    function funVehicleDriverRowConfig(pRow) {

        var vChecked = null;
        if (pRow.VehicleDriverIsActive) {
            vChecked = 'checked';
        }
        var vRowContent = '<tr class="tblRow" data-id="' + pRow.VehicleDriverId + '" data-changed="0">' +
            '<td><button class="btn btn-sm btn-light btnVehicleAddRow text-secondary"><i class="fa fa-plus-circle"></i></button> <label class="d-none" id ="lblDriver">الرقم</label></td>' +
            '<td width="7%"><input type="text" class="form-control VehicleDriverCode" disabled value="' + pRow.VehicleDriverCode + '" /></td>' +
            '<td width="7%"><input type="text" class="form-control DriverId"  data-id="' + pRow.DriverId + '"  value="' + pRow.ResEmployeeCode + '" /></td>' +
            '<td><input type="text" class="form-control DriverName" disabled    value="' + pRow.ResEmployeeNameL1 + '" /></td>' +
            '<td width="7%"><input type="text" class="form-control VehicleId fullHeightInput" data-id="' + pRow.VehicleId + '"   value="' + pRow.VehicleCode  + '" /></td>' +
            '<td><input type="text" class="form-control VecDescL1" disabled  value="' + pRow.VecDescL2 + '" /></td>' +
            '<td><input type="date" class="form-control TransactionDate"   value="' + pRow.TransactionDate + '" /></td>' +
            '<td><input type="number"  min="1" class="form-control Counter"   value="' + pRow.Counter + '" /></td>' +
            '<td><input type="text" class="form-control Notes"   value="' + pRow.Notes + '" /></td>' +
            '<td> <input type="checkbox" class="form-control  VehicleDriverIsActive" ' + vChecked + ' /></td>' +
            '<td><button class="btn btn-light btn-sm btnVehicleDriverDelete" data-id="' + pRow.VehicleDriverId+'"><i class="fa fa-trash"></i></button></td>' +
            '</tr>';

        return vRowContent;

    }
    function funAddEmptyRow() {
        var vToday = funGetTodayDate();

        var vChecked = 'checked';

        var vRowContent = '<tr class="tblRow" data-id="0" data-changed="0">' +
            '<td><button class="btn btn-sm btn-light btnVehicleAddRow text-secondary"><i class="fa fa-plus-circle"></i></button> <label class="d-none" id ="lblDriver">الرقم</label></td>' +
            '<td width="7%"><input type="text" class="form-control VehicleDriverCode" disabled  /></td>' +
            '<td width="7%"><input type="text" class="form-control  DriverId"  data-id="0"   /></td>' +
            '<td><input type="text" class="form-control DriverName" disabled    /></td>' +
            '<td width="7%"><input type="text" class="form-control VehicleId fullHeightInput" data-id="0"    /></td>' +
            '<td><input type="text" class="form-control VecDescL1" disabled   /></td>' +
            '<td><input type="date" class="form-control TransactionDate" value="' + vToday + '"    /></td>' +
            '<td><input type="number"  min="1" class="form-control Counter"  /></td>' +
            '<td><input type="text" class="form-control Notes"    /></td>' +
            '<td> <input type="checkbox" class="form-control  VehicleDriverIsActive" ' + vChecked + ' /></td>' +
            '<td><button class="btn btn-light btn-sm btnVehicleDriverDelete" data-id="0"><i class="fa fa-trash"></i></button></td>' +
            '</tr>';
        return vRowContent;


    }

    $('body').on('click', '.btnVehicleAddRow', function () {
        var vTableRow = $(this).closest('.tblRow');
        var vCurrentRowIndex = vTableRow.index();
        var vRowContent = funAddEmptyRow();
        //$(".tblVehicleDriverBody").append(vRowContent);
        $('.tblVehicleDriverBody > tr').eq(vCurrentRowIndex).after(vRowContent);


    })

    $('body').on('click', '.btnVehicleDriverDelete', function () {

        // Id - NameAr - NameEn
        var vElement = $(this)
        var vTableRow = $(this).closest('.tblRow');
        //var vDataId = $(this).attr('data-id');
        //var vDataName = $(this).attr('data-name');
        var vDataId = vTableRow.attr('data-id');
        var vDataName = vTableRow.find('.VecDescL1').val() + ' ' + vTableRow.find('.DriverName').val()  ;
        console.log('vDataId' + vDataId);
        // URL
        var vDataURL = '/ViewSetting/ViewSettingConfirmDelete/';
        // Get HTML Content of [Confirm Delete] Partial View
        localStorage.setItem('lstdel', vTableRow.index)
        var yyyyy = 0;
        $.get(
            // URL
            vDataURL,
            // Parameters
            {
                id: vDataId,
                pName: vDataName,
            },
            // Function
            function (data, status) {
                if (vDataId > 0) {

                    console.log('gggg' + (yyyyy + 1).toString())
                    // Modal
                    $('#confirmDeleteModalContent').html(data);
                    $('#confirmDeleteModal').modal('show');
                    // Click Event [Delete Confirm]
                    $('#confirmDeleteModal').on('shown.bs.modal', function () {
                        $("body").on("click", "#btnDeleteConfirm", function () {

                            if (localStorage.getItem('lstdel') == vTableRow.index) {



                                $.post('/VehicleDriver/DeleteVehicleDriver',
                                    {
                                        pVehicleDriverId: vTableRow.attr('data-id')
                                    }, function (data, status) {
                                        vElement.closest('tr').remove();
                                        // Check If IT The Last Row
                                        var vLastRow = $('.tblVehicleDriverBody').find('tr').attr('data-id')
                                        console.log(vLastRow)

                                        funNotification('@appResource.msgSave', 2);
                                        // Add Row If Empty
                                        if (vLastRow == undefined) {

                                            funAddEmptyRow()
                                            //funFillSelectList();

                                        }

                                    })
                                vTableRow = '';

                            }


                        });
                    });


                }
                else {
                    // Only Delete The Row
                    vElement.closest('tr').remove();
                    // Check If IT The Last Row
                    var vLastRow = $('.tblVehicleDriverBody').find('tr').attr('data-id')
                    // Add Row If Empty
                    if (vLastRow == undefined) {
                        funAddEmptyRow()
                        //funFillSelectList();
                    }
                }
            });
        //vTableRow = '';
        //vElement = '';


    })
    $('body').on('change', '.DriverId,.VecDescL1,.VecDescL1,.Counter,.Notes,.VehicleDriverIsActive', function () {

        // Get Closest Row
        var vTableRow = $(this).closest('.tblRow');

        vTableRow.attr('data-changed','1')

    })



    $('body').on('keydown dblclick', '.DriverId', function (e) {
        // Get Closest Row
        var vTableRow = $(this).closest('.tblRow');
        // Check F9
        if (e.keyCode == 120 || e.type == 'dblclick') {
            localStorage.setItem('lstcurrentDrivertxt', '0')
            localStorage.setItem('lstDrivercurrentindex', vTableRow.index)


            // Get Driver Data
            var vDriverIdElement = vTableRow.find('.DriverId');
            var vDriverNameElement = vTableRow.find('.DriverName');


            // Search Driver
            var vURL = '/ResEmployee/SearchResEmployeeModal';
            // Load Content of Driver Search
            $('#DriverDataModalContent').load(vURL);

            var vLstDrivers = localStorage.getItem('lstDrivers');
            var vDRowContent = '';
            //console.log(vLstDrivers);
            //for (var x = 0; x < localStorage.getItem('lstDrivers').length; x++) {
            //    console.log('ResEmployeeNameL1' + localStorage.getItem('lstDrivers')[x].ResEmployeeId);
            //    vDRowContent += '<td data-id="' + localStorage.getItem('lstDrivers')[x].ResEmployeeId + '">';
            //    vDRowContent += '<div class="divResEmployeeSelect d-flex p-2" data-id="' + localStorage.getItem('lstDrivers')[x].ResEmployeeId + '">';
            //    vDRowContent += '<div class="divResEmployeeNo px-4">' + localStorage.getItem('lstDrivers')[x].ResEmployeeCode + '</div>';
            //    vDRowContent += '<div class="divResEmployeeName px-4">' + localStorage.getItem('lstDrivers')[x].ResEmployeeNameL1 + '</div>';
            //    vDRowContent += '</div>';
            //    vDRowContent += '</td>';
            //}
            //$('.tblBodyResEmployee').append(vDRowContent);
            // Modal Show
            $('#DriverDataModal').modal('show');
            // Focus
            $('#DriverDataModal').on('shown.bs.modal', function () {
                $('.txtSearch').focus();
                // Select Driver
                $('body').on('click', '.divResEmployeeSelect', function () {
                    if (localStorage.getItem('lstDrivercurrentindex') == vTableRow.index) {
                        $('.txtSearch').focus();

                        // Driver Id
                        var vDriverId = $(this).attr('data-id');

                        // Get Values
                        var vDriverCodeValue = $(this).find('.divResEmployeeNo').text();
                        var vDriverNameValue = $(this).find('.divResEmployeeName').text();



                        // Set Value
                        vDriverIdElement.val(vDriverCodeValue);
                        vDriverIdElement.attr('data-id', vDriverId);
                        vDriverNameElement.val(vDriverNameValue);
                        vTableRow.attr('data-changed', '1');
                        vDriverIdElement.css("border-color", "");

                        // Modal Show
                        $('#DriverDataModal').modal('hide');
                        vTableRow = '';
                    }



                })
            })
        }
    })

    $('body').on('keydown dblclick', '.VehicleId', function (e) {
        // Get Closest Row
        var vTableRow = $(this).closest('.tblRow');
        // Check F9
        if (e.keyCode == 120 || e.type == 'dblclick') {
            localStorage.setItem('lstcurrentVehicletxt', '0')
            localStorage.setItem('lstVehiclecurrentindex', vTableRow.index)


            // Get Vehicle Data
            var vVehicleIdElement = vTableRow.find('.VehicleId');
            var vVehicleNameElement = vTableRow.find('.VecDescL1');


            // Search Vehicle
            var vURL = '/VehicleDriver/SearchVehicle';
            // Load Content of Vehicle Search
            $('#VehicleDataModalContent').load(vURL);


            // Modal Show
            $('#VehicleDataModal').modal('show');
            // Focus
            $('#VehicleDataModal').on('shown.bs.modal', function () {
                $('.txtSearch').focus();
                // Select Vehicle
                $('body').on('click', '.divVehicleSelect', function () {
                    if (localStorage.getItem('lstVehiclecurrentindex') == vTableRow.index) {
                        $('.txtSearch').focus();

                        // Vehicle Id
                        var vVehicleId = $(this).attr('data-id');

                        // Get Values
                        var vVehicleCodeValue = $(this).find('.divVehicleNo').text();
                        var vVehicleNameValue = $(this).find('.divVehicleName').text();



                        // Set Value
                        vVehicleIdElement.val(vVehicleCodeValue);
                        vVehicleIdElement.attr('data-id', vVehicleId);
                        vVehicleNameElement.val(vVehicleNameValue);
                        vTableRow.attr('data-changed', '1');
                        // Modal Show
                        $('#VehicleDataModal').modal('hide');
                        vVehicleIdElement.css("border-color", "");
                        vTableRow = '';
                    }



                })
            })
        }
    })
    $('.btnSave').on('click', function () {

        //$(".tblVehicleDriverBody > tr").each(function (index) {
        //    var vTblRowData = $(this);
        //    if (vRowData.attr('data-changed') == '1') {
        //        vLastrowToInsert = vRowData.index();
        //    }
        //})
        funSaveVehicleDriver()
    })

    function funSaveVehicleDriver() {
        //$('.btnCreate').click(function () {
        var vIsValid = true;
        $(".tblVehicleDriverBody > tr").each(function (index) {

            // Row Data
            var vRowData = $(this);
            var vIsexception = 0;
            // Is Active
            var vVehicleDriverIsActive = vRowData.find('.VehicleDriverIsActive').prop('checked');

            if (vRowData.find('.VehicleId').val() != undefined && vRowData.find('.VehicleId').val() != '' && vRowData.find('.DriverId').val() != undefined && vRowData.find('.DriverId').val() != '' && vRowData.find('.Counter').val() != undefined && vRowData.find('.Counter').val() != '') {
                if (vIsexception == 0) {
                    if (vRowData.attr('data-changed') == '1') {
                        console.log('vehicleiddddddddddddd' + vRowData.find('.VehicleId').attr('data-id'))
                        console.log('driveriddddddddddddd' + vRowData.find('.DriverId').attr('data-id'))
                        //$.get('/api/APIINVItemUnit/InvItemUnitGET',
                        $.post('/VehicleDriver/SaveVehicleDriver',

                            {
                                pVehicleDriverId: vRowData.attr('data-id'),
                                pVehicleId: vRowData.find('.VehicleId').attr('data-id'),
                                pDriverId: vRowData.find('.DriverId').attr('data-id'),
                                pTransactionDate: vRowData.find('.TransactionDate').val().toString("yyyy-MM-dd"),
                                pCounter: vRowData.find('.Counter').val(),
                                pNotes: vRowData.find('.Notes').val(),
                                pVehicleDriverIsActive: vVehicleDriverIsActive,

                            }, function (data, status) {
                                if (vRowData.attr('data-id') == '0') {
                                    if (data != '') {
                                        if ($.isNumeric(data)) {
                                            vIsValid = false;
                                            funNotification('@appResource.msgVehicleDriver', 2);
                                            //var vIsFound = 0;
                                            $(".tblVehicleDriverBody > tr").each(function (i) {
                                                var vvRow = $(this);

                                                if (vvRow.index() < vRowData.index()) {

                                                    //if (vIsFound == 0) {
                                                        if (vvRow.find('.VehicleId').val().trim() == vRowData.find('.VehicleId').val().trim() && vvRow.find('.DriverId').val().trim() == vRowData.find('.DriverId').val().trim()) {
                                                            //vIsFound = 1;
                                                            console.log('vvvvvvvvvvvvvvvfocussssed' + vvRow.index());
                                                            vvRow.find('.DriverId').focus();


                                                        }
                                                        else {
                                                            //vRowData.find('.DriverId').focus();
                                                        }
                                                    //}

                                                }

                                                    vRowData.find('.VehicleId').val('');
                                                    vRowData.find('.VehicleId').attr('data-id', '0');
                                                     vRowData.find('.VecDescL1').val('');
                                                     vRowData.find('.DriverId').val('');
                                                    vRowData.find('.DriverId').attr('data-id', '0');
                                                    vRowData.find('.DriverName').val('');
                                                    vRowData.attr('data-changed', '0');
                                            })

                                            vIsexception = 1;



                                        }
                                        else {

                                            var vDataResult = JSON.parse(data);
                                            vRowData.find('.VehicleDriverCode').val(vDataResult[0].VehicleDriverCode);
                                            vRowData.attr('data-id', vDataResult[0].VehicleDriverId);
                                            vRowData.attr('data-changed', '0');


                                        }


                                    }

                                }
                                else {
                                    vRowData.attr('data-changed', '0');

                                }
                                //if ($('.tblVehicleBody tr:last').length   == index) {
                                //   // fnGetVehicles()
                                //    if (vIsValid) {
                                //        funNotification('تم الحفظ بنجاح', 1);
                                //    }
                                //    vIsexception = 0;
                                //}


                            })
                    }
                }


            }
            else {
                vIsValid = false;
                if (vRowData.find('.VehicleId').val().trim() == '') {
                    vRowData.find('.VehicleId').css("border-color", "red");

                    vRowData.find('.VehicleId').focus();
                }
                else if (vRowData.find('.DriverId').val().trim() == '') {
                    vRowData.find('.DriverId').css("border-color", "red");
                    vRowData.find('.DriverId').focus();
                }
                else if (vRowData.find('.Counter').val().trim() == '') {
                    vRowData.find('.Counter').css("border-color", "red");
                    vRowData.find('.Counter').focus();
                }

            }

        })
            if (!vIsValid) {
            // Notification - Field Required
            funNotification('@appResource.msgRequired', 2);
        }
        else {
            // Notification
            funNotification('@appResource.btnSave', 1);
        }
    }

    $('body').on('blur', '.DriverId', function (e) {
        var vTableRow = $(this).closest('.tblRow');
        if ($(this).val().trim() == '') {
            vTableRow.find('.DriverName').val('')
        }
        else {
            console.log('current indexxxxxxxxxxxx' + vTableRow.index() )

            vTableRow.find('.DriverId').css("border-color", "");
            $.post('/ResEmployee/GetResEmployeeByCode', {
                pResEmployeeCode: vTableRow.find('.DriverId').val()
            }, function (data, status) {
                if (data != undefined && data != '') {
                    var vDataResult = JSON.parse(data);
                    $.each(vDataResult, function (i, Emp) {
                        vTableRow.find('.DriverId').attr('data-id', Emp.ResEmployeeId);
                        console.log('ResEmployeeIdddddddd' + Emp.ResEmployeeId)
                        console.log('ResEmployeeIdddddddd2' + vTableRow.find('.DriverId').attr('data-id'))
                        //$(this).val(Emp.ResEmployeeCode);
                        vTableRow.find('.DriverName').val(Emp.ResEmployeeNameL1);
                    })

                }


                })
            if (vTableRow.index > 0) {
                if (vTableRow.find('.DriverId').val().trim() != '' && vTableRow.find('.VehicleId').val().trim() != '') {

                    //funcheckRepeating(vTableRow.index(), vTableRow.find('.DriverId').val(), vTableRow.find('.VehicleId').val())
                }
            }
        }
    })
    $('body').on('blur', '.VehicleId', function (e) {
        var vTableRow = $(this).closest('.tblRow');
        if ($(this).val().trim() == '') {
            vTableRow.find('.VecDescL1').val('')
        }
        else {
            console.log('2current indexxxxxxxxxxxx2' + vTableRow.index() )

            vTableRow.find('.VehicleId').css("border-color", "");
            $.post('/Vehicle/GetVehicleByCode', {
                pVehicleCode: vTableRow.find('.VehicleId').val()
            }, function (data, status) {
                if (data != undefined && data != '') {
                    var vDataResult = JSON.parse(data);
                    $.each(vDataResult, function (i, Vehicle) {
                        vTableRow.find('.VehicleId').attr('data-id', Vehicle.VehicleId);
                        console.log('vehicleidddddddddd' + Vehicle.VehicleId)
                        console.log('vehicleidddddddddd22222' + $(this).attr('data-id'))
                        //$(this).val(Vehicle.VehicleCode);
                        vTableRow.find('.VecDescL1').val(Vehicle.VecDescL1);
                    })

                }


                })
            if (vTableRow.index() > 0) {

                if (vTableRow.find('.DriverId').val().trim() != '' && vTableRow.find('.VehicleId').val().trim() != '') {
                    //funcheckRepeating(vTableRow.index(), vTableRow.find('.DriverId').val(), vTableRow.find('.VehicleId').val())
                }
            }
        }

    })
    function funcheckRepeating(pCurrentIndex, pCurrentDriver, pCurrentVehicle) {
        var vRepeatedBefore = 0;
        $(".tblVehicleDriverBody > tr").each(function (index) {
            if (index < pCurrentIndex) {
                var vCurrentRow = $(this);
                var vDriver = vCurrentRow.find('.DriverId').val();
                var vVehicle = vCurrentRow.find('.VehicleId').val();
                //alert('vDriver' + vDriver  )
                //alert('vVehicle' + vVehicle )
                if (pCurrentDriver == vDriver && pCurrentVehicle == vVehicle) {

                    if (vRepeatedBefore == 0) {
                        //alert('repeaaaaaaaated')
                        funAlertModal()
                    }
                    vRepeatedBefore = 1

                }


            }
        })



    }
    function funAlertModal()
    {
        // Get Closest Row
        var vTableRow = $(this).closest('.tblRow');
        // Check F9
        //if (e.keyCode == 120 || e.type == 'dblclick') {
            localStorage.setItem('lstcurrentVehicleDrivertxt', '0')
            localStorage.setItem('lstVehicleDrivercurrentindex', vTableRow.index)


            // Get Vehicle Data
            var vVehicleIdElement = vTableRow.find('.VehicleId');
            var vVehicleNameElement = vTableRow.find('.VecDescL1');


            // Search Vehicle
            var vURL = '/ViewSetting/ViewSettingAlert?Id=0&&pName=' + 'kulllllllllllllllll';
            // Load Content of Vehicle Search
            $('#VehicleDriverAlertDataModalContent').load(vURL);


            // Modal Show
            $('#VehicleDriverAlertDataModal').modal('show');
            // Focus
            $('#VehicleDriverAlertDataModal').on('shown.bs.modal', function () {
                // Select Vehicle
                $('body').on('click', '.btnDeleteConfirm', function () {
                    if (localStorage.getItem('lstVehicleDrivercurrentindex') == vTableRow.index) {

                        // Modal Show
                        $('#VehicleDriverAlertDataModal').modal('hide');
                        vTableRow = '';
                    }



                })
            })
        //}

    }
    $('body').on('blur', '.Counter', function (e) {
        var vTableRow = $(this).closest('.tblRow');
        if ($(this).val().trim() == '') {
        }
        else {
            vTableRow.find('.Counter').css("border-color", "");

        }

    })
</script>
<script>
    // Print
    $('.btnPrint').on('click', function () {
        @*location.href = '/Account/ChartAccountReport?pCompanyId=' + '@clsUser.vUserCompanyId'*@
        var url = '/VehicleDriver/VehicleDriverReport'
        var popupWindow = window.open(url);
    });
    //SimpleInSameWin()


</script>
<script>
    // Brand Code, Name - F9
    $('body').on('dblclick', '.Notes', function (e) {
        // Get Closest Row
        var vTableRow = $(this).closest('.tblRow');
        var vParentText = vTableRow.find('.Notes');
        // Check F9
        //if (e.keyCode == 120 || e.type == 'dblclick') {
        localStorage.setItem('lstcurrentCommenttxt', '0')
        localStorage.setItem('lstCommentcurrentindex', vTableRow.index)
        // Search Comment
        var vURL = '/Vehicle/ShowComment';
        // Load Content of Comment Search
        $('#CommentModalContent').load(vURL);
        // Modal Show
        $('#CommentModal').modal('show');
        $('#CommentModal').on('shown.bs.modal', function () {
            if (vParentText.val() != undefined && vParentText.val().trim() != '') {
                $('#ExpTxt').val(vParentText.val());
            }
            else {
                $('#ExpTxt').val('');
            }
            $('#ExpTxt').focus();
            $('#ExpTxt').on('blur', function () {
                if (localStorage.getItem('lstCommentcurrentindex') == vTableRow.index) {
                    vParentText.val($('#ExpTxt').val());
                    vTableRow.attr('data-changed', '1');
                    vParentText.focus();
                    vTableRow = '';
                }
            })
        })
    })
</script>
<script>
    // Search CustomerDataModal
    $('.btnSearch').on('click', function () {
        var VTableBody = $('.tblVehicleDriverBody');
        var arrSelectedRow = [];
        // Search CostCenter
        var vURL = '/VehicleDriver/SearchVehicleDriver';
        // Load Content of CostCenter Search
        $('#VehicleDriverDataModalContent').load(vURL);
        // Modal Full
        $('#VehicleDriverDataModalContent').parent().addClass('modal-dialog-full');
        // Modal Show
        $('#VehicleDriverDataModal').modal('show');

        // Select Customer
        $('body').on('click', '.btnSelect', function () {
            var count = $("input[name='chkIsValid']:checked").length;
            if (count == 0) {
                $('#VehicleDriverDataModal').modal('hide');
            }
            else {
                $('.tblVehicleDriverSearch > tbody > tr ').each(function () {
                    var vRow = $(this);
                    // Element
                    var vElement = $(this).find('.clsChk')
                    var vSelectedChk = vElement.prop('checked')
                    // Check
                    if (vSelectedChk) {


                        // Get Id
                        var vVehicleDriverId = vElement.attr('data-id');
                        var vChecked = null;
                        arrSelectedRow.push(vVehicleDriverId);


                    }
                })
                $.post('/VehicleDriver/GetVehicleDriverList', {
                    pLstVehicleDriver: arrSelectedRow.toString()
                }, function (data, status) {
                    if (data != undefined && data != '') {
                        VTableBody.html('');
                        var vDataResult = JSON.parse(data);
                        $.each(vDataResult, function (i, VehicleDriver) {
                            var vRowContent = funVehicleDriverRowConfig(VehicleDriver);

                            VTableBody.append(vRowContent);
                        })
                        arrSelectedRow = [];
                        // close The Modal
                        $('#VehicleDriverDataModal').modal('hide');

                    }
                    else {
                        $('#VehicleDriverDataModal').modal('hide');
                    }
                });

            }



        })
    })
</script>

