
@using appSERP.appCode.Setting.User
@using appSERP.Views.Shared.appResource
@using appSERP.appCode.SQL.QueryType;
@using appSERP.Utils
@{
    DateTime dateTimeFrom = ViewBag.DateFrom;
    DateTime dateTimeTo = ViewBag.DateTo;
    ViewBag.Title = "فاتورة الشراء";
    int BranchId = 0;
    if (Request.Cookies["BranchId"] != null)
    { BranchId = Convert.ToInt32(Request.Cookies["BranchId"].Value); };
    int UserId = 0;
    if (Request.Cookies["UserId"] != null)
    { UserId = Convert.ToInt32(Request.Cookies["UserId"].Value); };


}

<style>
    body {
        font-family: Cairo;
    }

    .fullHeightInput {
        height: 50px;
    }

    .table th, .table td {
        font-size: 12px;
        text-align: center;
    }

    .table th {
        margin: auto;
        border: none !important;
        padding-top: 0.5rem;
        padding-bottom: 0.5rem;
    }

    .table th, .table td {
        padding: 0rem !important;
        vertical-align: top;
        border-top: 1px solid #dee2e6;
    }


    .tblHead {
        border-bottom: 1px solid #d4d4d4;
        margin-bottom: 0.5rem;
    }

    input, select, textarea {
        max-width: 100% !important;
    }

    textarea {
        max-width: 100% !important;
    }

    .form-inline {
        margin-top: 0.5rem;
    }

    .table td, .table th {
        border-top: 0 !important;
    }


    /* Special Classes */
    .controlRow {
        margin-top: 0.5rem;
    }

    .checkInput {
        margin: auto;
    }

    .tblFooter {
        border: 0 !important;
    }

    .tooltip > .tooltip-inner {
        background-color: #2980b9;
    }

    .tooltip > .tooltip-arrow {
        border-bottom-color: #2980b9;
    }

    .form-control:disabled, .form-control[disabled] {
        background-color: #eef1f5;
        opacity: 1;
    }

    .divGlVoucher {
        max-height: 50vh !important;
        overflow-y: scroll !important;
        background-color: #FFF;
    }

    .divCashBox, .divChkStat {
        background-color: #eef1f5;
        padding: 5px;
        border: 1px solid #d4d4d4;
        border-radius: 3px;
    }

    .errorClass {
        border: 1px solid red;
    }
</style>
<!-- Head -->
<div class="container-fluid">
    <div class="bg-white border rounded p-3">
        <div class="w-100">
            <div class="d-flex justify-content-end">
                <div class="btn-group m-2" role="group" aria-label="First group">
                    <!-- Save -->
                    <button type="button" class="btn btn-info btn-sm btnStorePost">

                        ترحيل البيانات
                    </button>
                    <button class="btn btnUtility btnSave" title="@appResource.btnSave"><i class="fa fa-save"></i></button>
                    <button class="btn btnUtility btnSearch" title="@appResource.btnSearch"><i class="fa fa-search"></i></button>

                </div>
                <div class="btn-group m-2" role="group" aria-label="First group">
                    <!-- Copy -->
                    <button class="btn btnUtility btnCopy" title="@appResource.ttCopy"><i class="fa fa-copy"></i></button>
                    <!-- Cut -->
                    <button class="btn btnUtility btnCut" title="@appResource.ttCut"><i class="fa fa-cut"></i></button>
                    <!-- Paste -->
                    <button class="btn btnUtility btnPaste" title="@appResource.ttPaste"><i class="fa fa-paste"></i></button>
                </div>


                <div class="btn-group m-2" role="group" aria-label="First group">
                    <!-- Print -->
                    <button class="btn btnUtility btnPrint btnDataTablePrint" title="@appResource.ttPrint "><i class="fa fa-print"></i></button>
                    <!-- Sort Asc -->
                    <button class="btn btnUtility btnSortAsc" title="@appResource.ttSortAsc"><i class="fa fa-sort-asc"></i></button>
                    <!-- Sort Desc -->
                    <button class="btn btnUtility btnSortDesc" title="@appResource.ttSortDesc"><i class="fa fa-sort-desc"></i></button>
                </div>

                <div class="btn-group m-2" role="group" aria-label="First group">
                    <!-- ADD -->
                    <button class="btn btnUtility btnAdd" title="@appResource.ttAdd"><i class="fa fa-plus"></i></button>
                    <!-- Edit -->
                    <button class="btn btnUtility " id="btnEdit" title="@appResource.ttEdit"><i class="fa fa-edit"></i></button>
                </div>

                <div class="btn-group m-2" role="group" aria-label="First group">
                    <!-- PDF -->
                    <button class="btn btnUtility btnPDF" title="@appResource.ttPDF"><i class="fa fa-file-pdf-o"></i></button>
                    <!-- Excel -->
                    <button class="btn btnUtility btnExcel btnDataTablePrint " title="@appResource.ttExcel"><i class="fa fa-file-excel-o"></i></button>
                    <!-- Word -->
                    <button class="btn btnUtility btnWord" id="btnWord" title="@appResource.ttWord"><i class="fa fa-file-word-o"></i></button>
                </div>


                <div class="btn-group m-2" role="group" aria-label="First group">
                    <!-- Close -->
                    <button class="btn btnUtility btnDeleteHead" title="@appResource.btnDelete"><i class="fa fa-close"></i></button>
                </div>

                <div class="btn-group m-2" role="group" aria-label="First group">
                    <!-- Next -->
                    <button class="btn btnUtility   btnFirst" id="btnFirst" title=" @appResource.ttFirst"><i class="fa  fa-fast-forward"></i></button>
                    <!-- Prev -->
                    <button class="btn btnUtility   btnNext" id="btnNext" title="@appResource.ttNext"><i class="fa  fa-forward "></i></button>
                    <!-- First -->
                    <button class="btn btnUtility btnPrev" id="btnPrev" title="@appResource.ttPrev"><i class="fa fa-backward"></i></button>
                    <!-- Last -->
                    <button class="btn btnUtility btnLast" id="btnLast" title="@appResource.ttLast"><i class="fa fa-fast-backward"></i></button>
                </div>


                <div class="btn-group m-2" role="group" aria-label="First group">
                    <!-- Full Screen -->
                    <button class="btn btnUtility btnFullScreen" title="@appResource.ttFullScreen"><i class="fa fa-window-maximize"></i></button>
                </div>

                <div class="btn-group m-2" role="group" aria-label="First group">
                    <div class="dropdown">
                        <button class="btn btnUtility dropdown-toggle " type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="fa fa-table"></i>
                        </button>
                        <div id="chkboxdiv" class="flex-shrink-1 dropdown-menu" aria-labelledby="dropdownMenuButton"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">

    <!-- Title -->
    <div class="bg-light border rounded p-3 mb-3">@appResource.BuyVoucher</div>

    <!-- Head -->
    <div class="bg-white border rounded p-3 mb-3">

        <div class="row">
            <!-- Main Inputs -->
            <div class="col-sm-12">

                <!-- 1st Row Input -->
                <div class="row">

                    <div class="form-group">
                        <input type="text" class="form-control form-control-sm w-25 txtInvId d-none" value="0" />
                        <input type="number" class="form-control form-control-sm w-25 txtInvType  d-none" value="3" />
                        <input type="text" class="form-control form-control-sm w-25 txtCheckDate d-none" />
                    </div>
                    <!-- Right Controls [Doc No, Ref, ..] -->
                    <div class="col-sm-4 mt-3">
                        <!-- Doc Date -->
                        <div class="row mt-2">
                            <div class="col-sm-3">
                                <label class="small float-right pt-2">@appResource.Store</label>
                            </div>
                            <div class="col-sm-6 d-flex">
                                <input type="text" class="form-control form-control-sm d-none w-25 txtStoreId" />
                                <input type="text" class="form-control form-control-sm  w-25  txtStoreCode" />
                                <input type="text" class="form-control form-control-sm w-75 txtStoreName" value="" disabled />
                            </div>
                        </div>
                        <!-- Source -->
                        <div class="row mt-2">
                            <div class="col-sm-3 ">
                                <label class="small float-right pt-2">المورد</label>
                            </div>
                            <div class="col-sm-6 d-flex">
                                <input type="text" class="form-control form-control-sm w-25 d-none  txtCustomerId" />
                                <input type="text" class="form-control form-control-sm w-25 txtCustomerCode" />
                                <input type="text" class="form-control form-control-sm w-75 txtCustomerName" value="" disabled />
                            </div>
                        </div>
                        <!-- Source -->
                        <div class="row mt-2">
                            <div class="col-sm-3 ">
                                <label class="small float-right pt-2">الرقم الضريبي للمورد </label>
                            </div>
                            <div class="col-sm-6 d-flex">

                                <input type="text" id="" class="txtCustomerVatCode form-control form-control-sm " readonly />
                            </div>
                        </div>

                        <!-- Ref Doc Date -->
                    </div>
                    <div class="col-sm-3 mt-3 ">

                        <div class="divCashBox PayTypeId mt-2">
                            <div class="row m-1">
                                <div class="form-check m-2 custom-control custom-checkbox">
                                    <input type="checkbox" class="custom-control-input chkIsBox" id="chkIsBox" value="1">
                                    <label class="custom-control-label small" for="chkIsBox">@appResource._Cash</label>
                                </div>
                                <div class="form-check m-2  custom-control custom-checkbox">
                                    <input type="checkbox" class="custom-control-input chkIsCheck" id="chkIsCheck" value="2">
                                    <label class="custom-control-label small" for="chkIsCheck">@appResource._Cheque</label>
                                </div>
                                <div class="form-check m-2 custom-control custom-checkbox">
                                    <input type="checkbox" class="custom-control-input chkIsLater" id="chkIsLater" value="3" checked>
                                    <label class="custom-control-label small" for="chkIsLater">@appResource._Creditt</label>
                                </div>

                            </div>
                        </div>


                    </div>
                    <div class="col-sm-1 mt-3 ">
                        <div class=" PayTypeId mt-2" style="padding: 5px;">
                            <div class="row m-1">
                                <div class="form-check m-2 custom-control custom-checkbox ">
                                    <input type="checkbox" class="custom-control-input chkIsDocPosted" disabled id="IsPosted" value="option3">
                                    <label class="custom-control-label small" for="IsPosted">@appResource.Posted</label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Left Controls [Doc No, Ref, ..] -->
                    <div class="col-sm-4 mt-3">
                        <!-- Doc No -->
                        <div class="row controlRow">
                            <div class="col-sm-4">
                                <label class="small float-right pt-2">@appResource.BillNo</label>
                            </div>
                            <div class="col-sm-8">
                                <input type="text" class="form-control form-control-sm txtDocNo" disabled />
                            </div>
                        </div>
                        <!-- Doc Date -->
                        <div class="row controlRow">
                            <div class="col-sm-4">
                                <label class="small float-right pt-2">@appResource._Date</label>
                            </div>
                            <div class="col-sm-8">
                                <input type="date" class="form-control form-control-sm dtpInvDate" onblur="funFoucus('txtItemCode')" />
                            </div>
                        </div>
                        <!-- Ref Doc No -->
                        <div class="row controlRow">
                            <div class="col-sm-4">
                                <label class="small float-right pt-2">@appResource.RefrenceNo</label>
                            </div>
                            <div class="col-sm-8">
                                <input type="text" class="form-control form-control-sm txtDocRefNo" />
                            </div>
                        </div>
                        <!-- Ref Doc No -->
                        <div class="row controlRow">
                            <div class="col-sm-4">
                                <label class="small float-right pt-2">@appResource.RefrenceDate</label>
                            </div>
                            <div class="col-sm-8">
                                <input type="date" class="form-control form-control-sm txtDocRefDate" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                            </div>
                        </div>
                    </div>
                </div> <!-- End of 1st Row of Main Inputs -->
            </div>
        </div>
    </div>
    <div class=" mb-3">
        <div class="bg-white border rounded p-3">

            <ul class="nav nav-tabs" id="myTab" role="tablist">

                <li class="nav-item divCash" id="divCash">
                    <a class="nav-link  clsCashDesk" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">@appResource._Cash</a>
                </li>

                <li class="nav-item divCheck" id="divCheck">
                    <a class="nav-link" id="profile-tab" disabled data-toggle="tab" href="#profile" role="tab" aria-controls="profile" aria-selected="false">@appResource._Cheque</a>
                </li>
                <li class="nav-item divMaster" id="divMaster">
                    <a class="nav-link" id="contact-tab" data-toggle="tab" href="#contact" role="tab" aria-controls="contact" aria-selected="false">@appResource.CreditCard</a>
                </li>
            </ul>
            <div class="tab-content" id="myTabContent">
                <div class="tab-content" id="myTabContent">
                    <div class="tab-pane fade  divCash" id="home" role="tabpanel" aria-labelledby="home-tab">
                        <div class="container-fluid ">
                            <table class="table table-bordered table-hover">
                                <!--CashDesk-->
                                <tr>
                                    <th></th>
                                    <th>
                                        <div class="d-flex">
                                            <div class="col-sm-3">
                                                <div>@appResource.CashBoxNo</div>
                                            </div>
                                            <div class="col-sm-9">
                                                <div>@appResource.CashDesk</div>
                                            </div>
                                        </div>
                                    </th>
                                    <th>
                                        <div class="d-flex">

                                            <div class="col-sm-4">
                                                <div>@appResource._CostCenter</div>
                                            </div>
                                            <div class="col-sm-8">
                                                <div>@appResource.CostCenterName</div>
                                            </div>
                                        </div>
                                    </th>
                                    <th>
                                        <div>@appResource._Amount</div>
                                    </th>
                                    <th>

                                        <div> @appResource.ExchangeRate1</div>
                                    </th>
                                    <th>
                                        <div>@appResource.AmountBase1</div>
                                    </th>
                                    <th>@appResource._Note</th>

                                    <th></th>
                                </tr>
                                <!--Box-->
                                <tbody class="tblBoxBody">
                                    <tr class="trBaseRow tblBoxRow" data-id="0" data-changed="0">
                                        <td class="">
                                            <button class="btn btn-light btn-sm border btnBoxAddRow" type="submit">
                                                <i class="fa fa-plus-circle"></i>
                                            </button>
                                        </td>
                                        <td class="">
                                            <div class="d-flex">
                                                <div class="col-sm-4 p-0">
                                                    <input class="form-control form-control-sm text-center txtBoxDtlCode  " type="text" required />
                                                    <input class="form-control form-control-sm text-center  txtBoxDtlId d-none" type="text" />
                                                    <input class="form-control form-control-sm text-center  txtAccountId d-none" type="text" />
                                                    <input class="form-control form-control-sm text-center  d-none txtAccountIsCostCenter" type="text" />


                                                </div>
                                                <div class="col-sm-8 p-0">
                                                    <input class="form-control form-control-sm text-center  txtBoxDtlName" type="text" required disabled />
                                                </div>
                                            </div>

                                        </td>
                                        <td class="">
                                            <div class="d-flex">
                                                <div class="col-sm-4 p-0">
                                                    <input class="form-control form-control-sm text-center  d-none txtCostCenterId" type="text" required />
                                                    <input class="form-control form-control-sm text-center  txtCostCenterCode" title="@appResource.ChoseCostCenterTitle" type="text" required />
                                                </div>
                                                <div class="col-sm-8 p-0">
                                                    <input class="form-control form-control-sm text-center  txtCostCenterName" type="text" required disabled />
                                                </div>
                                            </div>
                                        </td>
                                        <td class="">
                                            <input class="form-control form-control-sm text-center font-weight-bold txtBoxCredit" type="text" value="0" min=0 required />
                                        </td>
                                        <td class="">
                                            <input class="form-control form-control-sm text-center font-weight-bold txtCurValue" value="0" type="text" min=0 disabled />
                                        </td>
                                        <td class="">
                                            <input class="form-control form-control-sm text-center font-weight-bold txtBoxBaseCredit" type="text" value="0" min=0 required disabled />
                                        </td>
                                        <td class="">
                                            <input class="form-control form-control-sm text-center txtNotes" required onblur="funFoucus('txtItemCode')" />
                                        </td>


                                        <td><button class="btn btn-light btn-sm btnBoxDelete"><i class="fa fa-trash"></i></button></td>
                                    </tr>
                                </tbody>
                            </table>
                            <!-- Details Footer -->
                            <table class="table table-sm  border-0">
                                <tbody class="">
                                    <tr class="d-flex mr-4">
                                        <td class="col-sm-3"></td>
                                        <td class="col-sm-2"></td>

                                        <td class="col-sm-2"></td>
                                        <td class="col-sm-3">
                                            <label class="small float-right mx-1 pt-2">@appResource._Total</label>
                                        </td>
                                        <td class="col-sm-2">
                                            <input class="form-control form-control-sm text-center disabled font-weight-bold txtBoxTotal" value="0" disabled type="number" min=0 required />
                                        </td>
                                    </tr>
                                </tbody>

                            </table>
                        </div>

                    </div>
                    <div class="tab-pane fade divCheck" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                        <div class="container-fluid ">
                            <table class="table table-bordered table-hover ">
                                <!--Check    -->
                                <tr>
                                    <th></th>

                                    <th width="15%">
                                        <div class="d-flex">
                                            <div class="col-sm-4">
                                                <div>   @appResource.BankCode</div>
                                            </div>
                                            <div class="col-sm-8">
                                                <div>@appResource.BankName</div>
                                            </div>
                                        </div>
                                    </th>
                                    <th>
                                        <div>@appResource.ChequeNo</div>
                                    </th>
                                    <th>
                                        <div>
                                            @appResource.DueDate
                                        </div>
                                    </th>
                                    <th>
                                        <div class="d-flex">
                                            <div class="col-sm-3">
                                                <div>@appResource._CostCenter</div>
                                            </div>
                                            <div class="col-sm-9">
                                                <div>@appResource.CostCenterName</div>
                                            </div>
                                        </div>
                                    </th>
                                    <th>@appResource._Amount</th>
                                    <th>
                                        <div>@appResource.ExchangeRate1 </div>
                                    </th>
                                    <th>
                                        <div>@appResource.AmountBase1</div>
                                    </th>
                                    <th>@appResource._Note</th>

                                    <th></th>
                                </tr>
                                <tbody class="tblCheckBody">
                                    <!------  Check ----->
                                    <tr class="trBaseRow tblCheckRow" data-id="0" data-changed="0">
                                        <td class="">
                                            <button class="btn btn-light btn-sm border btnCheckAddRow" type="submit">
                                                <i class="fa fa-plus-circle"></i>
                                            </button>
                                        </td>
                                        <td width="10%">
                                            <div class="d-flex">
                                                <div class="col-sm-4 p-0">
                                                    <div class=" d-none">
                                                        <input class="form-control form-control-sm text-center  txtCheckAccountId" type="text" />
                                                        <input class="form-control form-control-sm text-center d-none txtCheckAccountNo" type="text" />
                                                        <input class="form-control form-control-sm text-center  d-none txtCheckAccountIsCostCenter" type="text" />
                                                    </div>
                                                    <input class="form-control form-control-sm text-center  txtCheckBankId d-none" title="@appResource.ChoseBankTitle" type="text" required />
                                                    <input class="form-control form-control-sm text-center  txtCheckBankCode " title="@appResource.ChoseBankTitle" type="text" required />
                                                </div>
                                                <div class="col-sm-8 p-0">
                                                    <input class="form-control form-control-sm text-center  txtCheckBankName" type="text" required disabled />
                                                </div>
                                            </div>
                                        </td>
                                        <td width="7%">
                                            <div class=" p-0">
                                                <input class="form-control form-control-sm text-center  txtCheckNo" type="text" required />
                                            </div>

                                        </td>
                                        <td width="10%">
                                            <input class="form-control form-control-sm text-center  font-weight-bold txtCheckPayDate" value="@DateTime.Now.ToString("yyyy-MM-dd")" type="date" />
                                        </td>
                                        <td class="">
                                            <div class="d-flex">
                                                <div class="col-sm-4 p-0">
                                                    <input class="form-control form-control-sm text-center  d-none txtCheckCostCenterId" type="text" required />
                                                    <input class="form-control form-control-sm text-center  txtCheckCostCenterCode" title="@appResource.ChoseCostCenterTitle" type="text" required />
                                                </div>
                                                <div class="col-sm-8 p-0">
                                                    <input class="form-control form-control-sm text-center  txtCheckCostCenterName" type="text" required disabled />
                                                </div>
                                            </div>

                                        </td>
                                        <td class="" width="7%">
                                            <input type="text" class=" form-control  form-control-sm text-center txtCheckCredit">

                                        </td>
                                        <td width="7%">
                                            <input class="form-control form-control-sm text-center font-weight-bold txtCurValue" value="0" type="text" min=0 disabled />
                                        </td>
                                        <td width="7%">
                                            <input class="form-control form-control-sm text-center font-weight-bold txtBaseCredit" disabled type="text" value="0" min=0 required />
                                        </td>
                                        <td class="">
                                            <input class="form-control form-control-sm text-center txtNotes" required onblur="funFoucus('txtItemCode')" />
                                        </td>

                                        <td><button class="btn btn-light btn-sm btnCheckDelete"><i class="fa fa-trash"></i></button></td>
                                    </tr>
                                </tbody>
                            </table>
                            <!-- Details Footer -->
                            <table class="table table-sm  border-0">
                                <tbody class="">
                                    <tr class="d-flex mr-4">
                                        <td class="col-sm-3"></td>
                                        <td class="col-sm-2"></td>

                                        <td class="col-sm-2"></td>
                                        <td class="col-sm-3">
                                            <label class="small float-right mx-1 pt-2">@appResource._Total</label>
                                        </td>
                                        <td class="col-sm-2">
                                            <input class="form-control form-control-sm text-center disabled font-weight-bold txtCheckTotal" value="0" disabled type="number" min=0 required />
                                        </td>
                                    </tr>
                                </tbody>

                            </table>
                        </div>
                    </div>

                    <div class="tab-pane fade divMaster" id="contact" role="tabpanel" aria-labelledby="contact-tab">


                        <div class="container-fluid">
                            <table class="table table-bordered table-hover">
                                <!--CashDesk-->
                                <tr>
                                    <th></th>
                                    <th>
                                        <div class="d-flex">
                                            <div class="col-sm-3">
                                                <div>@appResource.AccountNo</div>
                                            </div>
                                            <div class="col-sm-9">
                                                <div>@appResource.Account</div>
                                            </div>
                                        </div>
                                    </th>
                                    <th>
                                        <div>@appResource._CostCenter</div>
                                    </th>
                                    <th>
                                        <div>@appResource.CostCenterName</div>
                                    </th>
                                    <th width="7%">

                                        <div> @appResource._Amount</div>
                                    </th>
                                    <th width="7%">
                                        <div> @appResource.ExchangeRate1</div>
                                    </th>
                                    <th width="7%">@appResource.AmountBase1</th>
                                    <th>
                                        <div>@appResource._Note </div>

                                    </th>
                                    <th></th>
                                </tr>
                                <!--CashDesk-->
                                <tbody class="tblLaterBody">
                                    <tr class=" tblLaterRow" data-id="0" data-changed="0">
                                        <td class="">
                                            <button class="btn btn-light btn-sm border btnLaterAddRow" type="submit">
                                                <i class="fa fa-plus-circle"></i>
                                            </button>
                                        </td>
                                        <td class="">
                                            <div class="d-flex">
                                                <div class="col-sm-4 p-0">
                                                    <input class="form-control form-control-sm text-center  d-none txtAccountId" type="text" required />
                                                    <input class="form-control form-control-sm text-center  d-none txtAccountIsCostCenter" type="text" required />
                                                    <input type="text" class=" form-control form-control-sm text-center txtAccountCode">
                                                </div>
                                                <div class="col-sm-8 p-0">
                                                    <input class="form-control form-control-sm text-center font-weight-bold txtAccountName" disabled type="text" min=0 required />
                                                </div>
                                            </div>
                                        </td>
                                        <td class="" width="10%">
                                            <input class="form-control form-control-sm text-center  d-none txtCostCenterId" type="text" required />
                                            <input class="form-control form-control-sm text-center  txtCostCenterCode" type="text" required />
                                        </td>
                                        <td class="">
                                            <input class="form-control form-control-sm text-center  txtCostCenterName" type="text" required disabled />
                                        </td>
                                        <td class="">
                                            <input class="form-control form-control-sm text-center font-weight-bold txtLaterAmtCredit" value="0" type="text" min=0 />
                                        </td>
                                        <td class="">
                                            <input class="form-control form-control-sm text-center txtLaterCurValue" required disabled>
                                        </td>
                                        <td class="">
                                            <input class="form-control form-control-sm text-center  txtLaterBaseAmtCredit" type="text" required disabled />
                                        </td>
                                        <td class="">
                                            <input class="form-control form-control-sm text-center  txtLaterAmtNotes" type="text" required onblur="funFoucus('txtItemCode')" />
                                        </td>
                                        <td><button class="btn btn-light btn-sm btnLaterDelete"><i class="fa fa-trash"></i></button></td>
                                    </tr>
                                </tbody>
                            </table>
                            <!-- Details Footer -->
                            <table class="table table-sm  border-0">
                                <tbody class="">
                                    <tr class="d-flex mr-4">
                                        <td class="col-sm-3"></td>
                                        <td class="col-sm-2"></td>

                                        <td class="col-sm-2"></td>
                                        <td class="col-sm-3">
                                            <label class="small float-right mx-1 pt-2">@appResource._Total</label>
                                        </td>
                                        <td class="col-sm-2">
                                            <input class="form-control form-control-sm text-center disabled font-weight-bold txtLaterTotal" value="0" disabled type="number" min=0 required />
                                        </td>
                                    </tr>
                                </tbody>

                            </table>
                        </div>


                    </div>
                </div>
            </div>

        </div>
        <!-- Details Main -->
        <div class="bg-white border rounded p-3 mt-3 divGlVoucher">
            <!-- Details -->
            <table class="table table-sm table-responsive-sm">
                <thead>
                    <tr class="tblHead">
                        <th class=""></th>
                        <th class="" width="7%">
                            <div>@appResource.ProductNo</div>
                        </th>
                        <th class="" width="15%">
                            <div>@appResource.ProductName</div>
                        </th>
                        <th class="">
                            <div>@appResource.UnitId</div>
                        </th>
                        <th class="">
                            <div>@appResource.EndDate</div>
                        </th>
                        <th class="">
                            <div>@appResource._Qty</div>
                        </th>
                        <th class="">
                            <div>@appResource._Price</div>
                        </th>
                        <th class="">
                            <div>@appResource._Total</div>
                        </th>
                        <th class="">
                            <div>@appResource.Tax</div>
                        </th>
                        <th class="">
                            <div>@appResource.TotalTax</div>
                        </th>
                        <th class="">
                            <div>@appResource.TotalBase</div>
                        </th>

                        <th></th>
                    </tr>
                </thead>

                <tbody class="tblInvDtlBody">
                    <tr class="tblInvDtlRow tblRow" data-id="0" data-changed="0">
                        <td class="">
                            <button class="btn btn-light btn-sm border btnAddInvDtlRow" type="submit">
                                <i class="fa fa-plus-circle"></i>
                            </button>
                        </td>

                        <td class="">
                            <input class="form-control form-control-sm text-center  d-none txtItemId" type="text" required />
                            <input class="form-control form-control-sm text-center  txtItemCode" type="text" title="@appResource.ChoseAccountTitle" readonly required />
                        </td>
                        <td class="">
                            <input class="form-control form-control-sm text-center  txtItemName" type="text" required disabled />
                        </td>
                        <td class="" width="7%">
                            <div class="d-flex">
                                <div class="d-none">
                                    <input type="text" class="form-control form-control-sm text-center txtUnitId" required />
                                </div>
                                <div class="">
                                    <input class="form-control form-control-sm text-center font-weight-bold txtUnitName" readonly type="text" min=0 required />
                                </div>
                            </div>
                        </td>
                        <td class="" width="10%">
                            <input class="form-control form-control-sm text-center font-weight-bold txtDisDate" type="Date" value="@DateTime.Now.ToString("yyyy-MM-dd")" required />
                        </td>
                        <td class="" width="7%">
                            <input class="form-control form-control-sm text-center font-weight-bold txtItemQty" value="0" type="text" min=0 required />
                        </td>
                        <td class="">
                            <div class="">
                                <input class="form-control form-control-sm text-center txtItemPrice" type="text" required />
                            </div>
                        </td>
                        <td class="">
                            <div class="">
                                <input class="form-control form-control-sm text-center   txtTotal" type="text" required disabled />
                            </div>
                        </td>
                        <td class="">
                            <div class="">
                                <input class="form-control form-control-sm text-center   txtVatAmt " type="text" required />
                            </div>
                        </td>
                        <td class="">
                            <div class="">
                                <input class="form-control form-control-sm text-center   txtTotalVatAmt" type="text" required disabled />
                            </div>
                        </td>
                        <td class="">
                            <div class="">
                                <input class="form-control form-control-sm text-center   txtBaseTotal" type="text" required disabled />
                            </div>
                        </td>

                        <td><button class="btn btn-light btn-sm btnInvDtlDelete"><i class="fa fa-trash"></i></button></td>
                    </tr>
                </tbody>

            </table>

            <!-- Details Footer -->
            <table class="table table-sm tblFooter border-0">
                <tbody class="">
                    <tr class=" mr-4">
                        <td class="">
                            <label class="small float-right mx-1 pt-2">@appResource.Total</label>
                        </td>
                        <td class="" width="15%">
                            <input class="form-control form-control-sm text-center disabled font-weight-bold txtInvTotal" value="0.00" disabled type="number" min=0 required />
                        </td>
                    </tr>
                    <tr class=" mr-4">
                        <td class="">
                            <label class="small float-right mx-1 pt-2">@appResource.DiscValue</label>
                        </td>
                        <td class="">
                            <input class="form-control form-control-sm text-center disabled font-weight-bold txtInvDisc" value="0.00" type="number" min=0 required />
                        </td>
                    </tr>
                    <tr class=" mr-4">
                        <td class="">
                            <label class="small float-right mx-1 pt-2"> @appResource.DiscPerc %</label>
                        </td>
                        <td class="">
                            <input class="form-control form-control-sm text-center disabled font-weight-bold txtDiscPerc" value="" type="number" min=0 required />
                        </td>
                    </tr>
                    <tr class=" mr-4">
                        <td class="">
                            <label class="small float-right mx-1 pt-2">@appResource.TotalTax</label>
                        </td>
                        <td class="">
                            <input class="form-control form-control-sm text-center disabled font-weight-bold txtTotalVat" value="0.00" disabled type="number" min=0 required />
                        </td>
                    </tr>
                    <tr class=" mr-4">
                        <td class="">
                            <label class="small float-right mx-1 pt-2"> @appResource.TotalFinal</label>
                        </td>
                        <td class="">
                            <input class="form-control form-control-sm text-center disabled font-weight-bold txtFinalTotal" value="0.00" disabled type="number" min=0 required />
                        </td>
                    </tr>
                </tbody>

            </table>







        </div>
    </div>

    <!-- AccountData Modal -->
    <div id="AccountDataModal" class="fade modal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content" id="AccountDataModalContent"></div>
        </div>
    </div>

    <!-- CostCenterData Modal -->
    <div id="CostCenterDataModal" class="fade modal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content" id="CostCenterDataModalContent"></div>
        </div>
    </div>

    <!-- Confirm Delete Modal -->
    <div id="confirmDeleteModal" class="fade modal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content" id="confirmDeleteModalContent"></div>
        </div>
    </div>
    <script>


$('.btnStorePost').on('click', function () {
       var vInvId = $('.txtInvId').val()
        $('#loading').show();
        if(vInvId!='0'){
        $.post('/Period/PostInvoice', { InvId: vInvId }, function (data) {
            console.log(data)
            $('#loading').hide();

            var Json = JSON.parse(data);

           funNotification(Json[0].msg,1 );
        })
        }else{
        $('#loading').hide();
        funNotification('يجب اختيار فاتورة شراء ',2 );
        }
    })
            var   Item = $.parseJSON($.ajax({
            url: '/api/APIInvItem/InvItemGET',
            dataType: "json",
            method: 'GET', contentType: 'application/json',
            data: {pItemType: '@ItemType.Items.ToString()', pQueryTypeId: '700', pItemSales: null },
            async: false
              }).responseText);

        localStorage.setItem("Item",Item)

        // Check If IT Check Or CashDesk
        var vIsCashDesk = $('.clsCashDesk').attr('aria-selected');
        $('body').on('click', '#myTab', function () {
            vIsCashDesk = $('.clsCashDesk').attr('aria-selected');
        })

        // Save All Vouchers
        function funSaveALL() {

             $('.btnSave').attr('disabled', 'disabled');
            $('#loading').show();
            $('.tblInvDtlRow input').removeClass('errorClass');
            var valid = true;
            $('.tblInvDtlRow').each(function () {
                var vElement = $(this);
                //var vRowData = $(this).closest('tr');
                var vdItemId = $(this).find('.txtItemId').val()
                var vdUnitId = $(this).find('.txtUnitId').val()
                var vdItemQty = $(this).find('.txtItemQty').val()
                var vdItemPrice = $(this).find('.txtItemPrice').val()
                if (vdUnitId == '' || vdItemId == '' || vdItemPrice=='' || vdItemQty=='' || vdItemQty=='0') {
                                  // Error Class Validation
                                if (vdItemId == '' || vdItemId == '0') {
                                    vElement.find('.txtItemName').addClass('errorClass')
                                }
                                if (vdUnitId == '' || vdUnitId == '0') {
                                    vElement.find('.txtUnitName').addClass('errorClass')
                                }
                                if (vdItemQty == '' || vdItemQty == '0') {
                                    vElement.find('.txtItemQty').addClass('errorClass')
                                    }
                                      if (vdItemPrice == '' || vdItemPrice == '0') {
                                    vElement.find('.txtItemPrice').addClass('errorClass')}
                    valid = false;
                }
            });

            if (valid == true) {
                // Save  ALL
            funSave()

            } else {
                funNotification('يجب استكمال البيانات', 3);
                $('#loading').hide();
                $('.btnSave').removeAttr('disabled');
            }

        }

        // Save Using button
        $('.btnSave').on('click', function () {
            // Save  ALL
            funSaveALL()

        }) // End BtnSave
        // Save Using F10
        $('body').on('keyup', function (e) {
            // Check F10
            if (e.keyCode == 121) {
                // Save  ALL
                funSaveALL()
            }
        })




        $('body').on('click', '.btnLaterDelete', function () {
            // Id - NameAr - NameEn
            var vElement = $(this)
            var vDataId = $(this).attr('data-id');
            var vDataName = $(this).attr('data-name');
            // URL
            var vDataURL = '/ViewSetting/ViewSettingConfirmDelete/';
            // Get HTML Content of [Confirm Delete] Partial View
            $.get(
                // URL
                vDataURL,
                // Parameters
                {
                    id: vDataId,
                    pName: vDataName,
                },
                // Function
                function (data, status) {
                    if (vDataId > 0) {
                        // Modal
                        $('#confirmDeleteModalContent').html(data);
                        $('#confirmDeleteModal').modal('show');
                        // Click Event [Delete Confirm]
                        $("body").on("click", "#btnDeleteConfirm", function () {
                            // Delete Action URL
                            var vDeleteActionURL = '/api/APIINVInvoice/INVInvoiceGET';
                            // Delete
                            $.get(vDeleteActionURL,
                                {
                                    // Detail Parameters
                                    pInvLaterId: vDataId,
                                    pIsDeleted: true,
                                    ppType: 3,
                                    // Query Type Id
                                    pQueryTypeId: '300'
                                }, function (data, status) {
                                    var vResultData = JSON.parse(data)
                                    vElement.closest('tr').remove();
                                    // Check If IT The Last Row
                                    var vLastRow = $('.tblLaterBody').find('tr').attr('data-id')
                                    // Add Row If Empty
                                    if (vLastRow == undefined) {
                                        funAddLaterEmptyRow($('.tblLaterBody'))
                                    }

                                    funNotification(vResultData[0].SystemMessageText, vResultData[0].SystemMessageTypeId);

                                });
                        });
                    }
                    else {
                        // Only Delete The Row
                        vElement.closest('tr').remove();
                        // Check If IT The Last Row
                        var vLastRow = $('.tblLaterBody').find('tr').attr('data-id')
                        // Add Row If Empty
                        if (vLastRow == undefined) {
                            funAddLaterEmptyRow($('.tblLaterBody'))
                        }
                    }
                });
        }); // End of Click Event [Delete Button]




        $('body').on('click', '.btnBoxDelete', function () {
            // Id - NameAr - NameEn
            var vElement = $(this)
            var vDataId = $(this).attr('data-id');
            var vDataName = $(this).attr('data-name');
            // URL
            var vDataURL = '/ViewSetting/ViewSettingConfirmDelete/';
            // Get HTML Content of [Confirm Delete] Partial View
            $.get(
                // URL
                vDataURL,
                // Parameters
                {
                    id: vDataId,
                    pName: vDataName,
                },
                // Function
                function (data, status) {
                    if (vDataId > 0) {
                        // Modal
                        $('#confirmDeleteModalContent').html(data);
                        $('#confirmDeleteModal').modal('show');
                        // Click Event [Delete Confirm]
                        $("body").on("click", "#btnDeleteConfirm", function () {
                            // Delete Action URL
                            //var vDeleteActionURL = '/api/APIINVInvoice/INVInvoiceGET';
                            var vDeleteActionURL = '/api/APIInvBoxes/BoxGET';
                            // Delete
                            $.get(vDeleteActionURL,
                                {
                                    //Detail Parameters
                                    pBoxId: vDataId,
                                    pIsDeleted: true,
                                    // Query Type Id
                                    pQueryTypeId: '300'
                                }, function (data, status) {
                                    var vResultData = JSON.parse(data)
                                    vElement.closest('tr').remove();
                                    // Check If IT The Last Row
                                    var vLastRow = $('.tblBoxBody').find('tr').attr('data-id')

                                    // Add Row If Empty
                                    if (vLastRow == undefined) {
                                        funCheckConfig($('.tblBoxBody'))
                                    }
                                    funNotification(vResultData[0].SystemMessageText, vResultData[0].SystemMessageTypeId);

                                });
                        });
                    }
                    else {
                        // Only Delete The Row
                        vElement.closest('tr').remove();
                        // Check If IT The Last Row
                        var vLastRow = $('.tblBoxBody').find('tr').attr('data-id')
                        // Add Row If Empty
                        if (vLastRow == undefined) {
                            funCheckConfig($('.tblBoxBody'))
                        }
                    }
                });
        }); // End of Click Event [Delete Button]






        //Delete
        $('body').on('click', '.btnCheckDelete', function () {
            //Element
            var vElement = $(this)
            var vId = $(this).attr('data-id')
            var vDataId = $(this).attr('data-id');
            var vDataName = $(this).attr('data-name');
            // URL
            var vDataURL = '/ViewSetting/ViewSettingConfirmDelete/';
            // Get HTML Content of [Confirm Delete] Partial View
            $.get(
                // URL
                vDataURL,
                // Parameters
                {
                    id: vDataId,
                    pName: vDataName,
                },
                // Function
                function (data, status) {
                    if (vDataId > 0) {
                        // Modal
                        $('#confirmDeleteModalContent').html(data);
                        $('#confirmDeleteModal').modal('show');
                        // Click Event [Delete Confirm]
                        $("body").on("click", "#btnDeleteConfirm", function () {
                            // Save Row
                            $.get('/api/APIInvChecks/CheckGET',
                                {
                                    // Detail Parameters
                                    //pdInvDTLId: vId,
                                    pCheckId: vId,
                                    pIsDeleted: true,
                                    // Query Type Id
                                    pQueryTypeId: '300'
                                },
                                function (data, status) {
                                    var vResultData = JSON.parse(data)
                                    var vLastRow = $('.tblCheckBody').find('tr').attr('data-id')

                                    vElement.closest('tr').remove();
                                    // Add Row If Empty
                                    if (vLastRow == undefined) {
                                        funAddCheckEmptyRow($('.tblCheckBody'))
                                    }
                                    // Notification
                                    funNotification(vResultData[0].SystemMessageText, vResultData[0].SystemMessageTypeId);
                                })
                        });
                    }
                    else {
                        // Only Delete The Row
                        vElement.closest('tr').remove();
                        // Check If IT The Last Row
                        var vLastRow = $('.tblCheckBody').find('tr').attr('data-id')
                        // Add Row If Empty
                        if (vLastRow == undefined) {

                            // Add Row If Empty
                            if (vLastRow == undefined) {
                                funAddCheckEmptyRow($('.tblCheckBody'))
                            }


                        }
                    }
                });

        })





        $('body').on('click', '.btnInvDtlDelete', function () {
            // Id - NameAr - NameEn
            var vElement = $(this)
            var vDataId = $(this).attr('data-id');
            var vDataName = $(this).attr('data-name');
            // URL
            var vDataURL = '/ViewSetting/ViewSettingConfirmDelete/';
            // Get HTML Content of [Confirm Delete] Partial View
            $.get(
                // URL
                vDataURL,
                // Parameters
                {
                    id: vDataId,
                    pName: vDataName,
                },
                // Function
                function (data, status) {
                    if (vDataId > 0) {
                        // Modal
                        $('#confirmDeleteModalContent').html(data);
                        $('#confirmDeleteModal').modal('show');
                        // Click Event [Delete Confirm]
                        $("body").on("click", "#btnDeleteConfirm", function () {
                            // Delete Action URL
                            var vDeleteActionURL = '/api/APIINVInvoice/INVInvoiceGET';
                            // Delete
                            $.get(vDeleteActionURL,
                                {
                                    // Detail Parameters
                                    pdInvDTLId: vDataId,
                                    pdIsDeleted: true,
                                    // Query Type Id
                                    ppType: 2,
                                    pQueryTypeId: '300'
                                }, function (data, status) {
                                    var vResultData = JSON.parse(data)
                                    vElement.closest('tr').remove();
                                    // Check If IT The Last Row
                                    var vLastRow = $('.tblInvDtlRow').find('tr').attr('data-id')

                                    // Add Row If Empty
                                    if (vLastRow == undefined) {
                                        funInvDtlConfig($('.tblInvDtlRow'))
                                    }
                                    funNotification(vResultData[0].SystemMessageText, vResultData[0].SystemMessageTypeId);

                                });
                        });
                    }
                    else {
                        // Only Delete The Row
                        vElement.closest('tr').remove();
                        // Check If IT The Last Row
                        var vLastRow = $('.tblInvDtlRow').find('tr').attr('data-id')
                        // Add Row If Empty
                        if (vLastRow == undefined) {
                            funInvDtlConfig($('.tblInvDtlRow'))
                        }
                    }
                    funTotalInvDtl();
                });
        }); // End of Click Event [Delete Button]

        //$('body').on('click', '.btnInvDtlDelete', function () {
        //    //Element
        //    var vElement = $(this)
        //    var vId = $(this).attr('data-id')
        //    // Save Row
        //    $.get('/api/APIINVInvoice/INVInvoiceGET',
        //        {
        //            // Detail Parameters
        //            pdInvDTLId: vId,
        //            pdIsDeleted: true,
        //            // Query Type Id
        //            ppType: 2,
        //            pQueryTypeId: '300'
        //        },
        //        function (data, status) {
        //            var vResultData = JSON.parse(data)
        //            vElement.closest('tr').remove();
        //            // Notification
        //            funNotification(vResultData[0].SystemMessageText, vResultData[0].SystemMessageTypeId);
        //        })
        //})

    </script>

    <!--function  Save GL Voucher Head -->
    <script>



   function funSave() {
        var vIsValid = true;
            //phInvId
       var vInvId = $('.txtInvId').val();
       //var vInvId = $('.txtInvId').val()
            // vhInvtype
            var vhInvtype = $('.txtInvType').val();
            // Get StorId
            var vStoreId = $('.txtStoreId').val()
            // Supllier
            var vCustomerId = $('.txtCustomerId').val();
            // Date
            var vInvDate = $('.dtpInvDate').val();
            // Valid Date
            var vDateCheck = $('.txtCheckDate').val();
         var vDocRefNo = $('.txtDocRefNo').val()
        // Ref Date
        var vhInvRefDate = $('.txtDocRefDate').val();
            // PayMentType

            var vhPayBox = $('#chkIsBox').prop('checked');
            var vhPayCheck = $('#chkIsCheck').prop('checked');
            var vhPayLater = $('#chkIsLater').prop('checked');

            // Disc
            var Discount = $('.txtInvDisc').val();
            var DiscPerc = $('.txtDiscPerc').val();
            var FinalTotal = $('.txtFinalTotal').val();

            var vTotalBox = $('.txtBoxTotal').val()
            var vTotalCheck = $('.txtCheckTotal').val()
            var vTotalLater = $('.txtLaterTotal').val()
            var vInvTotal = $('.txtInvTotal').val()
            var vIsBalanced = true;
        if (vInvId == '0' || vInvId == '') {
            if (vDateCheck == 'true') {

                if (vStoreId && vCustomerId) {


                    Valid = true;
                    let InvoiceDtls = [];
                    // Check Rows
                    $('.tblInvDtlRow').each(function (i) {
                        var vDtlRowId = $(this).attr('data-id');
                            var vTableDTLRow = $(this);
                            var vdItemId = $(this).find('.txtItemId').val()
                            var vdUnitId = $(this).find('.txtUnitId').val()
                            var vDisDate = $(this).find('.txtDisDate').val()
                            var vdItemQty = $(this).find('.txtItemQty').val()
                            var vdItemPrice = $(this).find('.txtItemPrice').val()
                            var vdVatAMT = $(this).find('.txtVatAmt').val()
                            var vdTotalItemCredit = $(this).find('.txtTotal').val()
                            var vdTotalBaseItemCredit = $(this).find('.txtBaseTotal').val()
                        if (vdUnitId) {
                            let Item = {
                                InvDTLId: vDtlRowId,
                                InvId: vInvId,
                                ItemId: vdItemId,
                                UnitId: vdUnitId,
                                ItemQty: vdItemQty,
                                Qty: vdItemQty,
                                ItemPrice: vdItemPrice,
                                Price: vdItemPrice,
                                TotalItemSbaseCredit: vdTotalItemCredit,

                                /*ExpireDate: vdExpireDate,
                                ItemCurVALUE: vdItemCurVALUE,
                                DiscType: vdDiscType,
                                DiscValue: vdDiscValue,
                                Notes: vdNotes,*/
                                StoreId: vStoreId,
                                IsDeleted: false,
                                VatAmt:vdVatAMT
                          }
                            InvoiceDtls.push(Item);}
                        else
                        {
                            Valid = false;
                        }
                    })// DTL Rows
                    console.log(InvoiceDtls)
                    $.ajax({
                        url: '/Invoice/InsertPaymentOrderDtlBulk',
                        method: 'POST', contentType: 'application/json',
                        data: JSON.stringify({
                            InvoiceDtls,
                            InvId: vInvId,
                            UserId: '@UserId',
                            BranchId: '@BranchId',
                            InvType:3,
                            CustomerId: vCustomerId,
                            StoreId: vStoreId,
                            InvDate: vInvDate,
                            PayCash: vhPayBox,
                            PayCheck: vhPayCheck,
                            PayLater: vhPayLater,
                           // Notes: vNote,
                            InvRef: vDocRefNo,
                            InvRefDate: vhInvRefDate,
                            IsDeleted: false,

                        }),
                        success: function (r) {
                            $('.btnSave').removeAttr('disabled');
                            $('#loading').hide();
                            var data = JSON.parse(r);
                            if (data[0].SuccessStatus == 'undefined' || data[0].SuccessStatus == false) {
                                funNotification(data[0].SystemMessageText, 3);
                                return;
                            }
                            funNotification('@appResource.msgSave', 1)
                            console.log(data[0].InvId)
                            $('.txtInvId').val(data[0].InvId);
                            $('.txtDocNo').val(data[0].InvId);
          if (vhPayBox) {
                            // Save Check
                            $('.tblBoxRow').each(function () {
                                var vRowId = $(this).attr('data-id');
                                var vTableRow = $(this);
                                var vBoxDtlId = $(this).find('.txtBoxDtlId').val();
                                var vInvId = vInvId;
                                var vInvType = vhInvtype;
                                var vYear = "";
                                var vAccountId = $(this).find('.txtAccountId').val();;
                                var vCostCenterId = $(this).find('.txtCostCenterId').val();
                                var vBoxCredit = $(this).find('.txtBoxCredit').val();
                                var vCurValue = $(this).find('.txtCurValue').val();
                                var vBoxBaseCredit = $(this).find('.txtBoxBaseCredit').val();
                                var vNotes = $(this).find('.txtNotes').val();
                                if (!vBoxDtlId || vBoxDtlId.trim() == '' || vBoxDtlId == '0') {
                                    if (vIsValid == true) {
                                        vIsValid = false

                                        vTableRow.find('.txtBoxDtlCode').focus();
                                        vTableRow.find('.txtBoxDtlCode').css("border-color", "red");
                                    }

                                }
                                else if (!vBoxCredit || vBoxCredit.trim() == '' || vBoxCredit == '0') {
                                    if (vIsValid == true) {
                                        vIsValid = false
                                        vTableRow.find('.txtBoxCredit').focus();
                                        vTableRow.find('.txtBoxCredit').css("border-color", "red");
                                    }

                                }
                                else {
                                    if (vTableRow.attr('data-changed') == '1') {
                                        vTableRow.attr('data-changed', '0')
                                        // Function Save
                                        $.post('/InvBoxes/funBoxes/',
                                            {
                                                pBoxID: vRowId,
                                                pBoxDtlId: vBoxDtlId,
                                                pInvId: vInvId,
                                                pInvType: vInvType,
                                                pAccountId: vAccountId,
                                                pCostCenterId: vCostCenterId,
                                                pBoxCredit: vBoxCredit,
                                                pCurValue: vCurValue,
                                                pBoxBaseCredit: vBoxBaseCredit,
                                                pNotes: vNotes,
                                                pQueryTypeId: '100'
                                            }, function (data) {
                                                if (data != undefined && data != '') {
                                                    var vDataResult = JSON.parse(data)
                                                    vTableRow.attr('data-id', vDataResult[0].BoxId)
                                                    vTableRow.find('.btnBoxDelete').attr('data-id', vDataResult[0].BoxId)
                                                }

                                            });
                                    }
                                }

                            })

                        }

                        if (vhPayCheck) {
                            // Save Check
                            $('.tblCheckRow').each(function () {
                                // Id
                                var vRowId = $(this).attr('data-id');
                                var vTableCheckRow = $(this);
                                // INV Id
                                var vInvId = vInvId;
                                //AccountId
                                var vAccountId = $(this).find('.txtCheckAccountId').val();
                                // vCheckCostCenterId
                                var vCostCenterId = $(this).find('.txtCheckCostCenterId').val();
                                // CheckBank
                                var vCheckBankId = $(this).find('.txtCheckBankId').val();
                                // CheckNo
                                var vCheckNo = $(this).find('.txtCheckNo').val();
                                // CheckDate
                                var vCheckDate = $(this).find('.txtCheckPayDate').val();

                                // vCheckCredit
                                var vCheckCredit = $(this).find('.txtCheckCredit').val();
                                // vCurValue
                                var vCurValue = $(this).find('.txtCurValue').val();
                                // vCheckBaseCredit
                                var vCheckBaseCredit = $(this).find('.txtBaseCredit').val();
                                // vCheckNote
                                var vNotes = $(this).find('.txtNotes').val();
                                if (!vCheckBankId || vCheckBankId.trim() == '' || vCheckBankId == '0') {
                                    if (vIsValid == true) {
                                        vIsValid = false
                                        vTableCheckRow.find('.txtCheckBankCode').focus();
                                        vTableCheckRow.find('.txtCheckBankCode').css("border-color", "red");
                                    }


                                }
                                else if (!vCheckNo || vCheckNo.trim() == '' || vCheckNo == '0') {
                                    if (vIsValid == true) {
                                        vIsValid = false
                                        vTableCheckRow.find('.txtCheckNo').focus();
                                        vTableCheckRow.find('.txtCheckNo').css("border-color", "red");
                                    }

                                }
                                else if (!vCheckCredit || vCheckCredit.trim() == '' || vCheckCredit == '0') {
                                    if (vIsValid == true) {
                                        vIsValid = false
                                        vTableCheckRow.find('.txtCheckCredit').focus();
                                        vTableCheckRow.find('.txtCheckCredit').css("border-color", "red");
                                    }

                                }
                                else {
                                    if (vTableCheckRow.attr('data-changed') == '1') {
                                        vTableCheckRow.attr('data-changed', '0')
                                        // Function Save
                                        $.post('/InvChecks/funSaveCheck/',
                                            {
                                                pCheckID: vRowId,
                                                pInvId: vInvId,
                                                pAccountId: vAccountId,
                                                pCostCenterId: vCostCenterId,
                                                pBankId: vCheckBankId,
                                                pCheckNo: vCheckNo,
                                                pCheckPayDate: vCheckDate,
                                                pCheckCredit: vCheckCredit,
                                                pCurValue: vCurValue,
                                                pCheckBaseCredit: vCheckBaseCredit,
                                                pNotes: vNotes,
                                                pQueryTypeId: '100'
                                            }, function (data) {
                                                if (data != undefined && data != '') {
                                                    var vDataResult = JSON.parse(data)
                                                    vTableCheckRow.attr('data-id', vDataResult[0].CheckID)
                                                    vTableCheckRow.find('.btnCheckDelete').attr('data-id', vDataResult[0].CheckID)
                                                }

                                            });
                                    }
                                }

                            })
                        }

                        if (vhPayLater) {

                            // Later Rows
                            $('.tblLaterRow').each(function () {
                                var vLaterRowId = $(this).attr('data-id');
                                var vTableLaterRow = $(this);
                                var vAccountId = $(this).find('.txtAccountId').val()
                                var vCostCenterId = $(this).find('.txtCostCenterId').val()
                                var vLaterAmtCredit = $(this).find('.txtLaterAmtCredit').val()
                                var vLaterBaseAmtCredit = $(this).find('.txtLaterBaseAmtCredit').val()
                                var vLaterCurValue = $(this).find('.txtLaterCurValue').val()
                                var vNotes = $(this).find('.txtLaterAmtNotes').val()
                                if (!vLaterRowId || vLaterRowId.trim() == '' || vLaterRowId == '0') {
       // INV LATER
                                        $.post('/InvoicePaymentOrder/funINVInvoice/',
                                            {
                                                pInvLaterId: vLaterRowId,
                                                pLInvId: data[0].InvId,
                                                pAccountId: vAccountId,
                                                pCostCenterId: vCostCenterId,
                                                pLaterAmtCredit: vLaterAmtCredit,
                                                pLaterBaseAmtCredit: vLaterBaseAmtCredit,
                                                pLaterCurValue: vLaterCurValue,
                                     phInvRef: vDocRefNo,

                                                pNotes: vNotes,
                                                pStoreId: vStoreId,

                                                pIsDeleted: false,
                                                ppType: 3,
                                                pQueryTypeId: 100
                                            }, function (data) {
                                                if (data != undefined && data != '') {
                                                    var vDataResult = JSON.parse(data)
                                                    vTableLaterRow.attr('data-id', vDataResult[0].InvLaterId)
                                                    vTableLaterRow.find('.btnLaterDelete').attr('data-id', vDataResult[0].InvLaterId)
                                                }


                                            })

                                    if (vIsValid == true) {
                                        //vIsValid = false
                                        vTableLaterRow.find('.txtAccountCode').focus();
                                    }

                                }
                                else if (!vLaterAmtCredit || vLaterAmtCredit.trim() == '' || vLaterAmtCredit == '0') {
                                    if (vIsValid == true) {
                                        //vIsValid = false
                                        vTableLaterRow.find('.txtLaterAmtCredit').focus();
                                        vTableLaterRow.find('.txtLaterAmtCredit').css("border-color", "red");
                                    }

                                }
                                else if(1==1) {
                                    if (vTableLaterRow.attr('data-changed') == '1') {
                                        vTableLaterRow.attr('data-changed', '0')


                                    }
                                }

                            })
                        }

                            //    Clear()
                        }
                    });
                    //     })
                    // if (Valid) {
                    // funNotification('@appResource.msgSave', 1)
                    // Clear()
                    // }
                    // else {
                    //      funNotification('@appResource.msgCompleteData',2)
                    //  }
                }
                else {
                    funValidation();
                    funNotification('@appResource.msgCompleteData', '2');
                }
            }
            else {
                funNotification('@appResource.msgCheckFinancialYear', '2');
            }
        }

                else {
            funNotification('لا يوجد تعديل', 2)
            $('#loading').hide();
            $('.btnSave').removeAttr('disabled');
                }

    } // Save All

        // Add Validation
    function funValidation()
    {

        // Get StorId
        var vStore = $('.txtStoreCode').val()
        // Supllier
        var vCustomer = $('.txtCustomerCode').val();
        if (vStore) {
            $('.txtStore').removeClass('error')
        }
        else {
            $('.txtStore').addClass('error')
        }
        if (vCustomer == '') {
            $('.txtCustomer').addClass('error')
        }
        else {
            $('.txtCustomer').removeClass('error')
        }

    }

        function funSaveOld() {
            var vIsValid = true;
            //phInvId
            var vInvId = $('.txtInvId').val();
            // vhInvtype
            var vhInvtype = $('.txtInvType').val();
            // Get StorId
            var vStoreId = $('.txtStoreId').val()
            // Supllier
            var vCustomerId = $('.txtCustomerId').val();
            // Date
            var vInvDate = $('.dtpInvDate').val();
            // Valid Date
            var vDateCheck = $('.txtCheckDate').val();
         var vDocRefNo = $('.txtDocRefNo').val()
         var vDocRefDate = $('.txtDocRefDate').val()
            // PayMentType
            var vhPayBox = $('#chkIsBox').prop('checked');
            var vhPayCheck = $('#chkIsCheck').prop('checked');
            var vhPayLater = $('#chkIsLater').prop('checked');

            // Disc
            var Discount = $('.txtInvDisc').val();
            var DiscPerc = $('.txtDiscPerc').val();
            var FinalTotal = $('.txtFinalTotal').val();

            var vTotalBox = $('.txtBoxTotal').val()
            var vTotalCheck = $('.txtCheckTotal').val()
            var vTotalLater = $('.txtLaterTotal').val()
            var vInvTotal = $('.txtInvTotal').val()
            var vIsBalanced = true;

        if(vCustomerId==''||vCustomerId==null){
        funNotification('المورد فارغ', 2);
        return;

        }
           // if (vDateCheck == 'true') {
                if (vhPayBox) {
                    if (Number(vTotalBox) != Number(vInvTotal)) {
                        vIsBalanced = false;
                    }
                }
                if (vhPayCheck) {
                    if (Number(vTotalCheck) != Number(vInvTotal)) {
                        vIsBalanced = false;
                    }

                }
                if (vhPayLater) {
                    if (Number(vTotalLater) != Number(vInvTotal)) {
                        vIsBalanced = false;
                    }
                }
                if (vIsBalanced == false) {
                    funNotification('@appResource.msgNotBalancedBill', 2);
                }
                if (vIsBalanced == true) {

                //  Head
                $.get('/api/APIINVInvoice/INVInvoiceGET',
                    {
                        phInvId: vInvId,
                        phInvtype: vhInvtype,
                        phCustomerId: vCustomerId,
                        phStoreId: vStoreId,
                        phInvDate: vInvDate,
                        phIsDeleted: false,
                        phPayCash: vhPayBox,
                        phPayCheck: vhPayCheck,
                        phPayLater: vhPayLater,
                        phDiscPerc: DiscPerc,
                        phInvDisc: Discount,
                        phInvBaseAmt: FinalTotal,
                        phInvRef: vDocRefNo,
                        ppType: 1,
                        pQueryTypeId: '100',
                        branchId:@BranchId
                    }, function (data) {
                        var vDataResult = JSON.parse(data)
                        if (vInvId == 0) {
                            //alert(vDataResult[0].InvId)
                            $('.txtInvId').val(vDataResult[0].InvId)
                            $('.txtDocNo').val(vDataResult[0].INVCode)
                        }
                        var vInvId = vDataResult[0].InvId


                        if (vhPayBox) {
                            // Save Check
                            $('.tblBoxRow').each(function () {
                                var vRowId = $(this).attr('data-id');
                                var vTableRow = $(this);
                                var vBoxDtlId = $(this).find('.txtBoxDtlId').val();
                                var vInvId = vInvId;
                                var vInvType = vhInvtype;
                                var vYear = "";
                                var vAccountId = $(this).find('.txtAccountId').val();;
                                var vCostCenterId = $(this).find('.txtCostCenterId').val();
                                var vBoxCredit = $(this).find('.txtBoxCredit').val();
                                var vCurValue = $(this).find('.txtCurValue').val();
                                var vBoxBaseCredit = $(this).find('.txtBoxBaseCredit').val();
                                var vNotes = $(this).find('.txtNotes').val();
                                if (!vBoxDtlId || vBoxDtlId.trim() == '' || vBoxDtlId == '0') {
                                    if (vIsValid == true) {
                                        vIsValid = false

                                        vTableRow.find('.txtBoxDtlCode').focus();
                                        vTableRow.find('.txtBoxDtlCode').css("border-color", "red");
                                    }

                                }
                                else if (!vBoxCredit || vBoxCredit.trim() == '' || vBoxCredit == '0') {
                                    if (vIsValid == true) {
                                        vIsValid = false
                                        vTableRow.find('.txtBoxCredit').focus();
                                        vTableRow.find('.txtBoxCredit').css("border-color", "red");
                                    }

                                }
                                else {
                                    if (vTableRow.attr('data-changed') == '1') {
                                        vTableRow.attr('data-changed', '0')
                                        // Function Save
                                        $.post('/InvBoxes/funBoxes/',
                                            {
                                                pBoxID: vRowId,
                                                pBoxDtlId: vBoxDtlId,
                                                pInvId: vInvId,
                                                pInvType: vInvType,
                                                pAccountId: vAccountId,
                                                pCostCenterId: vCostCenterId,
                                                pBoxCredit: vBoxCredit,
                                                pCurValue: vCurValue,
                                                pBoxBaseCredit: vBoxBaseCredit,
                                                pNotes: vNotes,
                                                pQueryTypeId: '100'
                                            }, function (data) {
                                                if (data != undefined && data != '') {
                                                    var vDataResult = JSON.parse(data)
                                                    vTableRow.attr('data-id', vDataResult[0].BoxId)
                                                    vTableRow.find('.btnBoxDelete').attr('data-id', vDataResult[0].BoxId)
                                                }

                                            });
                                    }
                                }

                            })

                        }

                        if (vhPayCheck) {
                            // Save Check
                            $('.tblCheckRow').each(function () {
                                // Id
                                var vRowId = $(this).attr('data-id');
                                var vTableCheckRow = $(this);
                                // INV Id
                                var vInvId = vInvId;
                                //AccountId
                                var vAccountId = $(this).find('.txtCheckAccountId').val();
                                // vCheckCostCenterId
                                var vCostCenterId = $(this).find('.txtCheckCostCenterId').val();
                                // CheckBank
                                var vCheckBankId = $(this).find('.txtCheckBankId').val();
                                // CheckNo
                                var vCheckNo = $(this).find('.txtCheckNo').val();
                                // CheckDate
                                var vCheckDate = $(this).find('.txtCheckPayDate').val();

                                // vCheckCredit
                                var vCheckCredit = $(this).find('.txtCheckCredit').val();
                                // vCurValue
                                var vCurValue = $(this).find('.txtCurValue').val();
                                // vCheckBaseCredit
                                var vCheckBaseCredit = $(this).find('.txtBaseCredit').val();
                                // vCheckNote
                                var vNotes = $(this).find('.txtNotes').val();
                                if (!vCheckBankId || vCheckBankId.trim() == '' || vCheckBankId == '0') {
                                    if (vIsValid == true) {
                                        vIsValid = false
                                        vTableCheckRow.find('.txtCheckBankCode').focus();
                                        vTableCheckRow.find('.txtCheckBankCode').css("border-color", "red");
                                    }


                                }
                                else if (!vCheckNo || vCheckNo.trim() == '' || vCheckNo == '0') {
                                    if (vIsValid == true) {
                                        vIsValid = false
                                        vTableCheckRow.find('.txtCheckNo').focus();
                                        vTableCheckRow.find('.txtCheckNo').css("border-color", "red");
                                    }

                                }
                                else if (!vCheckCredit || vCheckCredit.trim() == '' || vCheckCredit == '0') {
                                    if (vIsValid == true) {
                                        vIsValid = false
                                        vTableCheckRow.find('.txtCheckCredit').focus();
                                        vTableCheckRow.find('.txtCheckCredit').css("border-color", "red");
                                    }

                                }
                                else {
                                    if (vTableCheckRow.attr('data-changed') == '1') {
                                        vTableCheckRow.attr('data-changed', '0')
                                        // Function Save
                                        $.post('/InvChecks/funSaveCheck/',
                                            {
                                                pCheckID: vRowId,
                                                pInvId: vInvId,
                                                pAccountId: vAccountId,
                                                pCostCenterId: vCostCenterId,
                                                pBankId: vCheckBankId,
                                                pCheckNo: vCheckNo,
                                                pCheckPayDate: vCheckDate,
                                                pCheckCredit: vCheckCredit,
                                                pCurValue: vCurValue,
                                                pCheckBaseCredit: vCheckBaseCredit,
                                                pNotes: vNotes,
                                                pQueryTypeId: '100'
                                            }, function (data) {
                                                if (data != undefined && data != '') {
                                                    var vDataResult = JSON.parse(data)
                                                    vTableCheckRow.attr('data-id', vDataResult[0].CheckID)
                                                    vTableCheckRow.find('.btnCheckDelete').attr('data-id', vDataResult[0].CheckID)
                                                }

                                            });
                                    }
                                }

                            })
                        }

                        if (vhPayLater) {
                            // Later Rows
                            $('.tblLaterRow').each(function () {
                                var vLaterRowId = $(this).attr('data-id');
                                var vTableLaterRow = $(this);
                                var vAccountId = $(this).find('.txtAccountId').val()
                                var vCostCenterId = $(this).find('.txtCostCenterId').val()
                                var vLaterAmtCredit = $(this).find('.txtLaterAmtCredit').val()
                                var vLaterBaseAmtCredit = $(this).find('.txtLaterBaseAmtCredit').val()
                                var vLaterCurValue = $(this).find('.txtLaterCurValue').val()
                                var vNotes = $(this).find('.txtLaterAmtNotes').val()
                                if (!vLaterRowId || vLaterRowId.trim() == '' || vLaterRowId == '0') {
                                    if (vIsValid == true) {
                                        vIsValid = false
                                        vTableLaterRow.find('.txtAccountCode').focus();
                                    }

                                }
                                else if (!vLaterAmtCredit || vLaterAmtCredit.trim() == '' || vLaterAmtCredit == '0') {
                                    if (vIsValid == true) {
                                        vIsValid = false
                                        vTableLaterRow.find('.txtLaterAmtCredit').focus();
                                        vTableLaterRow.find('.txtLaterAmtCredit').css("border-color", "red");
                                    }

                                }
                                else {
                                    if (vTableLaterRow.attr('data-changed') == '1') {
                                        vTableLaterRow.attr('data-changed', '0')
                                        // INV LATER

                                    }
                                }

                            })
                        }

                        // Check Rows
                        $('.tblInvDtlRow').each(function () {
                            var vDtlRowId = $(this).attr('data-id');
                            var vTableDTLRow = $(this);
                            var vdItemId = $(this).find('.txtItemId').val()
                            var vdUnitId = $(this).find('.txtUnitId').val()
                            var vDisDate = $(this).find('.txtDisDate').val()
                            var vdItemQty = $(this).find('.txtItemQty').val()
                            var vdItemPrice = $(this).find('.txtItemPrice').val()
                            var vdVatAMT = $(this).find('.txtVatAmt').val()
                            var vdTotalItemCredit = $(this).find('.txtTotal').val()
                            var vdTotalBaseItemCredit = $(this).find('.txtBaseTotal').val()
                            if (!vdItemId || vdItemId.trim() == '' || vdItemId == '0') {
                                if (vIsValid == true) {
                                    vIsValid = false;
                                    vTableDTLRow.find('.txtItemCode').focus();
                                    vTableDTLRow.find('.txtItemCode').css("border-color", "red");
                                }

                            }
                            else if (!vdItemQty || vdItemQty.trim() == '' || vdItemQty == '0') {
                                if (vIsValid == true) {
                                    vIsValid = false;
                                    vTableDTLRow.find('.txtItemQty').focus();
                                    vTableDTLRow.find('.txtItemQty').css("border-color", "red");
                                }

                            }
                            else if (!vdItemPrice || vdItemPrice.trim() == '' || vdItemPrice == '0') {
                                if (vIsValid == true) {
                                    vIsValid = false;
                                    vTableDTLRow.find('.txtItemPrice').focus();
                                    vTableDTLRow.find('.txtItemPrice').css("border-color", "red");
                                }

                            }
                            else {
                                if (vTableDTLRow.attr('data-changed') == '1') {
                                    vTableDTLRow.attr('data-changed', '0')
                                    // INV DTL
                                    $.post('/InvoicePaymentOrder/funINVInvoice/',
                                        {
                                            pdInvDTLId: vDtlRowId,
                                            pdInvId: vInvId,
                                            pdItemId: vdItemId,
                                            pdUnitId: vdUnitId,
                                            pdExpireDate: vDisDate,
                                            pdItemQty: vdItemQty,
                                            pdItemPrice: vdItemPrice,
                                            pdVatAMT: vdVatAMT,
                                            pdTotalItemCredit: vdTotalItemCredit,
                                            pdTotalBaseItemCredit: vdTotalBaseItemCredit,
                                            ppType: 2,
                                            pdIsDeleted: false,
                                            pQueryTypeId: 100
                                        }, function (data) {
                                            if (data != undefined && data != '') {
                                                var vDataResult = JSON.parse(data)

                                                vTableDTLRow.attr('data-id', vDataResult)
                                                vTableDTLRow.find('.btnInvDtlDelete').attr('data-id', vDataResult)

                                            }

                                        })

                                }
                            }


                        })// DTL Rows
                        if (vIsValid) {
                           // funNotification('@appResource.msgSave', '1')
                        }
                        @*else {
                            funNotification('@appResource.msgCompleteData', '2')
                        }*@

        funNotification('@appResource.msgSave', '1')

                    });
            }
            @*} else {

                 funNotification('@appResource.msgCompleteData', '2')

            }*@
        }
    </script>
    <!--Later Config-->
    <script>
        //function Append
        function funINVLaterConfig(pINVLaterRow) {

            // Content
            var RowContent =
                ' <tr class=" tblLaterRow" data-id="' + pINVLaterRow.InvLaterId + '"  data-changed="0">' +
                ' <td class="">' +
                '  <button class="btn btn-light btn-sm border btnLaterAddRow" type="submit">' +
                '      <i class="fa fa-plus-circle"></i>' +
                '  </button>' +
                ' </td>' +
                '<td class="">' +
                ' <div class="d-flex">' +
                '  <div class="col-sm-4 p-0">' +
                '<input class="form-control form-control-sm text-center  d-none txtAccountId" value="' + pINVLaterRow.AccountId + '" type="text" required />' +
                ' <input class="form-control form-control-sm text-center  d-none txtAccountIsCostCenter"value="' + pINVLaterRow.IsCostCenter + '" type="text" required />' +
                ' <input type="text" class=" form-control form-control-sm text-center txtAccountCode"  value="' + pINVLaterRow.AccountCode + '">' +
                '        </div>' +
                ' <div class="col-sm-8 p-0">' +
                '  <input class="form-control form-control-sm text-center font-weight-bold txtAccountName" value="' + pINVLaterRow.AccountNameL1 + '" disabled type="text" min=0 required />' +
                '            </div>' +
                ' </div>' +
                '             </td>' +
                ' <td class="" width="10%">' +
                ' <input class="form-control form-control-sm text-center  d-none txtCostCenterId" value="' + pINVLaterRow.CostCenterId + '" type="text" required />' +
                ' <input class="form-control form-control-sm text-center  txtCostCenterCode" value="' + pINVLaterRow.CostCenterCode + '"  type="text" required />' +
                ' </td>' +
                ' <td class="">' +
                ' <input class="form-control form-control-sm text-center  txtCostCenterName" value="' + pINVLaterRow.CostCenterNameL1 + '" type="text" required disabled />' +
                ' </td>' +
                '<td class="">' +
                '<input class="form-control form-control-sm text-center font-weight-bold txtLaterAmtCredit" value="' + pINVLaterRow.LaterAmtCredit + '"  type="text" min=0  />' +
                '        </td>' +
                '<td class="">' +
                '<input class="form-control form-control-sm text-center txtLaterCurValue" value="' + 1 + '" required disabled>' +
                '          </td>' +
                ' <td class="">' +
                '   <input class="form-control form-control-sm text-center  txtLaterBaseAmtCredit" value="' + pINVLaterRow.LaterBaseAmtCredit + '" type="text" required disabled />' +
                ' </td>' +
                ' <td class="">' +
                '     <input class="form-control form-control-sm text-center  txtLaterAmtNotes" value="' + pINVLaterRow.Notes + '"  type="text" required />' +
                ' </td>' +
                ' <td><button class="btn btn-light btn-sm btnLaterDelete" data-id="' + pINVLaterRow.InvLaterId + '"><i class="fa fa-trash"></i></button></td>' +
                '        </tr>';

            return RowContent;

        }
    </script>
    <!--Box Config -->
    <script>
        function funBoxConfig(pBoxRow) {
            var vRowContent =
                '<tr class="trBaseRow tblBoxRow" data-id="' + pBoxRow.BoxId + '"  data-changed="0">' +
                '<td class="">' +
                ' <button class="btn btn-light btn-sm border btnBoxAddRow" type="submit">' +
                '<i class="fa fa-plus-circle"></i>' +
                ' </button>' +
                ' </td>' +
                '<td class="">' +
                '<div class="d-flex">' +
                ' <div class="col-sm-4 p-0">' +
                ' <input class="form-control form-control-sm text-center txtBoxDtlCode  " value="' + pBoxRow.BoxDtlCode + '" type="text" required />' +
                '<input class="form-control form-control-sm text-center  txtBoxDtlId d-none" value="' + pBoxRow.BoxDtlId + '" type="text" />' +
                '<input class="form-control form-control-sm text-center  txtAccountId d-none" value="' + pBoxRow.AccountId + '" type="text" />' +
                ' <input class="form-control form-control-sm text-center  d-none txtAccountIsCostCenter" value="' + 1 + '" type="text" />' +
                '</div>' +
                '<div class="col-sm-8 p-0">' +
                '<input class="form-control form-control-sm text-center  txtBoxDtlName" type="text" value="' + pBoxRow.BoxDtlName + '" required disabled />' +
                '</div>' +
                '</div>' +
                '</td>' +
                ' <td class="">' +
                '<div class="d-flex">' +
                '<div class="col-sm-4 p-0">' +
                '<input class="form-control form-control-sm text-center  d-none txtCostCenterId" value="' + pBoxRow.CostCenterId + '" type="text" required />' +
                ' <input class="form-control form-control-sm text-center  txtCostCenterCode" value="' + pBoxRow.CostCenterCode + '" type="text" required />' +
                ' </div>' +
                ' <div class="col-sm-8 p-0">' +
                '<input class="form-control form-control-sm text-center  txtCostCenterName" value="' + pBoxRow.CostCenterName + '" type="text" required disabled />' +
                ' </div>' +
                '</div>' +
                '</td>' +
                '<td class="">' +
                '<input class="form-control form-control-sm text-center font-weight-bold txtBoxCredit" value="' + pBoxRow.BoxCredit + '" type="text" value="0" min=0 required  />' +
                ' </td>' +
                ' <td class="">' +
                ' <input class="form-control form-control-sm text-center font-weight-bold txtCurValue" value="' + pBoxRow.CurValue + '" type="text" min=0 disabled />' +
                '  </td>' +
                ' <td class="">' +
                ' <input class="form-control form-control-sm text-center font-weight-bold txtBoxBaseCredit" value="' + pBoxRow.BoxBaseCredit + '" type="text" value="0" min=0 required disabled />' +
                '</td>' +
                '<td class="">' +
                '<input class="form-control form-control-sm text-center txtNotes" value="' + pBoxRow.Notes + '" required />' +
                '</td>' +
                '<td><button class="btn btn-light btn-sm btnBoxDelete" data-id="' + pBoxRow.BoxId + '"><i class="fa fa-trash"></i></button></td>' +
                '</tr>';

            // Get Value
            return vRowContent;
        }

        $('body').on('click', '.btnBoxAddRow', function () {

            AddNewRowBox($('.tblBoxBody'))
        })
        function AddNewRowBox(pTableBody) {
            var vRowContent = {
                BoxId: 0,
                BoxDtlId: 0,
                BoxDtlCode: '',
                BoxDtlName: '',
                AccountId: '',
                CostCenterId: '',
                CostCenterCode: '',
                CostCenterName: '',
                BoxCredit: '0',
                CurValue: '0',
                BoxBaseCredit: '0',
                Notes: '',
            }
            var vData = funBoxConfig(vRowContent)
            pTableBody.append(vData)
        }
    </script>
    <!--Check Config-->
    <script>
        //function Append
        function funCheckConfig(pINVCheckRow) {


            if (pINVCheckRow.AccountCheckId = undefined) {
                pINVCheckRow.AccountCheckId = 0
            }
            if (pINVCheckRow.AccountNo = undefined) {
                pINVCheckRow.AccountNo = ''
            }

            if (pINVCheckRow.BankId = undefined) {
                pINVCheckRow.BankId = 0
            }
            if (pINVCheckRow.BankCode == undefined) {
                pINVCheckRow.BankCode = ''
            }
            if (pINVCheckRow.BankName == undefined) {
                pINVCheckRow.BankName = ''
            }
            if (pINVCheckRow.CheckNo == undefined) {
                pINVCheckRow.CheckNo = ''
            }
            if (pINVCheckRow.CostCenterId == undefined) {
                pINVCheckRow.CostCenterId = 0
            }
            if (pINVCheckRow.CostCenterCode == undefined) {
                pINVCheckRow.CostCenterCode = ''
            }
            if (pINVCheckRow.CostCenterName == undefined) {
                pINVCheckRow.CostCenterName = ''
            }
            if (pINVCheckRow.CheckCredit == undefined) {
                pINVCheckRow.CheckCredit = ''
            }
            if (pINVCheckRow.CurValue == undefined) {
                pINVCheckRow.CurValue = 0
            }
            if (pINVCheckRow.CurValue == undefined) {
                pINVCheckRow.CurValue = 0
            }
            if (pINVCheckRow.CheckBaseCredit == undefined) {
                pINVCheckRow.CheckBaseCredit = 0
            }
            if (pINVCheckRow.Notes == undefined) {
                pINVCheckRow.Notes = ''
            }
            //alert(pINVCheckRow.CheckPayDate)
            if (pINVCheckRow.CheckPayDate == undefined || pINVCheckRow.CheckPayDate == '') {
                var today = new Date();
                var dd = String(today.getDate()).padStart(2, '0');
                var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
                var yyyy = today.getFullYear();

                today = yyyy + '-' + mm + '-' + dd;
                pINVCheckRow.CheckPayDate = today
            }

            if (pINVCheckRow.CheckId == undefined) {
                pINVCheckRow.CheckId = 0
            }

            // Content
            var RowContent =
                ' <tr class="trBaseRow tblCheckRow" data-id="' + pINVCheckRow.CheckId + '"  data-changed="0">' +
                '<td class="">' +
                '<button class="btn btn-light btn-sm border btnCheckAddRow" type="submit">' +
                '<i class="fa fa-plus-circle"></i>' +
                ' </button>' +
                '</td>' +
                '<td width="10%">' +
                '<div class="d-flex">' +
                '<div class="col-sm-4 p-0">' +
                '<div class="d-none">' +
                '<input class="form-control form-control-sm text-center  txtCheckAccountId" value="' + pINVCheckRow.AccountCheckId + '"  type="text" />' +
                '<input class="form-control form-control-sm text-center  txtCheckAccountNo" value="' + pINVCheckRow.AccountNo + '" type="text" />' +
                '<input class="form-control form-control-sm text-center  d-none txtAccountIsCostCenter" value="' + 1 + '" type="text" />' +
                '</div>' +
                '<input class="form-control form-control-sm text-center  txtCheckBankId d-none"  value="' + pINVCheckRow.BankId + '" type="text" required />' +
                '<input class="form-control form-control-sm text-center  txtCheckBankCode "  value="' + pINVCheckRow.BankCode + '" type="text" required />' +
                ' </div>' +
                '<div class="col-sm-8 p-0">' +
                '<input class="form-control form-control-sm text-center  txtCheckBankName" value="' + pINVCheckRow.BankName + '" type="text" required disabled />' +
                '</div>' +
                '</div>' +
                '</td>' +
                '<td width="7%">' +
                '<div class=" p-0">' +
                '<input class="form-control form-control-sm text-center  txtCheckNo" value="' + pINVCheckRow.CheckNo + '" type="text" required />' +
                '</div>' +
                '</td>' +
                '<td width="10%">' +
                '<input class="form-control form-control-sm text-center  font-weight-bold txtCheckPayDate" value="' + pINVCheckRow.CheckPayDate + '" type="date" />' +
                '</td>' +
                '<td class="">' +
                '<div class="d-flex">' +
                '<div class="col-sm-4 p-0">' +
                ' <input class="form-control form-control-sm text-center  d-none txtCheckCostCenterId" value="' + pINVCheckRow.CostCenterId + '" type="text" required />' +
                '<input class="form-control form-control-sm text-center  txtCheckCostCenterCode" value="' + pINVCheckRow.CostCenterCode + '" type="text" required />' +
                ' </div>' +
                '<div class="col-sm-8 p-0">' +
                '<input class="form-control form-control-sm text-center  txtCheckCostCenterName" value="' + pINVCheckRow.CostCenterName + '" type="text" required disabled />' +
                '</div>' +
                '</div>' +
                '</td>' +
                '<td class="" width="7%">' +
                '<input type="text" value="' + pINVCheckRow.CheckCredit + '" class=" form-control  form-control-sm text-center txtCheckCredit">' +
                '</td>' +
                '<td width="7%">' +
                '<input class="form-control form-control-sm text-center font-weight-bold txtCurValue" value="' + pINVCheckRow.CurValue + '" type="text" min=0 disabled />' +
                '</td>' +
                '<td width="7%">' +
                '<input class="form-control form-control-sm text-center font-weight-bold txtBaseCredit" disabled value="' + pINVCheckRow.CheckBaseCredit + '" type="text" value="0" min=0 required />' +
                '</td>' +
                '<td class="">' +
                '<input class="form-control form-control-sm text-center txtNotes" value="' + pINVCheckRow.Notes + '"  required/>' +
                '</td>' +
                ' <td><button class="btn btn-light btn-sm btnCheckDelete" data-id="' + pINVCheckRow.CheckId + '"><i class="fa fa-trash"></i></button></td>' +
                ' </tr>';

            // Get Content
            return RowContent;
        }




    </script>
    <!--Inv Dtl Config -->
    <script>
        //function Append
        function funInvDtlConfig(pInvDtlRow) {
            var today = new Date();
            var dd = String(today.getDate()).padStart(2, '0');
            var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
            var yyyy = today.getFullYear();

            today = yyyy + '-' + mm + '-' + dd;
            if (pInvDtlRow.ExpireDate == undefined) {
                pInvDtlRow.ExpireDate = today
            }
            if (pInvDtlRow.ExpireDate == '') {
                pInvDtlRow.ExpireDate = today
            }
            var total = parseFloat(pInvDtlRow.TotalItemSbaseCredit) + parseFloat((pInvDtlRow.ItemQty * pInvDtlRow.VatAMT))
            if (total == null || total == undefined)
                total = 0;
            var RowContent =
                '<tr class="tblInvDtlRow tblRow" data-id="' + pInvDtlRow.InvDTLId + '"  data-changed="0">' +
                '<td class="">' +
                '<button class="btn btn-light btn-sm border btnAddInvDtlRow" type="submit">' +
                ' <i class="fa fa-plus-circle"></i>' +
                '</button>' +
                ' </td>' +
                '<td class="">' +
                ' <input class="form-control form-control-sm text-center  d-none txtItemId" value="' + pInvDtlRow.ItemId + '" type="text" required />' +
                ' <input class="form-control form-control-sm text-center  txtItemCode" value="' + pInvDtlRow.InvItemCode + '" type="text" readonly required />' +
                ' </td>' +
                ' <td class="">' +
                '<input class="form-control form-control-sm text-center  txtItemName" value="' + pInvDtlRow.InvItemNameL1 + '" type="text" required disabled />' +
                '</td>' +
                '<td class="" width="7%">' +
                '<div class="d-flex">' +
                '<div class="d-none">' +
                '<input type="text" class="form-control form-control-sm text-center txtUnitId" value="' + pInvDtlRow.UnitId + '" required />' +

                ' </div>' +
                ' <div class="">' +
                '<input class="form-control form-control-sm text-center font-weight-bold txtUnitName" value="' + pInvDtlRow.UnitNameL1 + '" readonly type="text" min=0 required />' +
                '</div>' +
                '</div>' +
                '</td>' +
                '<td class="" width="10%">' +
                '<input class="form-control form-control-sm text-center font-weight-bold txtDisDate" type="Date" value="' + pInvDtlRow.ExpireDate + '" required />' +
                '</td>' +
                '<td class="" width="7%">' +
                '<input class="form-control form-control-sm text-center font-weight-bold txtItemQty" value="' + pInvDtlRow.ItemQty + '" type="text" min=0 required  />' +
                '</td>' +
                '<td class="">' +
                '<div class="">' +
                '<input class="form-control form-control-sm text-center   txtItemPrice" value="' + pInvDtlRow.ItemPrice + '" type="text" required />' +
                '</div>' +
                ' </td>' +
                '<td class="">' +
                '<div class="">' +
                '<input class="form-control form-control-sm text-center   txtTotal" value="' + pInvDtlRow.TotalItemSbaseCredit + '" type="text" required disabled/>' +
                '</div>' +
                '</td>' +
                '<td class="">' +
                '<div class="">' +
                ' <input class="form-control form-control-sm text-center   txtVatAmt"  value="' + pInvDtlRow.VatAMT + '" type="text" required />' +
                '</div>' +
                '</td>' +
                ' <td class="">' +
                ' <div class="">' +
                ' <input class="form-control form-control-sm text-center   txtTotalVatAmt" value="' + pInvDtlRow.ItemQty * pInvDtlRow.VatAMT + '" type="text" required  disabled/>' +
                '</div>' +
                '</td>' +
                ' <td class="">' +
                '<div class="">' +
                '<input class="form-control form-control-sm text-center   txtBaseTotal" value="' + total + '" type="text" required disabled />' +
                '</div>' +
                '</td>' +
                ' <td><button class="btn btn-light btn-sm btnInvDtlDelete" data-id="' + pInvDtlRow.InvDTLId + '"><i class="fa fa-trash"></i></button></td>' +
                '</tr>';


            return RowContent;
        }

        // Add Row - Button Click
        $('body').on('click', '.btnAddInvDtlRow', function () {
            // Add Row
            funAddInvDTLEmptyRow($('.tblInvDtlBody'));
        })


        // Add New Empty Cash Row
        function funAddInvDTLEmptyRow(pTableBody) {
            var vRowContent = {
                'ItemId': '',
                'InvItemCode': '',
                'InvItemNameL1': '',
                'InvDTLId': '0',
                'TotalItemSbaseCredit': '0',
                'total': '0',
                'TotalBaseItemCredit': '',
                'VatAMT': '',
                'TotalItemCredit': '',
                'ItemPrice': '',
                'TotalItemCredit': '',
                'ItemQty': '',
                'ExpireDate': '',
                'UnitNameL1': '',
                'UnitId': '',

            }
            var vData = funInvDtlConfig(vRowContent)
            pTableBody.append(vData)
        }

    </script>


    <!-- Add New Row -->
    <script>
        // Add Row - F6
        $('body').on('keydown', function (e) {
            if (e.keyCode == '117') {
                // Add Row
                funAddRow();
            }
        })
        // Add Row - Button Click
        $('.tblCheckBody').on('click', '.btnCheckAddRow', function () {
            vRow = $('.tblCheckRow')[0];
            vBody = $('.tblCheckBody')
            //// Add Row
            //funAddRow(vRow, vBody);
            funAddCheckEmptyRow(vBody)
        })
        // Add Row - Button Click
        $('.tblMasterBody').on('click', '.btnCheckAddRow', function () {

            vRow = $('.tblMasterRow')[0];
            vBody = $('.tblMasterBody')
            // Add Row
            funAddRow(vRow, vBody);
        })
        $('body').on('click', '.btnLaterAddRow', function () {
            funAddLaterEmptyRow($('.tblLaterBody'))
        })
        // Add New Empty For  InvLater
        function funAddLaterEmptyRow(pTableBody) {
            var vRowContent = {
                'InvLaterId': 0,
                'AccountId': '',
                'IsCostCenter': '',
                'AccountCode': '',
                'AccountNameL1': '',
                'CostCenterId': '',
                'CostCenterCode': '',
                'CostCenterNameL1': '',
                'LaterAmtCredit': '',
                'LaterCurValue': '',
                'LaterBaseAmtCredit': '',
                'Notes': '',

            }
            var vData = funINVLaterConfig(vRowContent)
            pTableBody.append(vData)
        }
        // Add Row
        function funAddRow(pRow, pBody) {
            var vRow = pRow;
            var vBody = pBody;
            // Cloned Row
            var vRowCloned = $(vRow).clone();
            // Clear
            vRowCloned.find(':input').val('');
            vRowCloned.closest('tr').attr('data-id', '0')

            // Append
            vBody.append(vRowCloned);
            //alert('pBody' + pBody)
            //if (pBody == '.tblCheckBody') {
            //    var today = new Date();
            //    var dd = String(today.getDate()).padStart(2, '0');
            //    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
            //    var yyyy = today.getFullYear();
            //    today = yyyy + '-' + mm + '-' + dd;
            //    vRowCloned.find('.txtCheckPayDate').val(today)
            //}
            // Get Index
            var vIndex = vRowCloned.index();
        }


        // Add New Empty Cash Row
        function funAddCashEmptyRow(pTableBody) {
            var vRowContent = {
                'BoxCashDeskId': '',
                'BoxCashDeskName': '',
                'AccountId': '',
                'AccountNo': '',
                'AccountNameL1': '',
                'CurrencyId': '',
                'CurrencyNameL1': '',
                'BoxPayDebit': '',
                'BoxBaseCurrencyValue': '',
                'BoxDebit': '',
                'BoxBaseCurrencyValue': '',
                'BoxBaseDebit': '',
                'BoxNote': '',
                'BoxCostCenterId': '',
                'CostCenterCode': '',
                'CostCenterNameL1': '',
            }
            var vData = funGlVoucherBoxCheckConfig(vRowContent)
            pTableBody.append(vData)
        }

        // Add New Empty CHECK Row
        function funAddCheckEmptyRow(pTableBody) {
            var vRowContent = {
                'AccountId': '',
                'CheckBankId': '',
                'CheckBankName': '',
                'CheckBankBranchId': '',
                'CheckBankName': '',
                'CheckNo': '',
                'CheckDate': '',
                'CheckDebit': '',
                'CheckCurrencyValue': '',
                'CheckBaseDebit': '',
                'CheckNote': '',
                'CheckCostCenterId': '',
                'CheckCostCenterId': '',
                'CostCenterNameL1': '',
                'VoucherBoxCheckId': 0
            }
            var vData = funCheckConfig(vRowContent)
            pTableBody.append(vData)
        }
        // Add New Empty Master Row
        function funAddMasterEmptyRow(pTableBody) {
            var vRowContent = {
                'VoucherBoxCheckId': 0,
                'AccountId': '',
                'CheckBankId': '',
                'CheckBankName': '',
                'CheckBankBranchId': '',
                'CheckBankName': '',
                'CheckNo': '',
                'CheckDate': '',
                'CheckDebit': '',
                'CheckCurrencyValue': '',
                'CheckBaseDebit': '',
                'CheckNote': '',
                'EPaymentTypeNameL1': '',
                'EPayTypeId': '',
                'EPayTypeId': '',
            }
            var vData = funGlVoucherMasterConfig(vRowContent)
            pTableBody.append(vData)
        }
    </script>
    <!-- Totals -->
    <script>
        // Total Debit, Credit and Diff
        function funTotalDebitCreditDiff() {
            // Total Debit
            var vTotalDebit = 0;
            $('.txtCredit').each(function () {
                // Get Value
                var vDebitValue = $(this).val();
                // Check Value
                if (vDebitValue == '' || vDebitValue == null || vDebitValue == undefined) {
                    vDebitValue = 0;
                }
                // Add Value
                vTotalDebit += parseFloat(vDebitValue);
            })
            // Total Credit
            var vTotalCreditBase = 0;
            $('.txtCreditBase').each(function () {
                // Get Value
                var vCreditValue = $(this).val();
                // Check Value
                if (vCreditValue == '' || vCreditValue == null || vCreditValue == undefined) {
                    vCreditValue = 0;
                }
                // Add Value
                vTotalCreditBase += parseFloat(vCreditValue);
            })
            // Total Cash
            var vTotalCash = $('.txtCashTotal').val()
            if (vTotalCash == '') { $('.txtCashTotal').val('0') }
            //Total Check
            var vTotalCheck = $('.txtCheckTotal').val()
            if (vTotalCheck == '') { $('.txtCheckTotal').val('0') }
            // Total Master
            var vMasterCash = $('.txtMasterTotal').val()
            if (vMasterCash == '') { $('.txtMasterTotal').val('0') }
            // Total PayMent Type
            var vTotalPay = parseFloat(vTotalCash) + parseFloat(vTotalCheck) + parseFloat(vMasterCash)

            // Diff
            var vDiff = parseFloat(vTotalCreditBase) - parseFloat(vTotalPay);

            // SET Values
            $('.txtTotalDebit').val(vTotalCreditBase);
            $('.txtTotalCredit').val(vTotalPay.toFixed(2));
            $('.txtDiff').val(vDiff.toFixed(2));
            // Check Diff
            $('.txtDiff').addClass('text-white');
            if (vDiff != 0) {
                $('.txtDiff').addClass('bg-danger');
                $('.txtDiff').removeClass('bg-success');
            }
            else {
                $('.txtDiff').addClass('bg-success');
                $('.txtDiff').removeClass('bg-danger');
            }
        }



        function funTotalCash() {
            var vTotalDebit;

            $('.txtBaseDebit').each(function () {
                // Get Value
                var vCreditValue = $(this).val();

                // Check Value
                if (vCreditValue == '' || vCreditValue == null || vCreditValue == undefined) {
                    vCreditValue = 0;
                }

                // Add Value
                vTotalDebit += parseFloat(vCreditValue);

            })

            $('.txtBoxTotal').val(vTotalDebit)
        }
    </script>
    <script>
        // Credit Change Box
        $('.tblBoxBody').on('change', '.txtBoxCredit', function () {
            // Table Row
            var vTableRow = $(this).closest('.tblBoxRow')
            // GET Value
            var vValue = $(this).val();
            // Factor
            var vCurrencyFactor = vTableRow.find('.txtCurValue').val();
            // Base Value
            var vBaseValue = (vValue * vCurrencyFactor).toFixed(2);
            // SET Value to Base
            //$(this).siblings('.txtBaseCredit').val(vBaseValue);
            vTableRow.find('.txtBoxBaseCredit').val(vBaseValue);

            // Total Debit, Credit and Diff
            funTotalBoxCreditDiff();
            vTableDTLRow.find('.txtBoxCredit').css("border-color", "");
        })


        //  Total Credit
        function funTotalBoxCreditDiff() {

            // Total Debit
            var vTotalCredit = 0;
            $('.txtBoxBaseCredit').each(function () {
                // Get Value
                var vCreditValue = $(this).val();

                // Check Value
                if (vCreditValue == '' || vCreditValue == null || vCreditValue == undefined) {
                    vCreditValue = 0;
                }

                // Add Value
                vTotalCredit += parseFloat(vCreditValue);
            })
            if (vTotalCredit) {
                $('.txtBoxTotal').val(vTotalCredit)
            }
            else {
                $('.txtBoxTotal').val(0)
            }

        }




        // LATER Change
        $('body').on('change', '.txtLaterAmtCredit', function () {
            // Table Row
            var vTableRow = $(this).closest('.tblLaterRow')
            // GET Value
            var vValue = $(this).val();
            // Factor
            var vCurrencyFactor = vTableRow.find('.txtLaterCurValue').val();
            // Base Value
            var vBaseValue = (vValue * vCurrencyFactor).toFixed(2);

            // SET Value to Base
            //$(this).siblings('.txtBaseCredit').val(vBaseValue);
            vTableRow.find('.txtLaterBaseAmtCredit').val(vBaseValue);

            // Total Debit, Credit and Diff
            funTotalLaterCredit();

        })

        // LATER Change
        $('body').on('change', '.txtCheckCredit', function () {
            // Table Row
            var vTableRow = $(this).closest('.tblCheckRow')
            // GET Value
            var vValue = $(this).val();
            // Factor
            var vCurrencyFactor = vTableRow.find('.txtCurValue').val();
            // Base Value
            var vBaseValue = (vValue * vCurrencyFactor).toFixed(2);

            // SET Value to Base
            //$(this).siblings('.txtBaseCredit').val(vBaseValue);
            vTableRow.find('.txtBaseCredit').val(vBaseValue);

            // Total Debit, Credit and Diff
            funTotalCheckCredit();

        })

        // Calculate cash
        function funTotalCheckCredit() {
            // Total Credit
            var vTotalCredit = 0;
            $('.tblCheckBody .txtBaseCredit').each(function () {
                // Get Value
                var vCreditValue = $(this).val();

                // Check Value
                if (vCreditValue == '' || vCreditValue == null || vCreditValue == undefined) {
                    vCreditValue = 0;
                }

                // Add Value
                vTotalCredit += parseFloat(vCreditValue);
            })
            if (vTotalCredit) {
                $('.txtCheckTotal').val(vTotalCredit)
            }
            else {
                $('.txtCheckTotal').val(0)
            }
        }

        // Calculate cash
        function funTotalLaterCredit() {
            // Total Credit
            var vTotalCredit = 0;
            $('.tblLaterBody .txtLaterBaseAmtCredit').each(function () {
                // Get Value
                var vCreditValue = $(this).val();

                // Check Value
                if (vCreditValue == '' || vCreditValue == null || vCreditValue == undefined) {
                    vCreditValue = 0;
                }

                // Add Value
                vTotalCredit += parseFloat(vCreditValue);
            })
            if (vTotalCredit) {
                $('.txtLaterTotal').val(vTotalCredit)
            }
            else {
                $('.txtLaterTotal').val(0)
            }
        }

    </script>
    <!-- ON  Change INV DTL  -->
    <script>

        //  Change
        $('body').on('blur', '.txtItemQty,.txtItemPrice', function () {
            // Table Row
            var vTableRow = $(this).closest('.tblInvDtlRow')
            // GET Qty
            var ItemQty = vTableRow.find('.txtItemQty').val();
            // Item Price
            var ItemPrice = vTableRow.find('.txtItemPrice').val();
            // Total
            var Total = ItemQty * ItemPrice;
            var vatamt = (ItemPrice) * (0.15);
            var totalvat = vatamt * ItemQty
            // SET Value to Base
            vTableRow.find('.txtTotal').val((Total).toFixed(2));

            // Footer Table
            //  $('.txtInvTotal').val(Total)
            $(this).closest('tr').find('.txtVatAmt').val((vatamt).toFixed(2)).trigger('change');
            $(this).closest('tr').find('.txtTotalVatAmt').val((totalvat).toFixed(2)).trigger('change');
            // SET Value to Base
            vTableRow.find('.txtBaseTotal').val((totalvat + Total).toFixed(2));

            funTotalInvDtl()
            /*$('.txtLaterAmtCredit').val((totalvat+Total).toFixed(2))
            $('.txtLaterBaseAmtCredit').val((totalvat+Total).toFixed(2))
            $('.txtLaterTotal').val((totalvat+Total).toFixed(2))*/
        })

        $('body').on('blur', '.txtVatAmt', function () {
            // Table Row
            var vTableRow = $(this).closest('.tblInvDtlRow')
            // GET Qty
            var ItemQty = vTableRow.find('.txtItemQty').val();
            // Item Price
            var ItemPrice = vTableRow.find('.txtItemPrice').val();
            // Total
            var Total = ItemQty * ItemPrice;
            var vatamt = vTableRow.find('.txtVatAmt').val();
            var totalvat = parseFloat(vatamt) * ItemQty
            // SET Value to Base
            vTableRow.find('.txtTotal').val((Total).toFixed(2));

            // Footer Table
            //  $('.txtInvTotal').val(Total)
            //$(this).closest('tr').find('.txtVatAmt').val((vatamt).toFixed(2)).trigger('change');
            $(this).closest('tr').find('.txtTotalVatAmt').val((totalvat).toFixed(2)).trigger('change');
            // SET Value to Base
            vTableRow.find('.txtBaseTotal').val((totalvat + Total).toFixed(2));

            funTotalInvDtl()
            /*$('.txtLaterAmtCredit').val((totalvat+Total).toFixed(2))
            $('.txtLaterTotal').val((totalvat+Total).toFixed(2))*/
        })

        //  Change VAT






        //  Final Total Table Footer
        function funTotalInvDtl() {
            // Total Credit
            var vTotalCredit = 0;
            $('.tblInvDtlBody .txtBaseTotal').each(function () {
                // Get Value
                var vCreditValue = $(this).val();

                // Check Value
                if (vCreditValue == '' || vCreditValue == null || vCreditValue == undefined) {
                    vCreditValue = 0;
                }

                // Add Value
                vTotalCredit += parseFloat(vCreditValue);
            })
            if (vTotalCredit) {
                $('.txtFinalTotal').val(vTotalCredit.toFixed(2))
                $('.txtLaterAmtCredit').val(vTotalCredit.toFixed(2))
                $('.txtLaterBaseAmtCredit').val(vTotalCredit.toFixed(2))
                $('.txtLaterTotal').val(vTotalCredit.toFixed(2))

                
            }
            else {
                $('.txtFinalTotal').val(0)
            }

            //txtTotal
            var vTotalInvoiceWithoutTax = 0;
            $('.tblInvDtlBody .txtTotal').each(function () {
                // Get Value
                var vTotalInvoiceWithoutTaxValue = $(this).val();

                // Check Value
                if (vTotalInvoiceWithoutTaxValue == '' || vTotalInvoiceWithoutTaxValue == null || vTotalInvoiceWithoutTaxValue == undefined) {
                    vTotalInvoiceWithoutTaxValue = 0;
                }

                // Add Value
                vTotalInvoiceWithoutTax += parseFloat(vTotalInvoiceWithoutTaxValue);
            })
            if (vTotalInvoiceWithoutTax) {
                $('.txtInvTotal').val(vTotalInvoiceWithoutTax.toFixed(2))


            }
            else {
                $('.txtInvTotal').val(0)
            }

            // Total Vat
            var vTotalVat = 0;
            $('.tblInvDtlBody .txtTotalVatAmt').each(function () {
                // Get Value
                var VatValue = $(this).val();

                // Check Value
                if (VatValue == '' || VatValue == null || VatValue == undefined) {
                    VatValue = 0;
                }

                // Add Value
                vTotalVat += parseFloat(VatValue);
            })
            if (vTotalVat) {
                $('.txtTotalVat').val(vTotalVat.toFixed(2))
            }
            else {
                $('.txtTotalVat').val(0)
            }
        }

        $('body').on('change', '.txtItemPrice,.txtInvDisc,.txtDiscPerc,.txtVatAmt', function () {

            CalculateFinalTotal()

        })
        function CalculateFinalTotal() {
            funTotalInvDtl()
            
        }

    </script>


    <script>
        // PayMentType
        var vhPayBox = $('#chkIsBox').prop('checked');
        var vhPayCheck = $('#chkIsCheck').prop('checked');
        var vhPayLater = $('#chkIsLater').prop('checked');

        // Date Today SET
        function funDateTodaySET(pDateElement) {
            pDateElement.val('@DateTime.Now.Date.ToString("yyyy-MM-dd")')
        }



        funDateTodaySET($('.dtpInvDate'));
        funDateTodaySET($('.dtpDocRefDate'));

        // Open Tabs
        funTabs();

        function funTabs() {
            // Check Payment Type
            var vChecked = [];
            // Loop On PayType
            $('.divCashBox  input:checked').each(function () {
                var vCurrentValue = $(this).val()
                vChecked.push(vCurrentValue)

            })

            //// Call Funchtion On Load
            funChkPayType(vChecked)
        }
        // On Change Pay Type
        $('.divCashBox').on('change', 'input[type=checkbox]', function () {
            var vChecked = []
            $('.divCashBox  input:checked').each(function () {
                var vCurrentValue = $(this).val()
                vChecked.push(vCurrentValue)
            })
            funChkPayType(vChecked)
        })
        // Diable And Enabeld Tabs
        function funChkPayType(pValue) {
            $('.divCheck').addClass('d-none')
            $('.divMaster').addClass('d-none')
            $('.divCash').addClass('d-none')
            $.each(pValue, function (i, value) {
                if (pValue[i] == 1) {
                    $('.divCash').removeClass('d-none')
                    $('#contact').removeClass('Active show active')
                    $('#profile').removeClass('Active show active')
                    $('#home').addClass('Active show active')
                    $('#profile-tab').removeClass('active')
                    $('#contact-tab').removeClass('active')
                    $('.clsCashDesk').addClass('active')
                }
                if (pValue[i] == 2) {
                    $('.divCheck').removeClass('d-none')
                    $('#home').removeClass('Active show active')
                    $('#contact').removeClass('Active show active')
                    $('#profile').addClass('Active show active')
                    $('.clsCashDesk').removeClass('active')
                    $('#contact-tab').removeClass('active')
                    $('#profile-tab').addClass('active')
                }
                if (pValue[i] == 3) {
                    $('.divMaster').removeClass('d-none')
                    $('#home').removeClass('Active show active')
                    $('#profile').removeClass('Active show active')
                    $('#contact').addClass('Active show active')
                    $('.clsCashDesk').removeClass('active')
                    $('#profile-tab').removeClass('active')
                    $('#contact-tab').addClass('active')
                }
            })

        }
    </script>
    <script>
        // Open Voucher Store Modal
        $('body').on('keyup dblclick', '.txtStoreCode', function (e) {
            // F9 - Double Click
            if (e.keyCode == 120 || e.type == 'dblclick') {
                // Search Account
                var vURL = '/InvoicePaymentOrder/StoreSearch';
                // Load Content of Account Search
                $('#AccountDataModalContent').load(vURL);
                // Modal Show
                $('#AccountDataModal').modal('show');
                // Focus
                $('#AccountDataModal').on('shown.bs.modal', function () {
                    $('.txtSearch').focus();
                    // Select Account
                    $('body').on('click', '.divStoreSelect', function () {
                        // Get Values
                        var vStoreId = $(this).attr('data-id');
                        var vStoreNameValue = $(this).find('.divStoreName').text();
                        var vStoreCodeValue = $(this).find('.divStoreCode').text();
                        // Get GLVoucherStore Data
                        var vStoreIdElement = $('.txtStoreId');
                        var vStoreNameElement = $('.txtStoreName');
                        var vStoreCodeElement = $('.txtStoreCode');
                        // Set Value
                        vStoreIdElement.val(vStoreId);
                        vStoreNameElement.val(vStoreNameValue);
                        vStoreCodeElement.val(vStoreCodeValue);

                        // Modal Show
                        $('#AccountDataModal').modal('hide');
                    })
                })
            }
        })



        // Open Voucher txtStoreCode Modal
        $('body').on('change', '.txtStoreCode', function (e) {
        // Get CS Data
        var vStoreIdElement = $('.txtStoreId');
        var vStoreCodeElement = $('.txtStoreCode');
        var vStoreNameElement = $('.txtStoreName');

        var vCode = $(this).val();
              // List GetCostCenter
        $.get('/api/APIStore/StoreGET',
            {
                pStoreCode: vCode,
                pQueryTypeId: '@clsQueryType.qSelect'

            },
                function (data, status) {
                    if (data == '') {
                        // Empty Fileds
                        vStoreIdElement.val('');
                        vStoreCodeElement.val('');
                        vStoreNameElement.val('');
                        funNotification('@appResource.msgChooseCorrectCustomer', 2);
                    } else {
                        var vDataJSON = JSON.parse(data);
                        $.each(vDataJSON, function (i, Store) {
                            // Set Value
                            vStoreIdElement.val(Store.StoreId);
                            vStoreCodeElement.val(Store.StoreCode);
                            vStoreNameElement.val(Store.StoreNameL1);

                        });
                    }
                });
        })



        // Open Customer Supplier Modal
        $('body').on('keyup dblclick', '.txtCustomerCode', function (e) {
            // F9 - Double Click
            if (e.keyCode == 120 || e.type == 'dblclick') {
                // Search Account
                var vURL = '/GLVoucher/CustomerSupplierSearch';
                // Load Content of Account Search
                $('#AccountDataModalContent').load(vURL);
                // Modal Show
                $('#AccountDataModal').modal('show');
                // Focus
                $('#AccountDataModal').on('shown.bs.modal', function () {
                    $('.txtSearch').focus();

                    // Select Account
                    $('body').on('click', '.divCSSelect', function () {

                        // Get Values
                        var vCSId = $(this).attr('data-id');
                        var vCSNameValue = $(this).find('.divCSName').text();
                        var vCSCodeValue = $(this).find('.divCSCode').text();
                        var vAccountId = $(this).find('.divAccountId').text();
                        var vAccountNo = $(this).find('.divAccountNo').text();
                        var vAccountName = $(this).find('.divAccountName').text();
                        var vCurrencyName = $(this).find('.divCurrencyName').text();
                        var vCurrencyId = $(this).find('.divCurrencyId').text();
                        var vCurrencyExchange = $(this).find('.divCurrencyExchange').text();
                        var vCustomerVATCodeval = $(this).find('.divCustomerVATCode').text();

                        // Get CS Data
                        var vCSIdElement = $('.txtCustomerId');
                        var vCSCodeElement = $('.txtCustomerCode');
                        var vCSNameElement = $('.txtCustomerName');
                        var vAccountIdElement = $('.txtAccountId')
                        var vAccountCodeElement = $('.txtAccountCode')
                        var vAccountNameElement = $('.txtAccountName')
                        var vCurrencyNameElement = $('.txtDTLAccountCurrencyName');
                        var vCurrencyIdElement = $('.txtDTLAccountCurrencyId');
                        var vCurrencyExchangeElement = $('.txtLaterCurValue');
                        var vCurrencyBaseExchangeElement = $('.txtLaterCurValue');
                        var vCustomerVATCode = $('.txtCustomerVatCode');

                        // Set Value
                        vCSIdElement.val(vCSId);
                        vCSCodeElement.val(vCSCodeValue);
                        vCSNameElement.val(vCSNameValue);
                        vAccountIdElement.val(vAccountId)
                        vAccountCodeElement.val(vAccountNo)
                        vAccountNameElement.val(vAccountName)
                        vCurrencyNameElement.val(vCurrencyName)
                        vCurrencyIdElement.val(vCurrencyId)
                        vCurrencyExchangeElement.val(vCurrencyExchange)
                        vCurrencyBaseExchangeElement.val(vCurrencyExchange)
                        vCustomerVATCode.val(vCustomerVATCodeval)

                        // Modal Show
                        $('#AccountDataModal').modal('hide');

                    })
                })
            }
        })

          $('body').on('change', '.txtCustomerCode', function (e) {
        // Get CS Data
        var vCSIdElement = $('.txtCustomerId');
        var vCSCodeElement = $('.txtCustomerCode');
        var vCSNameElement = $('.txtCustomerName');
        var vAccountIdElement = $('.txtAccountId')
        var vAccountCodeElement = $('.txtAccountCode')
        var vAccountNameElement = $('.txtAccountName')
        var vCurrencyNameElement = $('.txtDTLAccountCurrencyName');
              var vCurrencyExchangeElement = $('.txtLaterCurValue');

        var vId = $(this).val();
              // List GetCostCenter
        $.get('/api/APICustomerSupplier/CustomerSupplierGET',
            {
                pCSCode: vId,
                pQueryTypeId: '@clsQueryType.qSelect'

            },
                function (data, status) {
                    if (data == '') {
                        // Empty Fileds
                        vCSIdElement.val('');
                        vCSNameElement.val('');
                          funNotification('@appResource.msgChooseCorrectCustomer', 2);
                    } else {
                        var vDataJSON = JSON.parse(data);
                        $.each(vDataJSON, function (i, CS) {
                            // Set Value
                            vCSIdElement.val(CS.CSId);
                            vCSCodeElement.val(CS.CSCode);
                            vCSNameElement.val(CS.CSNameL1);
                            vAccountIdElement.val(CS.AccountId)
                            vAccountCodeElement.val(CS.AccountNo)
                            vAccountNameElement.val(CS.AccountNameL1)
                            vCurrencyNameElement.val(CS.CurrencyNameL1)
                            vCurrencyExchangeElement.val(CS.CurrencyExchange)
                        });
                    }
                });
    })


    </script>
    <!-- Get Account -->
    <script>
        // Account Code, Name - F9 - Double Click
        $('table').on('keyup dblclick', '.txtAccountCode', function (e) {

            // F9 - Double Click
            if (e.keyCode == 120 || e.type == 'dblclick') {

                // Table Row - Closest Row
                vTableRow = $(this).closest('tr');

                // Search Account
                var vURL = '/GLVoucher/AccountSearch';
                // Load Content of Account Search
                $('#AccountDataModalContent').load(vURL);
                // Modal Show
                $('#AccountDataModal').modal('show');
                // Focus
                $('#AccountDataModal').on('shown.bs.modal', function () {
                    $('.txtSearch').focus();
                    // Select Account
                    $('body').on('click', '.divAccountSelect', function () {

                        // Get Values
                        var vAccountId = $(this).attr('data-id');
                        var vAccountCodeValue = $(this).find('.divAccountNo').text();
                        var vAccountNameValue = $(this).find('.divAccountName').text();
                        var vAccountCurrencyFactor = $(this).find('.divAccountCurrencyFactor').text();
                        var vAccountIsCostCenter = $(this).find('.divAccountIsCostCenter').text();
                        var vAccountCurrency = $(this).find('.divAccountCurrency').text();
                        var vAccountCurrencyName = $(this).find('.divAccountCurrencyName').text();
                        var vCostCenterName = $(this).find('.divCostCenterName').text();
                        var vCostCenterId = $(this).find('.divCostCenterId').text();
                        var vCostCenterCode = $(this).find('.divCostCenterCode').text();

                        // Get Account Data
                        var vAccountIdElement = vTableRow.find('.txtAccountId');
                        var vAccountCodeElement = vTableRow.find('.txtAccountCode');
                        var vAccountNameElement = vTableRow.find('.txtAccountName');
                        var vAccountCurrencyFactorElement = vTableRow.find('.txtLaterCurValue');
                        var vAccountBaseCurrencyFactorElement = vTableRow.find('.txtBaseCurrencyValue');
                        var vAccountIsCostCenterElement = vTableRow.find('.txtAccountIsCostCenter');
                        var vAccountCurrencyElement = vTableRow.find('.txtAccountCurrencyId');
                        var vAccountCurrencyNameElement = vTableRow.find('.txtAccountCurrencyName');

                        // Set Value
                        vAccountIdElement.val(vAccountId);
                        vAccountCodeElement.val(vAccountCodeValue);
                        vAccountNameElement.val(vAccountNameValue);
                        vAccountCurrencyFactorElement.val(vAccountCurrencyFactor);
                        vAccountBaseCurrencyFactorElement.val(vAccountCurrencyFactor);
                        vAccountIsCostCenterElement.val(vAccountIsCostCenter);
                        vAccountCurrencyElement.val(vAccountCurrency);
                        vAccountCurrencyNameElement.val(vAccountCurrencyName);
                        vTableRow.attr('data-changed', '1')


                        // Modal Show
                        $('#AccountDataModal').modal('hide');
                        vTableRow.removeClass('table-info');

                        vTableRow = '';


                    })
                })

            }
        })
    </script>
    <!-- Get CostCenter -->
    <script>
        $(document).ready(function () {

            // Get Closest Row
            var vTableRow = '';
            // CostCenter Code, Name - F9
            $('.tblLaterBody').on('keydown dblclick', '.txtCostCenterCode', function (e) {
                // Check F9
                if (e.keyCode == 120 || e.type == 'dblclick') {
                    // Get Closest Row
                    vTableRow = $(this).closest('.tblLaterRow');


                    // GET AccountId
                    var vAccountId = vTableRow.find('.txtAccountId').val();
                    var vAccountIsCostCenter = vTableRow.find('.txtAccountIsCostCenter').val();


                    if (vAccountId) {
                        // Check If Account Is Cost Center
                       // if (vAccountIsCostCenter == '1' || vAccountIsCostCenter == 'True') {

                            // Search CostCenter
                            var vURL = '/GLVoucher/AccountCostCenter/?pAccountId=' + vAccountId;
                            // Load Content of CostCenter Search
                            $('#CostCenterDataModalContent').load(vURL);
                            // Modal Show
                            $('#CostCenterDataModal').modal('show');


                            // Focus
                            $('#CostCenterDataModal').on('shown.bs.modal', function () {

                                // Focuse
                                $('.txtSearch').focus();


                                // Select CostCenter
                                $('body').on('click', '.divAccountCostCenterSelect', function () {

                                    // CostCenter Id
                                    var vCostCenterId = $(this).attr('data-id');

                                    // Get Values
                                    var vCostCenterCodeValue = $(this).find('.divAccountCostCenterCode').text();
                                    var vCostCenterNameValue = $(this).find('.divAccountCostCenterName').text();

                                    // Get CostCenter Data
                                    var vCostCenterIdElement = vTableRow.find('.txtCostCenterId');
                                    var vCostCenterCodeElement = vTableRow.find('.txtCostCenterCode');
                                    var vCostCenterNameElement = vTableRow.find('.txtCostCenterName');

                                    // Set Value
                                    vCostCenterIdElement.val(vCostCenterId);
                                    vCostCenterCodeElement.val(vCostCenterCodeValue);
                                    vCostCenterNameElement.val(vCostCenterNameValue);
                                    vTableRow.attr('data-changed', '1')

                                    // Modal Show
                                    $('#CostCenterDataModal').modal('hide');

                                    // Table Row Clear
                                    vTableRow = '';

                                })

                            })// End of Modal Shown event
                        @*}
                        else {

                            funNotification('@appResource.msgNoCostCenters', 2);
                        }*@
                    }
                    else {
                        funNotification('@appResource.msgChooseAccountFirst', 2);
                    }
                }
            })
        })

        $(document).ready(function () {

            // Get Closest Row
            var vTableRow = '';
            // CostCenter Code, Name - F9
            $('.tblBoxBody').on('keydown dblclick', '.txtCostCenterCode', function (e) {
                // Check F9
                if (e.keyCode == 120 || e.type == 'dblclick') {
                    // Get Closest Row
                    vTableRow = $(this).closest('.tblBoxRow');


                    // GET AccountId
                    var vAccountId = vTableRow.find('.txtAccountId').val();
                    var vAccountIsCostCenter = vTableRow.find('.txtAccountIsCostCenter').val();


                    if (vAccountId) {
                        // Check If Account Is Cost Center
                        if (vAccountIsCostCenter == '1' || vAccountIsCostCenter == 'True') {

                            // Search CostCenter
                            var vURL = '/GLVoucher/AccountCostCenter/?pAccountId=' + vAccountId;
                            // Load Content of CostCenter Search
                            $('#CostCenterDataModalContent').load(vURL);
                            // Modal Show
                            $('#CostCenterDataModal').modal('show');


                            // Focus
                            $('#CostCenterDataModal').on('shown.bs.modal', function () {

                                // Focuse
                                $('.txtSearch').focus();


                                // Select CostCenter
                                $('body').on('click', '.divAccountCostCenterSelect', function () {

                                    // CostCenter Id
                                    var vCostCenterId = $(this).attr('data-id');

                                    // Get Values
                                    var vCostCenterCodeValue = $(this).find('.divAccountCostCenterCode').text();
                                    var vCostCenterNameValue = $(this).find('.divAccountCostCenterName').text();

                                    // Get CostCenter Data
                                    var vCostCenterIdElement = vTableRow.find('.txtCostCenterId');
                                    var vCostCenterCodeElement = vTableRow.find('.txtCostCenterCode');
                                    var vCostCenterNameElement = vTableRow.find('.txtCostCenterName');

                                    // Set Value
                                    vCostCenterIdElement.val(vCostCenterId);
                                    vCostCenterCodeElement.val(vCostCenterCodeValue);
                                    vCostCenterNameElement.val(vCostCenterNameValue);
                                    vTableRow.attr('data-changed', '1')

                                    // Modal Show
                                    $('#CostCenterDataModal').modal('hide');

                                    // Table Row Clear
                                    vTableRow = '';

                                })

                            })// End of Modal Shown event
                        }
                        else {

                              funNotification('@appResource.msgNoCostCenters', 2);
                        }
                    }
                    else {
                          funNotification('@appResource.msgChooseAccountFirst', 2);
                    }
                }
            })
        })
    </script>
    <!-- Get CostCenter For Cash Desk -->
    <script>
        $(document).ready(function () {

            // Get Closest Row
            var vTableRow = '';
            // CostCenter Code, Name - F9
            $('.tblCashDeskBody').on('keydown dblclick', '.txtCashCostCenterCode', function (e) {
                // Check F9
                if (e.keyCode == 120 || e.type == 'dblclick') {


                    // Get Closest Row
                    vTableRow = $(this).closest('.tblCashDeskRow');


                    // GET AccountId
                    var vAccountId = vTableRow.find('.txtAccountId').val();
                    var vAccountIsCostCenter = vTableRow.find('.txtAccountIsCostCenter').val();


                    if (vAccountId) {
                        //// Check If Account Is Cost Center
                        if (vAccountIsCostCenter == '1' || vAccountIsCostCenter == 'True') {

                            // Search CostCenter
                            var vURL = '/GLVoucher/AccountCostCenter/?pAccountId=' + vAccountId;
                            // Load Content of CostCenter Search
                            $('#CostCenterDataModalContent').load(vURL);
                            // Modal Show
                            $('#CostCenterDataModal').modal('show');

                            // Get CostCenter Data
                            var vCostCenterIdElement = vTableRow.find('.txtCostCenterId');
                            var vCostCenterCodeElement = vTableRow.find('.txtCashCostCenterCode');
                            var vCostCenterNameElement = vTableRow.find('.txtCashCostCenterName');
                            // Focus
                            $('#CostCenterDataModal').on('shown.bs.modal', function () {

                                // Focuse
                                $('.txtSearch').focus();


                                // Select CostCenter
                                $('body').on('click', '.divAccountCostCenterSelect', function () {

                                    // CostCenter Id
                                    var vCostCenterId = $(this).attr('data-id');

                                    // Get Values
                                    var vCostCenterCodeValue = $(this).find('.divAccountCostCenterCode').text();
                                    var vCostCenterNameValue = $(this).find('.divAccountCostCenterName').text();



                                    // Set Value
                                    vCostCenterIdElement.val(vCostCenterId);
                                    vCostCenterCodeElement.val(vCostCenterCodeValue);
                                    vCostCenterNameElement.val(vCostCenterNameValue);
                                    vTableRow.attr('data-changed', '1')

                                    // Modal Show
                                    $('#CostCenterDataModal').modal('hide');

                                    // Table Row Clear
                                    vTableRow = '';

                                })

                            }) //End of Modal Shown event
                        }
                        else {

                             funNotification('@appResource.msgNoCostCenters', 2);
                        }
                    }
                    else {
                         funNotification('@appResource.msgChooseAccountFirst', 2);
                    }
                }
            })
        })
    </script>
    <!-- Get CostCenter For Check -->
    <script>
        $(document).ready(function () {

            // Get Closest Row
            var vTableRow = '';
            // CostCenter Code, Name - F9
            $('body').on('keydown dblclick', '.txtCheckCostCenterCode', function (e) {

                // Check F9
                if (e.keyCode == 120 || e.type == 'dblclick') {


                    // Get Closest Row
                    vTableRow = $(this).closest('.tblCheckRow');

                    // GET AccountId
                    var vAccountId = vTableRow.find('.txtCheckAccountId').val();
                    if (vAccountId) {

                        // Search CostCenter
                        var vURL = '/GLVoucher/AccountCostCenter/?pAccountId=' + vAccountId;
                        // Load Content of CostCenter Search
                        $('#CostCenterDataModalContent').load(vURL);
                        // Modal Show
                        $('#CostCenterDataModal').modal('show');

                        // Focus
                        $('#CostCenterDataModal').on('shown.bs.modal', function () {

                            // Focuse
                            $('.txtSearch').focus();


                            // Select CostCenter
                            $('body').on('click', '.divAccountCostCenterSelect', function () {

                                // CostCenter Id
                                var vCostCenterId = $(this).attr('data-id');

                                // Get Values
                                var vCostCenterCodeValue = $(this).find('.divAccountCostCenterCode').text();
                                var vCostCenterNameValue = $(this).find('.divAccountCostCenterName').text();

                                // Get CostCenter Data
                                var vCostCenterIdElement = vTableRow.find('.txtCheckCostCenterId');
                                var vCostCenterCodeElement = vTableRow.find('.txtCheckCostCenterCode');
                                var vCostCenterNameElement = vTableRow.find('.txtCheckCostCenterName');

                                // Set Value
                                vCostCenterIdElement.val(vCostCenterId);
                                vCostCenterCodeElement.val(vCostCenterCodeValue);
                                vCostCenterNameElement.val(vCostCenterNameValue);
                                vTableRow.attr('data-changed', '1')

                                // Modal Show
                                $('#CostCenterDataModal').modal('hide');

                                // Table Row Clear
                                vTableRow = '';

                            })

                        }) //End of Modal Shown event
                    }
                    else {
                        funNotification('@appResource.msgChooseBankFirst', 2);
                    }
                }


            })
        })
    </script>
    <!-- Get Customer Supplier -->
    <script>
        // Open Customer Supplier Modal
        $('body').on('keyup dblclick', '.txtCSId', function (e) {
            // F9 - Double Click
            if (e.keyCode == 120 || e.type == 'dblclick') {
                // Search Account
                var vURL = '/GLVoucher/CustomerSupplierSearch';
                // Load Content of Account Search
                $('#AccountDataModalContent').load(vURL);
                // Modal Show
                $('#AccountDataModal').modal('show');
                // Focus
                $('#AccountDataModal').on('shown.bs.modal', function () {
                    $('.txtSearch').focus();

                    // Select Account
                    $('body').on('click', '.divCSSelect', function () {

                        // Get Values
                        var vCSId = $(this).attr('data-id');
                        var vCSNameValue = $(this).find('.divCSName').text();
                        var vAccountId = $(this).find('.divAccountId').text();
                        var vAccountNo = $(this).find('.divAccountNo').text();
                        var vAccountName = $(this).find('.divAccountName').text();
                        var vCurrencyName = $(this).find('.divCurrencyName').text();
                        var vCurrencyId = $(this).find('.divCurrencyId').text();
                        var vCurrencyExchange = $(this).find('.divCurrencyExchange').text();


                        // Get CS Data
                        var vCSIdElement = $('.txtCSId');
                        var vCSNameElement = $('.txtCSName');
                        var vAccountIdElement = $('.txtAccountId')
                        var vAccountCodeElement = $('.txtAccountCode')
                        var vAccountNameElement = $('.txtDTLAccountName')
                        var vCurrencyNameElement = $('.txtDTLAccountCurrencyName');
                        var vCurrencyIdElement = $('.txtDTLAccountCurrencyId');
                        var vCurrencyExchangeElement = $('.txtDTLPayCurrencyValue');
                        var vCurrencyBaseExchangeElement = $('.txtDTLBaseCurrencyValue');

                        // Set Value
                        vCSIdElement.val(vCSId);
                        vCSNameElement.val(vCSNameValue);
                        vAccountIdElement.val(vAccountId)
                        vAccountCodeElement.val(vAccountNo)
                        vAccountNameElement.val(vAccountName)
                        vCurrencyNameElement.val(vCurrencyName)
                        vCurrencyIdElement.val(vCurrencyId)
                        vCurrencyExchangeElement.val(vCurrencyExchange)
                        vCurrencyBaseExchangeElement.val(vCurrencyExchange)

                        // Modal Show
                        $('#AccountDataModal').modal('hide');

                    })
                })
            }
        })
    </script>
    <!--Currency-->
    <script>
        // Account Code, Name - F9 - Double Click
        $('table').on('keyup dblclick', '.txtAccountCurrencyId, .txtDtlCurrencyId', function (e) {

            // F9 - Double Click
            if (e.keyCode == 120 || e.type == 'dblclick') {

                // Table Row - Closest Row
                vTableRow = $(this).closest('tr');

                // Search Account
                var vURL = '/GLVoucher/CurrencySearch';
                // Load Content of Account Search
                $('#AccountDataModalContent').load(vURL);
                // Modal Show
                $('#AccountDataModal').modal('show');
                // Focus
                $('#AccountDataModal').on('shown.bs.modal', function () {
                    $('.txtSearch').focus();

                    // Select Account
                    $('body').on('click', '.divCurrencySelect', function () {

                        // Get Values
                        var vCurrencyId = $(this).attr('data-id');
                        var vCurrencyNameValue = $(this).find('.divCurrencyName').text();


                        // Get Account Data
                        var vAccountCurrencyIdElement = vTableRow.find('.txtAccountCurrencyId');
                        var vAccountCurrencyElement = vTableRow.find('.txtAccountCurrencyName');


                        // Set Value
                        vAccountCurrencyIdElement.val(vCurrencyId);
                        vAccountCurrencyElement.val(vCurrencyNameValue);
                        vTableRow.attr('data-changed', '1')

                        // Modal Show
                        $('#AccountDataModal').modal('hide');
                    });

                })
            }
        })
    </script>
    <!--CashDesk-->
    <script>
        // Account Code, Name - F9 - Double Click
        $('table').on('keyup dblclick', '.txtBoxDtlCode', function (e) {

            // F9 - Double Click
            if (e.keyCode == 120 || e.type == 'dblclick') {

                // Table Row - Closest Row
                vTableRow = $(this).closest('tr');

                // Search Account
                var vURL = '/GLVoucher/CashDeskSearch';
                // Load Content of Account Search
                $('#AccountDataModalContent').load(vURL);
                // Modal Show
                $('#AccountDataModal').modal('show');
                // Focus
                $('#AccountDataModal').on('shown.bs.modal', function () {
                    $('.txtSearch').focus();

                    // Select Account
                    $('body').on('click', '.divCashDeskSelect', function () {

                        // Get Values
                        var vCashDeskId = $(this).attr('data-id');
                        var vCashDeskCodeValue = $(this).find('.divCashDeskCode').text();
                        var vCashDeskNameValue = $(this).find('.divCashDeskName').text();
                        var vAccountNoValue = $(this).find('.divAccountNo').text();
                        var vAccountIdValue = $(this).find('.divAccountId').text();
                        var vdivAccountNameValue = $(this).find('.divAccountName').text();
                        var vCurrencyIdValue = $(this).find('.divCurrencyId').text();
                        var vCurrencyNameValue = $(this).find('.divCurrencyName').text();
                        var vCurrencyFactorValue = $(this).find('.divCurrencyFactorValue').text();
                        var vAccountIsCostCenter = $(this).find('.divAccountIsCostCenter').text();

                        // Get Account Data
                        var vAccountCashDeskIdElement = vTableRow.find('.txtBoxDtlId');
                        var vAccountCashDeskCodeElement = vTableRow.find('.txtBoxDtlCode');
                        var vAccountCashDeskElement = vTableRow.find('.txtBoxDtlName');
                        var vAccountNoElement = vTableRow.find('.txtAccountCode');
                        var vAccountIdElement = vTableRow.find('.txtAccountId');
                        var vAccountNameElement = vTableRow.find('.txtAccountName');
                        var vCurrencyIdElement = vTableRow.find('.txtAccountCurrencyId');
                        var vCurrencyNameElement = vTableRow.find('.txtAccountCurrencyName');
                        var vCurrencyFactorElement = vTableRow.find('.txtCurValue');
                        var vBaseCurrencyFactorElement = vTableRow.find('.txtBaseCurrencyValue');
                        var vAccountIsCostCenterElement = vTableRow.find('.txtAccountIsCostCenter');



                        // Set Value
                        vAccountCashDeskIdElement.val(vCashDeskId);
                        vAccountCashDeskCodeElement.val(vCashDeskCodeValue);
                        vAccountCashDeskElement.val(vCashDeskNameValue);
                        vAccountNoElement.val(vAccountNoValue);
                        vAccountIdElement.val(vAccountIdValue)
                        vAccountNameElement.val(vdivAccountNameValue);
                        vCurrencyIdElement.val(vCurrencyIdValue);
                        vCurrencyNameElement.val(vCurrencyNameValue);
                        vCurrencyFactorElement.val(vCurrencyFactorValue);
                        vBaseCurrencyFactorElement.val(vCurrencyFactorValue);
                        vAccountIsCostCenterElement.val(vAccountIsCostCenter)
                        vTableRow.attr('data-changed', '1')

                        // Modal Show
                        $('#AccountDataModal').modal('hide');
                    });


                })
            }
        })



         // When Change Value Of  Check
        $('body').on('change', '.txtBoxDtlCode', function () {
            var vTableRow = $(this).closest('tr');

        // Get Account Data
        var vBoxDtlId = $(this).val()
        var vAccountBoxDtlIdElement = vTableRow.find('.txtBoxDtlId');
        var vAccountBoxDtlCodeElement = vTableRow.find('.txtBoxDtlCode');
        var vAccountBoxDtlNameElement = vTableRow.find('.txtBoxDtlName');
        var vAccountNoElement = vTableRow.find('.txtAccountCode');
        var vAccountIdElement = vTableRow.find('.txtAccountId');
        var vAccountNameElement = vTableRow.find('.txtAccountName');
        var vCurrencyIdElement = vTableRow.find('.txtAccountCurrencyId');
        var vCurrencyNameElement = vTableRow.find('.txtAccountCurrencyName');
        var vCurrencyFactorElement = vTableRow.find('.txtCurValue');
        var vBaseCurrencyFactorElement = vTableRow.find('.txtBaseCurrencyValue');
        var vAccountIsCostCenterElement = vTableRow.find('.txtAccountIsCostCenter');
        var vCostCenterNameElement = vTableRow.find('.txtCashCostCenterName');
        var vCostCenterIdElement = vTableRow.find('.txtCashCostCenterId');
        var vCostCenterCodeElement = vTableRow.find('.txtCashCostCenterCode');

            // List GetCostCenter
            $.get('/api/APICashDesk/CashDeskGET',
                {
                    pIsAccountDetail: true,
                    pCashDeskCode: vAccountBoxDtlCodeElement.val(),
                   pQueryTypeId: '@clsQueryType.qSelect',

                },
                function (data, status) {
                    if (data == '') {
                        // Empty Fileds
                        vAccountBoxDtlIdElement.val('')
                        vAccountBoxDtlCodeElement.val('')
                        vAccountBoxDtlNameElement.val('')
                        vAccountNoElement.val('')
                        vAccountIdElement.val('')
                        vAccountNameElement.val('')
                        vCurrencyIdElement.val('')
                        vCurrencyNameElement.val('')
                        vCurrencyFactorElement.val('')
                        vBaseCurrencyFactorElement.val('')
                        vAccountIsCostCenterElement.val('')
                        vCostCenterNameElement.val('')
                        vCostCenterIdElement.val('')
                        vCostCenterCodeElement.val('')
                        funNotification('@appResource.msgWrongCashBox', 2);
                    } else {
                        var vDataJSON = JSON.parse(data);
                        $.each(vDataJSON, function (i, CostCenter) {
                            // Set Value
                            vAccountBoxDtlIdElement.val(CostCenter.CashDeskId);
                            vAccountBoxDtlCodeElement.val(CostCenter.CashDeskCode);
                            vAccountBoxDtlNameElement.val(CostCenter.CashDeskNameL1);
                            vAccountNoElement.val(CostCenter.AccountNo);
                            vAccountIdElement.val(CostCenter.AccountId)
                            vAccountNameElement.val(CostCenter.AccountNameL1);
                            vCurrencyIdElement.val(CostCenter.CurrencyId);
                            vCurrencyNameElement.val(CostCenter.CurrencyNameL1);
                            vCurrencyFactorElement.val(CostCenter.CurrencyExchange);
                            vBaseCurrencyFactorElement.val(CostCenter.CurrencyExchange);
                            vAccountIsCostCenterElement.val(CostCenter.IsCostCenter)
                            //vCostCenterNameElement.val(CostCenter.CostCenterNameL1)
                            //vCostCenterIdElement.val(CostCenter.CostCenterId);
                            //vCostCenterCodeElement.val(CostCenter.CostCenterCode);
                        });
                    }
                });

    });
    </script>
    <!--Bank-->
    <script>

    </script>
    <!--BankBranch-->
    <script>
        // Account Code, Name - F9 - Double Click
        $('table').on('keyup dblclick', '.txtCheckBankCode', function (e) {

            // F9 - Double Click
            if (e.keyCode == 120 || e.type == 'dblclick') {

                // Table Row - Closest Row
                vTableRow = $(this).closest('tr');

                // Get Account Data
                var vAccountBankIdElement = vTableRow.find('.txtCheckBankId');
                var vAccountBankCodeElement = vTableRow.find('.txtCheckBankCode');
                var vAccountBankElement = vTableRow.find('.txtCheckBankName');
                var vCurrencyExchangeElement = vTableRow.find('.txtCurValue');
                var vAccountIdELment = vTableRow.find('.txtCheckAccountId')
                var vAccountNoELment = vTableRow.find('.txtCheckAccountNo')


                //Get Main Bank
                var vMainBankId = vTableRow.find('.txtCheckBankId').val()

                    // Search Account
                    var vURL = '/GLVoucher/BankSearch';
                    // Load Content of Account Search
                    $('#AccountDataModalContent').load(vURL);
                    // Modal Show
                    $('#AccountDataModal').modal('show');
                    // Focus
                    $('#AccountDataModal').on('shown.bs.modal', function () {
                        $('.txtSearch').focus();

                        // Select Account
                        $('body').on('click', '.divBankSelect', function () {

                            // Get Values
                            var vBankId = $(this).attr('data-id');
                            var vBankCodeValue = $(this).find('.divBankCode').text();
                            var vBankNameValue = $(this).find('.divBankName').text();
                            var vCurrencyExchangeValue = $(this).find('.divCurrencyExchange').text();
                            var vAccountNoValue = $(this).find('.divAccountNo').text();
                            var vAccountIdValue = $(this).find('.divAccountId').text();

                            // Set Value
                            vAccountBankIdElement.val(vBankId);
                            vAccountBankElement.val(vBankNameValue);
                            vCurrencyExchangeElement.val(vCurrencyExchangeValue)
                            vAccountIdELment.val(vAccountIdValue);
                            vAccountNoELment.val(vAccountNoValue)
                            vAccountBankCodeElement.val(vBankCodeValue)
                            vTableRow.attr('data-changed', '1')
                            // Modal Show
                            $('#AccountDataModal').modal('hide');
                        });
                    })

            }
        })

        // When Change Value Of  Check
        $('body').on('change', '.txtCheckBankCode', function () {
            var vTableRow = $(this).closest('tr');

        var vBankAccountId = $(this).val();
        // Get Account Data
        var vAccountBankIdElement = vTableRow.find('.txtCheckBankId');
        var vAccountBankCodeElement = vTableRow.find('.txtCheckBankCode');
        var vAccountBankElement = vTableRow.find('.txtCheckBankName');
        var vCurrencyExchangeElement = vTableRow.find('.txtCurValue');
        var vAccountIdELment = vTableRow.find('.txtCheckAccountId')
        var vAccountNoELment = vTableRow.find('.txtCheckAccountNo')
        var vCostCenterNameElement = vTableRow.find('.txtCheckCostCenterName');
        var vCostCenterIdElement = vTableRow.find('.txtCheckCostCenterId');
        var vCostCenterCodeElement = vTableRow.find('.txtCheckCostCenterCode');
        // Check Bank
        var vMainBankId = vTableRow.find('.txtCheckBankId').val()

            // List GetCostCenter
            $.get('/api/APIBank/BankGET',
                {
                pIsAccountDetail: true,
                pBankAccountId: vBankAccountId,
                pBankId: vMainBankId,
                pQueryTypeId: '@clsQueryType.qSelect',
                },
                function (data, status) {
                    if (data == '') {
                        // Empty Fileds
                        vAccountBankIdElement.val('');
                        vAccountBankCodeElement.val('');
                        vAccountBankElement.val('');
                        vCurrencyExchangeElement.val('')
                        vAccountIdELment.val('');
                        vAccountNoELment.val('')
                        vCostCenterNameElement.val('')
                        vCostCenterIdElement.val('');
                        vCostCenterCodeElement.val('');
                        funNotification('@appResource.msgWrongBank', 2);
                    } else {
                        var vDataJSON = JSON.parse(data);

                        $.each(vDataJSON, function (i, Bank) {
                            // Set Value
                            vAccountBankIdElement.val(Bank.BankAccountId);
                            vAccountBankElement.val(Bank.BankNameL1);
                            vAccountBankCodeElement.val(Bank.BankCode)
                            vCurrencyExchangeElement.val(Bank.CurrencyExchange)
                            vAccountIdELment.val(Bank.AccountId);
                            vAccountNoELment.val(Bank.AccountNo)
                            //vCostCenterNameElement.val(Bank.CostCenterNameL1)
                            //vCostCenterIdElement.val(Bank.CostCenterId);
                            //vCostCenterCodeElement.val(Bank.CostCenterCode);
                        });
                    }
                });

    });
    </script>
    <!-- Get Item  -->
    <script>
    // Account Code, Name - F9 - Double Click
        $('table').on('keyup dblclick', '.txtItemCode', function (e) {

            // F9 - Double Click
            if (e.keyCode == 120 || e.type == 'dblclick') {
                // Table Row - Closest Row
                vTableRow = $(this).closest('tr');


                // Search Account
                var vURL = '/InvoicePaymentOrder/UnitSearch';
                // Load Content of Account Search
                $('#AccountDataModalContent').load(vURL);
                // Modal Show
                $('#AccountDataModal').modal('show');
                // Focus
                $('#AccountDataModal').on('shown.bs.modal', function () {
                    $('.txtSearch').focus();

                    // Select Account
                    $('#AccountDataModalContent').find('.tblBodyUnit').on('click', 'tr', function () {

                        // Get Values
                        //var vUnitId = $(this).attr('data-id');
                        //var vUnitCodeValue = $(this).find('.divUnitCode').text();
                        //var vUnitNameValue = $(this).find('.divUnitName').text();
                        var vItemIdValue = $(this).find('.divItemId').text();
                        var vItemCodeValue = $(this).find('.divItemCode').text();
                        var vItemNameValue = $(this).find('.divItemName').text();
                        var vCurrencyNameValue = $(this).find('.divCurrencyName').text();
                        var vCurrencyFactorValue = $(this).find('.divCurrencyFactorValue').text();


                        // Get Account Data
                        var vAccountUnitIdElement = vTableRow.find('.txtUnitId');
                        var vAccountUnitCodeElement = vTableRow.find('.txtUnitCode');
                        var vAccountUnitElement = vTableRow.find('.txtUnitName');
                        var vItemIdElement = vTableRow.find('.txtItemId');
                        var vItemCodeElement = vTableRow.find('.txtItemCode');
                        var vItemNameElement = vTableRow.find('.txtItemName');
                        var vCurrencyFactorElement = vTableRow.find('.txtItemCurValue');
                        var vCurrencyNameElement = vTableRow.find('.txtCurrencyName');

                        // Set Value
                        vAccountUnitIdElement.val('');
                        vAccountUnitCodeElement.val('')
                        vAccountUnitElement.val('');
                        vItemIdElement.val(vItemIdValue);
                        vItemCodeElement.val(vItemCodeValue)
                        vCurrencyFactorElement.val(vCurrencyFactorValue);
                        vCurrencyNameElement.val(vCurrencyNameValue)
                        vItemNameElement.val(vItemNameValue);
                        vTableRow.attr('data-changed', '1')

                        // Modal Show
                        $('#AccountDataModal').modal('hide');
                        // Add New Row
                        // funAddDTLEmptyRow($('.tblDtlBody'))
                    });


                })
            }
        });


         $('body').on('click', '.btnAdd', function () {
       location.reload();
    })
         function Clear() {
        $(':input')
            .not(':button, :submit, :reset, :hidden ,.dtpInvDate,.txtDocRefDate')
            .val('')
            .removeAttr('checked')
            .removeAttr('selected');
        $('.tblLaterBody').html('');
        $('.tblDTLRow').html('');
        $('.selected').remove();
        $('.txtInvId').val('0')

        funUnDisabledAllInput()

        DtlBody = $('.tblDtlBody')
        // Add Row
        funAddDTLEmptyRow(DtlBody)
        LaterBody = $('.tblLaterBody')
        // Add Row
        funAddLaterEmptyRow(LaterBody)
    }

              // Account Code, Name - F9 - Double Click
    $('.tblInvDtlBody').on('keyup dblclick', '.txtUnitName', function (e) {

        // F9 - Double Click
        if (e.keyCode == 120 || e.type == 'dblclick') {

            // Table Row - Closest Row
            vTableRow = $(this).closest('tr');
            var vItemId = vTableRow.find('.txtItemId').val()
            // Search Account
            var vURL = '/ResItem/UnitSearch?pItemId=' + vItemId;
            // Load Content of Account Search
            $('#AccountDataModalContent').html('')
            $('#AccountDataModalContent').load(vURL);
            // Modal Show
            $('#AccountDataModal').modal('show');
            // Focus
            $('#AccountDataModal').on('shown.bs.modal', function () {
                $('.txtSearch').focus();

                // Select Account
                $('body').on('click', '.divUnitSelect', function () {

                    // Get Values
                    var vUnitId = $(this).attr('data-id');
                    var vUnitNameValue = $(this).find('.divUnitName').text();
                    var vUnitCodeValue = $(this).find('.divUnitCode').text();
                    var vUnitPriceValue = $(this).find('.divUnitPrice').text();


                    // Get Unit Data
                    var vUnitIdElement = vTableRow.find('.txtUnitId');
                    var vUnitNameElement = vTableRow.find('.txtUnitName');
                    var vUnitCodeElement = vTableRow.find('.txtUnitCode');
                    var vUnitPriceElement = vTableRow.find('.txtUnitPrice');


                    // Set Value
                    vUnitIdElement.val(vUnitId);
                    vUnitNameElement.val(vUnitNameValue);
                    vUnitCodeElement.val(vUnitCodeValue);
                    vUnitPriceElement.val(vUnitPriceValue);
                    // Modal Show
                    $('#AccountDataModal').modal('hide');
                    vTableRow.removeClass('table-info');

                    vTableRow = '';
                })
            })
        }
    })
             // Account Code, Name - F9 - Double Click
    $('table').on('change', '.txtItemCode', function (e) {

            // Table Row - Closest Row
             vTableRow = $(this).closest('tr');
            // Get Account Data
            var vAccountUnitIdElement = vTableRow.find('.txtUnitId');
            var vAccountUnitCodeElement = vTableRow.find('.txtUnitCode');
            var vAccountUnitElement = vTableRow.find('.txtUnitName');
            var vItemIdElement = vTableRow.find('.txtItemId');
            var vItemCodeElement = vTableRow.find('.txtItemCode');
            var vItemNameElement = vTableRow.find('.txtItemName');
            var vCurrencyFactorElement = vTableRow.find('.txtItemCurValue');
            var vCurrencyNameElement = vTableRow.find('.txtCurrencyName');

            var vCode = $(this).val();
              // List GetCostCenter
            $.get('/api/APIUnit/UnitGET',
            {
                pUnitCode: vCode,
                pQueryTypeId: '@clsQueryType.qSelect'

            },
                function (data, status) {
                    if (data == '') {
                        // Empty Fileds
                        vAccountUnitIdElement.val('');
                        vAccountUnitCodeElement.val('')
                        vAccountUnitElement.val('');
                        vItemIdElement.val('');
                        vItemCodeElement.val('');
                        vItemNameElement.val('');
                        vCurrencyFactorElement.val('');
                        vCurrencyNameElement.val('')
                        funNotification('@appResource.msgChooseCorrectCustomer', 2);
                    } else {
                        var vDataJSON = JSON.parse(data);
                        $.each(vDataJSON, function (i, Unit) {

                            // Set Value
                            vAccountUnitIdElement.val(Unit.UnitId);
                            vAccountUnitCodeElement.val(Unit.UnitCode)
                            vAccountUnitElement.val(Unit.UnitNameL1);
                            vItemIdElement.val(Unit.ItemId);
                            vItemCodeElement.val(Unit.InvItemCode);
                            vItemNameElement.val(Unit.InvItemNameL1);
                            vCurrencyFactorElement.val(Unit.CurrencyExchange);
                            vCurrencyNameElement.val(Unit.CurrencyNameL1)

                        });
                    }
                });

    })
    </script>

    <!--Search-->
    <script>
        var vDataSearch;
        var vCount = 0;

        function funLoadData() {
            var vDataResult;
            $.get('/api/APIINVInvoice/INVInvoiceGET',
                {
                    pIsDeleted: false,
                    pQueryTypeId: '400',
                    phInvtype: '3',
                },
                function (data, status) {

                    // JSON Parse
                    var vLoadDataResult = JSON.parse(data);
                    vDataSearch = vLoadDataResult
                    //displayData(vDataSearch[0])

                })

        }
        funLoadData()


        $('.btnSearch').on('click', function () {
            // Search CostCenter
            var vURL = '/InvoicePaymentOrder/InvoiceSearch';
            // Load Content of CostCenter Search
            $('#CostCenterDataModalContent').load(vURL);
            // Modal Full
            $('#CostCenterDataModalContent').parent().addClass('modal-dialog-full');
            // Modal Show
            $('#CostCenterDataModal').modal('show');
        })
        // PRINT
        $('body').on('click', '.btnSelect', function () {
            var count = $("input[name='chkIsValid']:checked").length;
            if (count == 0) {
                // alert("No rows selected to Print");
                return false;
            }
            else {
                // Selected Permissions
                var vSelected = '';

                // Check If All True Or False
                $('table > tbody > tr ').each(function () {
                    // Element
                    var vElement = $(this).find('.clsChk')
                    var vSelectedChk = vElement.prop('checked')
                    // Check
                    if (vSelectedChk) {
                        // Get Id
                        var vGlVoucherId = vElement.attr('data-id');
                        // Add Selected Action
                        vSelected += vGlVoucherId + ',';
                        vCount += $(this).length

                    }
                });
                $('.txtTotalCount').text(vCount)
                // close The Modal
                $('#CostCenterDataModal').modal('hide');

                // Get Data From Gl Voucher After Select
                $.get('/api/APIINVInvoice/INVInvoiceGET',
                    {
                        // Head Parameters
                        phNumbers: vSelected,
                        //pdInvId:1,
                        //phIsDeleted: false,
                        // Query Type Id
                        pQueryTypeId: '400'
                    },
                    function (data, status) {
                        // JSON Parse
                        vDataResult = JSON.parse(data);
                        console.log(vDataResult)
                        vDataSearch = vDataResult

                        displayData(vDataSearch[0])

                    })
            }
        });
        //Next-Previous-First-Last
        var index = 0;
        $('#btnNext').click(function () {
            var Value = index + 1
            if (Value < vDataSearch.length) {
                // Call Function Display Data
                displayData(vDataSearch[++index]);

                $('.txtCount').text(index)
            }
        });
        $('#btnPrev').click(function () {
            if (index > 0) {
                // Call Function Display Data
                displayData(vDataSearch[--index])
                $('.txtCount').text(index)
            }
        });
        $('#btnFirst').click(function () {
            $('.txtCount').text(1)
            displayData(vDataSearch[0])
        });
        $('#btnLast').click(function () {
            $('.txtCount').text(vDataSearch.length)
            displayData(vDataSearch[vDataSearch.length - 1])
        });
        // Get Data
        function displayData(pData) {

            var vInvDataResult = pData
            var Check = pData.PayCheck
            var Cash = pData.PayCash
            var Later = pData.PayLater

            // For Each DocDetail  - Main
            if (pData.InvoiceDTL) {
                if (pData.InvoiceDTL) {
                    $('.tblInvDtlBody').html('');
                    for (var i = 0; i <= pData.InvoiceDTL.length - 1; i++) {

                        if (pData.InvoiceDTL[i].IsDeleted != 1) {


                            // GET Cash Desk Row Content
                            var vContent = funInvDtlConfig(vInvDataResult.InvoiceDTL[i]);
                            // Append Row Content
                            $('.tblInvDtlBody').append(vContent);
                        }

                    }
                }
            }
            // Later
            if (Later) {
                if (pData.InvLater) {
                    console.log(pData.InvLater)
                    $('.tblLaterBody').html('');
                    for (var i = 0; i <= pData.InvLater.length - 1; i++) {

                        // GET Cash Desk Row Content
                        var vContent = funINVLaterConfig(vInvDataResult.InvLater[i]);
                        // Append Row Content
                        $('.tblLaterBody').append(vContent);

                    }
                }
            }

            if (Cash) {
                if (pData.tblInvBox) {
                    $('.tblBoxBody').html('');
                    for (var i = 0; i <= pData.tblInvBox.length - 1; i++) {

                        // GET Cash Desk Row Content
                        var vContent = funBoxConfig(vInvDataResult.tblInvBox[i]);
                        // Append Row Content
                        $('.tblBoxBody').append(vContent);

                    }
                }
            }
            if (Check) {
                if (pData.tblInvCheck) {
                    $('.tblCheckBody').html('');
                    for (var i = 0; i <= pData.tblInvCheck.length - 1; i++) {

                        // GET Cash Desk Row Content
                        var vContent = funCheckConfig(vInvDataResult.tblInvCheck[i]);
                        // Append Row Content
                        $('.tblCheckBody').append(vContent);

                    }
                }
            }

            // Fill Head
            funInvHead(pData)

            // Check Date
            funCheckDate()

            //// Dtl Total Base
            CalculateFinalTotal()

            //// Total Later
            funTotalLaterCredit()

            // Total Check
            funTotalCheckCredit()

            // Total Box
            funTotalBoxCreditDiff();

            // tabs
            funTabs();

            // Disable All Input
            funDisabledAllInput();
        }
    </script>
    <!--Fill Head-->
    <script>
        function funInvHead(pInvHead) {
            // Get Doc Id
            $('.txtInvId').val(pInvHead.InvId);
            $('.txtDocNo').val(pInvHead.InvCode)
            $('.txtStoreId').val(pInvHead.StoreId);
            $('.txtStoreCode').val(pInvHead.StoreCode);
            $('.txtStoreName').val(pInvHead.StoreNameL1);
            $('.txtCustomerId').val(pInvHead.CustomerId);
            $('.txtCustomerCode').val(pInvHead.CSCode);
            $('.txtCustomerName').val(pInvHead.CSNameL1);
            $('.txtDocRefNo').val(pInvHead.InvRef)
            $('.txtDocRefDate').val(pInvHead.InvRefDate)

            $('.dtpInvDate').val(pInvHead.InvDate);
            $('.chkIsPosted').prop('checked', pInvHead.IsPosted);
            $('.chkIsCheck').prop('checked', pInvHead.PayCheck);
            $('.chkIsBox').prop('checked', pInvHead.PayCash);
            $('.chkIsLater').prop('checked', pInvHead.PayLater);

            $('.txtInvDisc').val(pInvHead.InvDisc);
            $('.txtDiscPerc').val(pInvHead.DiscPerc);
        }

    </script>


    <!--Year Check-->
    <script>
        // Change Date - Check
        funCheckDate()
        $('.dtpInvDate').on('blur', function (e) {
            // Check Date
            funCheckDate()
        })
        // Fun Check Finanical Year
        function funCheckDate() {
            // Get Current Date
            var vDate = $('.dtpInvDate').val();
            var vDatePicker = $('.dtpInvDate');
            var vDateValid;
            // Check Date
            var fun = $.get('/GLVoucher/funFinancialDateCheckGET', { pDate: vDate }, function (data, status) {

                // JSON parse
                var vDataResult = JSON.parse(data);

                // Is Date Valid
                var vIsDateValid = vDataResult[0].vIsFullValid;
                localStorage.setItem('vIsDateValid', vIsDateValid)

                // Check Date
                if (!vIsDateValid) {
                    // Doc Date InValid
                    funDocDateValid(vDatePicker, false);
                    // Notification
                    //  funNotification('لا يمكن إختيار التاريخ الحالى', 2);
                    $('.txtCheckDate').val('false')
                }
                else {

                    // Doc Date Valid
                    funDocDateValid(vDatePicker, true);
                    $('.txtCheckDate').val('true')
                }
                return data
            })
            //return vDateValid
        }
        // Doc Date Valid
        function funDocDateValid(pDatePickerElement, pIsValid) {

            // White Text - For Valid and InValid
            pDatePickerElement.addClass('text-white');

            // Check If Invalid
            if (pIsValid) {

                pDatePickerElement.removeClass('bg-danger');
                pDatePickerElement.addClass('bg-success');
            }
            else {

                pDatePickerElement.addClass('bg-danger');
                pDatePickerElement.removeClass('bg-success');
            }
        }

        //Edit
        //Edit
        $('#btnEdit').on('click', function () {

            // Is Posted
            var vDocIsPosted = $('.chkIsDocPosted').prop('checked');
            if (!vDocIsPosted) {
                funUnDisabledAllInput()
            }
            else {
                funNotification('@appResource.msgCannotEditPostedEntry', '2')
            }
        })

        // Disabled All Input Execpt Click Edit
        function funDisabledAllInput() {
            $(':input').not('#btnEdit,.btnSearch,.btnUtility,.btnCairo,.btnDubai,.btnStorePost').attr('disabled', true)
        }

        function funUnDisabledAllInput() {
            $(':input').not('.txtBoxDtlName,.txtCostCenterName,.txtCurValue,.txtBoxBaseCredit,.txtCheckBankName,.txtCheckCostCenterName,.txtStoreName,.txtCustomerName,.txtDocNo,.txtItemName,.txtUnitName,.txtTotal,.txtTotalVatAmt,.txtBaseTotal,.txtInvTotal,.txtTotalVat,.txtFinalTotal,.txtAccountName,.txtLaterCurValue,.txtLaterBaseAmtCredit,.txtBaseCredit,#IsPosted,.chkIsBox,.chkIsLater,.chkIsCheck,.txtCheckTotal,.txtBoxTotal').attr('disabled', false)
        }
    </script>
    <!--ON Change Value-->
    <script>
    // When Change Value Of Id Cash
    $('body').on('change', '.txtCashCostCenterCode', function () {
        var vTableRow = $(this).closest('tr');

        // Get AccountID
        var vAccountId = vTableRow.find('.txtAccountId').val();
        var vElement = $(this)
        var vCostCenterNo = $(this).val();
        var vCostCenterName = vTableRow.find('.txtCashCostCenterName');
        var vCostCenterId = vTableRow.find('.txtCashCostCenterId');
        if (vAccountId == '') {
            // Empty Fileds
            $(this).val('');
            vCostCenterName.val('')
            vCostCenterId.val('')
            funNotification('@appResource.msgChooseAccountFirst', 2);
        } else {
            // List GetCostCenter
            $.get('/api/APIGLVoucher/AccountCostCenterGET',
                {
                    pAccountId: vAccountId,
                    pCostCenterCode: vCostCenterNo,
                    pQueryTypeId: 400
                },
                function (data, status) {
                    if (data == '') {
                        // Empty Fileds
                        vElement.val('');
                        vCostCenterName.val('')
                        vCostCenterId.val('')
                        funNotification('@appResource.msgWrongCostCenter', 2);
                    } else {
                        var vDataJSON = JSON.parse(data);

                        $.each(vDataJSON, function (i, CostCenter) {
                            vCostCenterName.val(CostCenter.CostCenterNameL1)
                            vCostCenterId.val(CostCenter.CostCenterId)
                        });
                    }
                });
        }
    });
    // When Change Value Of  Check
    $('body').on('change', '.txtCheckCostCenterCode', function () {
        var vTableRow = $(this).closest('tr');

        // Get AccountID
        var vAccountId = vTableRow.find('.txtCheckAccountId').val();
        var vElement = $(this)
        var vCostCenterNo = $(this).val();
        var vCostCenterName = vTableRow.find('.txtCheckCostCenterName');
        var vCostCenterId = vTableRow.find('.txtCheckCostCenterId');
        if (vAccountId == '') {
            // Empty Fileds
            $(this).val('');
            vCostCenterName.val('')
            vCostCenterId.val('')
            funNotification('@appResource.msgChooseAccountFirst', 2);
        } else {
            // List GetCostCenter
            $.get('/api/APIGLVoucher/AccountCostCenterGET',
                {
                    pAccountId: vAccountId,
                    pCostCenterCode: vCostCenterNo,
                    pQueryTypeId: 400

                },
                function (data, status) {
                    if (data == '') {
                        // Empty Fileds
                        vElement.val('');
                        vCostCenterName.val('')
                        vCostCenterId.val('')
                       funNotification('@appResource.msgWrongCostCenter', 2);
                    } else {
                        var vDataJSON = JSON.parse(data);

                        $.each(vDataJSON, function (i, CostCenter) {
                            vCostCenterName.val(CostCenter.CostCenterNameL1)
                            vCostCenterId.val(CostCenter.CostCenterId)
                        });
                    }
                });
        }
    });


    // When Change Value Of  Check
    $('body').on('change', '.txtAccountCurrencyId', function () {
        var vTableRow = $(this).closest('tr');

        var vCurrencyId = $(this).val();
        // Get Account Data
        var vAccountCurrencyIdElement = vTableRow.find('.txtAccountCurrencyId');
        var vAccountCurrencyElement = vTableRow.find('.txtAccountCurrencyName');
        var vAccountId = vTableRow.find('.txtAccountCode').val()
        if (vAccountId == '') {
            // Empty Fileds
            $(this).val('');
            vAccountCurrencyIdElement.val('');
            vAccountCurrencyElement.val('');
                    funNotification('@appResource.msgChooseAccountFirst', 2);
        } else {
            // List GetCostCenter
            $.get('/api/APICurrency/CurrencyGET',
                {
                    pCurrencyId: vCurrencyId,
                    pQueryTypeId: 400
                },
                function (data, status) {
                    if (data == '') {
                        // Empty Fileds
                        vAccountCurrencyIdElement.val('');
                        vAccountCurrencyElement.val('');
                        funNotification('@appResource.msgWrongCurrency', 2);
                    } else {
                        var vDataJSON = JSON.parse(data);

                        $.each(vDataJSON, function (i, CostCenter) {
                            // Set Value
                            vAccountCurrencyIdElement.val(CostCenter.CurrencyId);
                            vAccountCurrencyElement.val(CostCenter.CurrencyNameL1);
                        });
                    }
                });
        }
    });
    // When Change Value Of  Check
    $('body').on('change', '.txtCheckBankId', function () {
        var vTableRow = $(this).closest('tr');

        var vBankId = $(this).val();
        // Get Account Data
        var vAccountBankIdElement = vTableRow.find('.txtCheckBankId');
        var vAccountBankElement = vTableRow.find('.txtCheckBankName');
            // List GetCostCenter
           $.get('/api/APIBank/BankGET',
            {
                pIsAccountDetail: false,
                pBankId: vBankId,
                pQueryTypeId: '@clsQueryType.qSelect',

            },
                function (data, status) {
                    if (data == '') {
                        // Empty Fileds
                        vAccountBankIdElement.val('');
                        vAccountBankElement.val('');
                        funNotification('@appResource.msgWrongBank', 2);
                    } else {
                        var vDataJSON = JSON.parse(data);
                        $.each(vDataJSON, function (i, MainBank) {
                            // Set Value
                            vAccountBankIdElement.val(MainBank.BankId);
                            vAccountBankElement.val(MainBank.BankNameL1);
                        });
                    }
                });
    });
    // When Change Value Of  Check
    $('body').on('change', '.txtCheckBankBranchId', function () {
        var vTableRow = $(this).closest('tr');

        var vBankAccountId = $(this).val();
        // Get Account Data
        var vAccountBankIdElement = vTableRow.find('.txtCheckBankBranchId');
        var vAccountBankElement = vTableRow.find('.txtCheckBankBranchName');
        var vCurrencyExchangeElement = vTableRow.find('.txtCheckCurrencyValue');
        var vAccountIdELment = vTableRow.find('.txtCheckAccountId')
        var vAccountNoELment = vTableRow.find('.txtCheckAccountNo')
        var vCostCenterNameElement = vTableRow.find('.txtCheckCostCenterName');
        var vCostCenterIdElement = vTableRow.find('.txtCheckCostCenterId');
        var vCostCenterCodeElement = vTableRow.find('.txtCheckCostCenterCode');
        // Check Bank
        var vMainBankId = vTableRow.find('.txtCheckBankId').val()
        if (vMainBankId == '') {
            // Empty Fileds
            $(this).val('');
            vAccountBankIdElement.val('');
            vAccountBankElement.val('');
            vCurrencyExchangeElement.val('')
            vAccountIdELment.val('');
            vAccountNoELment.val('')
            vCostCenterNameElement.val('')
            vCostCenterIdElement.val('');
            vCostCenterCodeElement.val('');
            funNotification('@appResource.msgChooseMainBankFirst', 2);
        } else {
            // List GetCostCenter
            $.get('/api/APIBank/BankGET',
                {
                pIsAccountDetail: true,
                pBankAccountId: vBankAccountId,
                pBankId: vMainBankId,
                pQueryTypeId: '@clsQueryType.qSelect',
                },
                function (data, status) {
                    if (data == '') {
                        // Empty Fileds
                        vAccountBankIdElement.val('');
                        vAccountBankElement.val('');
                        vCurrencyExchangeElement.val('')
                        vAccountIdELment.val('');
                        vAccountNoELment.val('')
                        vCostCenterNameElement.val('')
                        vCostCenterIdElement.val('');
                        vCostCenterCodeElement.val('');
                        funNotification('@appResource.msgWrongBank', 2);
                    } else {
                        var vDataJSON = JSON.parse(data);

                        $.each(vDataJSON, function (i, Bank) {
                            // Set Value
                            vAccountBankIdElement.val(Bank.BankAccountId);
                            vAccountBankElement.val(Bank.BankNameL1);
                            vCurrencyExchangeElement.val(Bank.CurrencyExchange)
                            vAccountIdELment.val(Bank.AccountId);
                            vAccountNoELment.val(Bank.AccountNo)

                        });
                    }
                });
        }
    });
        // When Change Value Of  Check
    $('body').on('change', '.txtEPaymentTypeId', function () {
        var vTableRow = $(this).closest('tr');

        // Get EPaymentType Data
        var vEPaymentTypeIdElement = vTableRow.find('.txtEPaymentTypeId');
        var vEPaymentTypeCodeElement = vTableRow.find('.txtEPaymentTypeCode');
        var vEPaymentTypeNameElement = vTableRow.find('.txtEPaymentTypeName');
        var vId = $(this).val()
            // List GetCostCenter
        $.get('/api/APIEPaymentType/EPaymentTypeGET',
            {
                pEPaymentTypeId: vId,
                pQueryTypeId: '@clsQueryType.qSelect'

            },
                function (data, status) {
                    if (data == '') {
                        // Empty Fileds
                        vEPaymentTypeIdElement.val('');
                        // Set Value
                        vEPaymentTypeCodeElement.val('');
                        vEPaymentTypeNameElement.val('');
                        funNotification('@appResource.msgChooseCorrectPay', 2);
                    } else {
                        var vDataJSON = JSON.parse(data);
                        $.each(vDataJSON, function (i, Type) {
                            vEPaymentTypeIdElement.val(Type.EPaymentTypeId);
                            // Set Value
                            vEPaymentTypeCodeElement.val(Type.EPaymentTypeId);
                            vEPaymentTypeNameElement.val(Type.EPaymentTypeNameL1);
                        });
                    }
                });
    });

    // Open Voucher Category Modal
    $('body').on('change', '.txtCategoryId', function (e) {

      // Get GLVoucherCategory Data
      var vGLVoucherCategoryIdElement = $('.txtCategoryId');
        var vGLVoucherCategoryNameElement = $('.txtCategoryName');
        var vId = $(this).val();
              // List GetCostCenter
        $.get('/api/APIGLVoucherCategory/GLVoucherCategoryGET',
            {
                pGLVoucherCategoryId: vId,
                pQueryTypeId: '@clsQueryType.qSelect'

            },
                function (data, status) {
                    if (data == '') {
                        // Empty Fileds
                        vGLVoucherCategoryIdElement.val('');
                        vGLVoucherCategoryNameElement.val('');
                        funNotification('@appResource.msgChooseCorrectType', 2);
                    } else {
                        var vDataJSON = JSON.parse(data);
                        $.each(vDataJSON, function (i, Category) {
                            // Set Value
                            vGLVoucherCategoryIdElement.val(Category.GLVoucherCategoryId);
                            vGLVoucherCategoryNameElement.val(Category.GLVoucherCategoryNameL1);
                        });
                    }
                });
    })
     // Open Voucher CSID Modal
    $('body').on('change', '.txtCSId', function (e) {

        // Get CS Data
        var vCSIdElement = $('.txtCSId');
        var vCSNameElement = $('.txtCSName');
        var vAccountIdElement = $('.txtAccountId')
        var vAccountCodeElement = $('.txtAccountCode')
        var vAccountNameElement = $('.txtDTLAccountName')
        var vCurrencyNameElement = $('.txtDTLAccountCurrencyName');
        var vCurrencyIdElement = $('.txtDTLAccountCurrencyId');
        var vCurrencyExchangeElement = $('.txtDTLPayCurrencyValue');
        var vCurrencyBaseExchangeElement = $('.txtDTLBaseCurrencyValue');

        var vId = $(this).val();
              // List GetCostCenter
        $.get('/api/APICustomerSupplier/CustomerSupplierGET',
            {
                pCSId: vId,
                pQueryTypeId: '@clsQueryType.qSelect'

            },
                function (data, status) {
                    if (data == '') {
                        // Empty Fileds
                        vCSIdElement.val('');
                        vCSNameElement.val('');
                        funNotification('@appResource.msgChooseCorrectCustomer', 2);
                    } else {
                        var vDataJSON = JSON.parse(data);
                        $.each(vDataJSON, function (i, CS) {

                            // Set Value
                            vCSIdElement.val(CS.CSId);
                            vCSNameElement.val(CS.CSNameL1);
                            vAccountIdElement.val(CS.AccountId)
                            vAccountCodeElement.val(CS.AccountNo)
                            vAccountNameElement.val(CS.AccountNameL1)
                            vCurrencyNameElement.val(CS.CurrencyNameL1)
                            vCurrencyIdElement.val(CS.CurrencyId)
                            vCurrencyExchangeElement.val(CS.CurrencyExchange)
                            vCurrencyBaseExchangeElement.val(CS.CurrencyExchange)
                        });
                    }
                });
    })
    </script>
    <!--onchange DTL-->
    <script>
        // When Change Value Of Id
        $('body').on('change', '.txtAccountCode', function () {
            var vAccountNo = $(this).val();
            var vAccountName = $(this).closest('tr').find('.txtAccountName');
            var vAccountId = $(this).closest('tr').find('.txtAccountId');
            var vTableRow = $(this).closest('tr');

            // Get Account Data
            var vAccountIdElement = vTableRow.find('.txtAccountId');
            var vAccountCodeElement = vTableRow.find('.txtAccountCode');
            var vAccountNameElement = vTableRow.find('.txtAccountName');
            var vAccountCurrencyFactorElement = vTableRow.find('.txtLaterCurValue');
            var vAccountBaseCurrencyFactorElement = vTableRow.find('.txtBaseCurrencyValue');
            var vAccountIsCostCenterElement = vTableRow.find('.txtAccountIsCostCenter');
            var vAccountCurrencyElement = vTableRow.find('.txtAccountCurrencyId');
            var vAccountCurrencyNameElement = vTableRow.find('.txtAccountCurrencyName');
            var vCostCenterNameElement = vTableRow.find('.txtCostCenterName');
            var vCostCenterIdElement = vTableRow.find('.txtCostCenterId');
            var vCostCenterCodeElement = vTableRow.find('.txtCostCenterCode');
            // List GetAccount
            $.get('/api/APIGLVoucher/AccountLastChildGET',
                {
                    pAccountNo: vAccountNo,
                    pQueryTypeId: 400
                },
                function (data, status) {
                    if (data == '') {
                        funNotification('@appResource.msgChooseCorrectAccount', '2')
                        // Set Value
                        vAccountIdElement.val('');
                        vAccountCodeElement.val('');
                        vAccountNameElement.val('');
                        vAccountCurrencyFactorElement.val('');
                        vAccountIsCostCenterElement.val('');
                        vAccountCurrencyElement.val('');
                        vAccountCurrencyNameElement.val('');
                        vCostCenterNameElement.val('')
                        vCostCenterIdElement.val('');
                        vCostCenterCodeElement.val('');
                    }
                    else {
                        var vDataJSON = JSON.parse(data);
                        $.each(vDataJSON, function (i, Account) {
                            // Set Value
                            vAccountName.val(Account.AccountNameL1)
                            vAccountId.val(Account.AccountId)
                            vAccountIdElement.val(Account.AccountId);
                            vAccountCodeElement.val(Account.AccountNo);
                            vAccountNameElement.val(Account.AccountNameL1);
                            vAccountCurrencyFactorElement.val(Account.CurrencyExchange);
                            vAccountBaseCurrencyFactorElement.val(Account.CurrencyExchange);
                            vAccountIsCostCenterElement.val(Account.AccountIsCostCenter);
                            vAccountCurrencyElement.val(Account.CurrencyId);
                            vAccountCurrencyNameElement.val(Account.CurrencyNameL1);

                        });
                    }
                });
        });

        // When Change Value Of Id
        $('body').on('change', '.txtCostCenterCode', function () {
            var vTableRow = $(this).closest('tr');

            // Get AccountID
            var vAccountId = vTableRow.find('.txtAccountId').val();
            var vElement = $(this)
            var vCostCenterNo = $(this).val();
            var vCostCenterName = vTableRow.find('.txtCostCenterName');
            var vCostCenterId = vTableRow.find('.txtCostCenterId');
            if (vAccountId == '') {
                // Empty Fileds
                $(this).val('');
                vCostCenterName.val('')
                vCostCenterId.val('')
                funNotification('@appResource.msgChooseAccountFirst', 2);
            } else {
                // List GetCostCenter
                $.get('/api/APIGLVoucher/AccountCostCenterGET',
                    {
                        pAccountId: vAccountId,
                        pCostCenterCode: vCostCenterNo,
                        pQueryTypeId: 400

                    },
                    function (data, status) {
                        if (data == '') {
                            // Empty Fileds
                            vElement.val('');
                            vCostCenterName.val('')
                            vCostCenterId.val('')
                            funNotification('@appResource.msgWrongCostCenter', 2);
                        } else {
                            var vDataJSON = JSON.parse(data);

                            $.each(vDataJSON, function (i, CostCenter) {
                                vCostCenterName.val(CostCenter.CostCenterNameL1)
                                vCostCenterId.val(CostCenter.CostCenterId)
                            });
                        }
                    });
            }
        });
    </script>
    <script>
        // To Move Between Inputs Using Tabs
        function funFoucus(pElement) {
            $('.' + pElement).focus();
        }

        // Fill Notes In DTLS
        $('.txtDocNote').on('blur', function () {
            var vValue = $(this).val();
            $('.txtDTLNote').val(vValue)
        })


        // Validate CheckBox
        $('.chkIsLater').on('change', function () {
            var ChkLater = $(this).prop('checked');
            if (ChkLater) {
                $('.chkIsBox').prop('checked', false)
                $('.chkIsCheck').prop('checked', false)
            }
            CheckBoxValidate()
        })
        // Validate CheckBox
        $('.chkIsBox').on('change', function () {
            var ChkBox = $(this).prop('checked');
            if (ChkBox) {
                $('.chkIsLater').prop('checked', false)
            }
            CheckBoxValidate()
        })
        // Validate CheckBox
        $('.chkIsCheck').on('change', function () {
            var ChkCheck = $(this).prop('checked');
            if (ChkCheck) {
                $('.chkIsLater').prop('checked', false)
            }
            CheckBoxValidate()
        })
        function CheckBoxValidate() {
            var Later = $('.chkIsLater').prop('checked')
            var Box = $('.chkIsBox').prop('checked')
            var Check = $('.chkIsCheck').prop('checked')
            if (!Later && !Box && !Check) {
                $('.chkIsBox').prop('checked', true)
            }
        }
        $('.tblBoxBody').on('change', '.txtBoxDtlCode,.txtCostCenterCode,.txtBoxCredit,.txtNotes', function () {
            // Get Closest Row
            var vTableRow = $(this).closest('.tblBoxRow');
            vTableRow.find('.txtBoxDtlCode').css("border-color", "");
            vTableRow.find('.txtBoxCredit').css("border-color", "");
            vTableRow.attr('data-changed', '1')
        })
        $('.tblCheckBody').on('change', '.txtCheckBankCode,.txtCheckNo,.txtCheckPayDate,.txtCheckCostCenterCode,.txtCheckCredit,.txtNotes', function () {
            // Get Closest Row
            var vTableRow = $(this).closest('.tblCheckRow');
            vTableRow.find('.txtCheckBankCode').css("border-color", "");
            vTableRow.find('.txtCheckNo').css("border-color", "");
            vTableRow.find('.txtCheckCredit').css("border-color", "");
            vTableRow.attr('data-changed', '1')
        })
        $('.tblLaterBody').on('change', '.txtAccountCode,.txtCostCenterCode,.txtLaterAmtCredit,.txtLaterAmtNotes', function () {
            // Get Closest Row
            var vTableRow = $(this).closest('.tblLaterRow');
            vTableRow.find('.txtAccountCode').css("border-color", "");
            vTableRow.find('.txtLaterAmtCredit').css("border-color", "");
            vTableRow.attr('data-changed', '1')
        })
        $('.tblInvDtlBody').on('change', '.txtItemCode,.txtDisDate,.txtItemQty,.txtItemPrice,.txtVatAmt', function () {
            // Get Closest Row
            var vTableRow = $(this).closest('.tblInvDtlRow');
            vTableRow.find('.txtItemCode').css("border-color", "");
            vTableRow.find('.txtItemQty').css("border-color", "");
            vTableRow.find('.txtItemPrice').css("border-color", "");
            vTableRow.find('.txtVatAmt').css("border-color", "");
            vTableRow.attr('data-changed', '1')
        })
        $('.tblBoxBody').on('change', '.txtBoxDtlCode', function () {
            // Get Closest Row
            var vTableRow = $(this).closest('.tblBoxRow');
            vTableRow.find('.txtBoxDtlCode').css("border-color", "");
        })
        $('.tblBoxBody').on('change', '.txtBoxCredit', function () {
            // Get Closest Row
            var vTableRow = $(this).closest('.tblBoxRow');
            vTableRow.find('.txtBoxCredit').css("border-color", "");
        })
        $('.tblCheckBody').on('change', '.txtCheckBankCode', function () {
            // Get Closest Row
            var vTableRow = $(this).closest('.tblCheckRow');
            vTableRow.find('.txtCheckBankCode').css("border-color", "");
        })
        $('.tblCheckBody').on('change', '.txtCheckNo', function () {
            // Get Closest Row
            var vTableRow = $(this).closest('.tblCheckRow');
            vTableRow.find('.txtCheckNo').css("border-color", "");
        })
        $('.tblCheckBody').on('change', '.txtCheckCredit', function () {
            // Get Closest Row
            var vTableRow = $(this).closest('.tblCheckRow');
            vTableRow.find('.txtCheckCredit').css("border-color", "");
        })
        $('.tblLaterBody').on('change', '.txtAccountCode', function () {
            // Get Closest Row
            var vTableRow = $(this).closest('.tblLaterRow');
            vTableRow.find('.txtAccountCode').css("border-color", "");
        })
        $('.tblLaterBody').on('change', '.txtLaterAmtCredit', function () {
            // Get Closest Row
            var vTableRow = $(this).closest('.tblLaterRow');
            vTableRow.find('.txtLaterAmtCredit').css("border-color", "");
        })
        $('.tblInvDtlBody').on('change', '.txtItemCode', function () {
            // Get Closest Row
            var vTableRow = $(this).closest('.tblInvDtlRow');
            vTableRow.find('.txtItemCode').css("border-color", "");

        })
        $('.tblInvDtlBody').on('change', '.txtItemQty', function () {
            // Get Closest Row
            var vTableRow = $(this).closest('.tblInvDtlRow');
            vTableRow.find('.txtItemQty').css("border-color", "");

        })
        $('.tblInvDtlBody').on('change', '.txtItemPrice', function () {
            // Get Closest Row
            var vTableRow = $(this).closest('.tblInvDtlRow');
            vTableRow.find('.txtItemPrice').css("border-color", "");

        })
        $('.tblInvDtlBody').on('change', '.txtVatAmt', function () {
            // Get Closest Row
            var vTableRow = $(this).closest('.tblInvDtlRow');
            vTableRow.find('.txtVatAmt').css("border-color", "");

        })

        /*     $('.btnPrint').on('click', function () {
                 var url = '/Invoice/InvoiceBuyReport?pInvId=' + $('.txtInvId').val()
                 var popupWindow = window.open(url);
             });*/
        $('.btnPrint').on('click', function () {
            var url = '/Invoice/InvoiceHtmlReport?pInvId=' + $('.txtInvId').val() + '&&InvType=' + 3
            var popupWindow = window.open(url);
        });

    </script>
