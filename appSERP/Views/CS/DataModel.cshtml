@model appSERP.Models.ACC.CustomerSupplierModel
@using appSERP.Views.Shared.appResource
@{
    ViewBag.Title = "DataModel";
    Layout = "~/Views/Shared/appLayout/_ModalLayout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <!-- Header -->
    <div class="container-fluid">
        @Html.Action("ViewSettingModalHeader", "ViewSetting", new { pModalHeaderTitle = appResource._Customer, pId = Model.CSId })
    </div>
   
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.CSId)
    <div class="row">
        <div class="col-md-6">

        <div class="form-group">
            @Html.LabelFor(model => model.CSCode, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.CSCode, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.CSCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CSNameL1, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.CSNameL1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CSNameL1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CSNameL2, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.CSNameL2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CSNameL2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CSAddress, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.CSAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CSAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CSPhone1, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.CSPhone1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CSPhone1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CSPhone2, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.CSPhone2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CSPhone2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CSEmail, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.CSEmail, new { htmlAttributes = new { @class = "form-control" , @type = "email" } })
                @Html.ValidationMessageFor(model => model.CSEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CSContactPerson, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.CSContactPerson, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CSContactPerson, "", new { @class = "text-danger" })
            </div>
        </div>
            </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.CSSalesPurchasePerson, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.CSSalesPurchasePerson, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CSSalesPurchasePerson, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CSTaxNumber, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.CSTaxNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CSTaxNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AreaId, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    <select id="selectArea" class="selectpicker form-control" name="AreaId" data-live-search="true" data-live-search-placeholder="Search" data-actions-box="true"></select>
                    @Html.ValidationMessageFor(model => model.AreaId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CSCreditLimit, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.CSCreditLimit, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
                    @Html.ValidationMessageFor(model => model.CSCreditLimit, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CSGroupId, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    <select id="selectCSGroup" class="selectpicker form-control" name="CSGroupId" data-live-search="true" data-live-search-placeholder="Search" data-actions-box="true"></select>
                    @Html.ValidationMessageFor(model => model.CSGroupId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GracePeriod, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.GracePeriod, new { htmlAttributes = new { @class = "form-control", @min = "0" ,@id="GracePeriod"} })
                    @Html.ValidationMessageFor(model => model.GracePeriod, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AccountId, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    <select id="selectAccount" class="selectpicker form-control" name="AccountId" data-live-search="true" data-live-search-placeholder="Search" data-actions-box="true"></select>
                    @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group m-3">
                <div class="custom-control custom-checkbox col-md-12">
                    @Html.EditorFor(model => model.CSIsCustomer, new { htmlAttributes = new { @class = "custom-control-input", @id = "CSIsCustomer" } })
                    @Html.LabelFor(model => model.CSIsCustomer, htmlAttributes: new { @class = "custom-control-label", @for = "CSIsCustomer" })
                </div>
            </div>

            <div class="form-group m-3">
                <div class="custom-control custom-checkbox col-md-12">
                    @Html.EditorFor(model => model.CSIsActive, new { htmlAttributes = new { @class = "custom-control-input", @id = "customCheck1" } })
                    @Html.LabelFor(model => model.CSIsActive, htmlAttributes: new { @class = "custom-control-label", @for = "customCheck1" })
                </div>
            </div>
            <
        </div>>
    </div>
</div>

    <div class="form-group divModalFooter">
        <div class="col-md-offset-2 col-md-12">
            <input type="submit" value="@appResource.btnSave" class="btn btn-success" />
            <button type="button" class="btn btn-light" data-dismiss="modal">@appResource.btnClose</button>
        </div>
    </div>
}

<script>
        var vCSGroupId = 0;
        var vAccountId = 0;
        var vAreaId = 0;
    // List GetCSGroup
    $.post('/Home/GetCSGroup',
        null,
        function (data, status) {
            var vDataJSON = JSON.parse(data);

            $.each(vDataJSON, function (i, CSGroup) {

                // For Get Inhert Data From Customer Supplier Group 


                // For Select List
                $('#selectCSGroup').append('<option data-id="' + CSGroup.CSGroupId + '" value="' + CSGroup.CSGroupId + '" sort-id="' + i + '">' + CSGroup.CSGroupNameL1 + '</option>')
                if (i == 0) {
                    vCSGroupId = CSGroup.CSGroupId;
                }
            })
            if (parseInt('@ViewBag.vbcCSGroupId') > 0) {
                vCSGroupId  = parseInt('@ViewBag.vbcCSGroupId')

            }
            $('#selectCSGroup').val(vCSGroupId);
            // Refresh Select Picker
            $('.selectpicker').selectpicker('refresh');
        }
        )

        // List GetAccount
        $.post('/Home/GetAccount',
            null,
            function (data, status) {
                var vDataJSON = JSON.parse(data);
                $.each(vDataJSON, function (i, Account) {
                    $('#selectAccount').append('<option data-id="' + Account.AccountId + '" value="' + Account.AccountId + '" sort-id="' + i + '">' + Account.AccountNameL1 + '</option>')
                    if (i == 0) {
                        vAccountId = Account.AccountId ;
                    }
                })
                  if (parseInt('@ViewBag.vbcAccountId') >0 ) {
                      vAccountId  = parseInt('@ViewBag.vbcAccountId')
                }
                $('#selectAccount').val(vAccountId);
                // Refresh Select Picker
                $('.selectpicker').selectpicker('refresh');
            }
        )
        // List GetArea
        $.post('/Home/GetArea',
            null,
            function (data, status) {
                var vDataJSON = JSON.parse(data);
                $.each(vDataJSON, function (i, Area) {
                    $('#selectArea').append('<option data-id="' + Area.AreaId + '" value="' + Area.AreaId + '" sort-id="' + i + '">' + Area.AreaNameL1 + '</option>')
                    if (i == 0) {
                        vAreaId = Area.AreaId;
                    }
                })
                  if (parseInt('@ViewBag.vbcAreaId') >0 ) {
                      vAreaId  = parseInt('@ViewBag.vbcAreaId')
                }
                $('#selectArea').val(vAreaId);
                // Refresh Select Picker
                $('.selectpicker').selectpicker('refresh');
            }
    )

    // For Get Inhert Data From Customer Supplier Group 
    $('#selectCSGroup').on('change', function () {
        var vId = $(this).val();
        $.post('/Home/GetCSGroup', {Id:vId},
        function (data, status) {
            var vDataJSON = JSON.parse(data);
            $.each(vDataJSON, function (i, CSGroup) {
                $('#GracePeriod').val(CSGroup.CSGroupGracePeriodDays)
                $('#CSIsCustomer').prop('checked',CSGroup.CSIsCustomer);

            })

        })

    })

</script>