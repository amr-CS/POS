@using appSERP.appCode.Setting.User
@using appSERP.Views.Shared.appResource
<style>
    body {
        font-family: Cairo;
    }

    .fullHeightInput {
        height: 50px;
    }

    .table th, .table td {
        font-size: 12px;
        text-align: center;
    }

    .table th {
        margin: auto;
        border: none !important;
        padding-top: 0.5rem;
        padding-bottom: 0.5rem;
    }

    /*.table td {
        margin-top: 0.5rem;
        padding: 0rem !important;
    }*/

    .tblHead {
        border-bottom: 1px solid #d4d4d4;
        margin-bottom: 0.5rem;
    }

    input, select, textarea {
        max-width: 100% !important;
    }

    textarea {
        max-width: 100% !important;
    }

    .form-inline {
        margin-top: 0.5rem;
    }

    .table td, .table th {
        border-top: 0 !important;
    }


    /* Special Classes */
    .controlRow {
        margin-top: 0.5rem;
    }

    .checkInput {
        margin: auto;
    }

    .tblFooter {
        border: 0 !important;
    }

    .tooltip > .tooltip-inner {
        background-color: #2980b9;
    }

    .tooltip > .tooltip-arrow {
        border-bottom-color: #2980b9;
    }

    .form-control:disabled, .form-control[readonly] {
        background-color: #eef1f5;
        opacity: 1;
    }

    .divGlVoucher {
        max-height: 50vh !important;
        overflow-y: scroll !important;
        background-color: #FFF;
    }
</style>
<!-- Utility Bar -->
@*@Html.Action("Index", "DocUtilityBar")*@

<div class="container-fluid">

    <!-- Title -->
    <div class="bg-light border rounded p-3 mb-3">@appResource.CreditNotice</div>
    <!-- Utlity -->
    <div class="divUtilityBar d-flex ">
        @Html.Partial("~/Views/ViewSetting/ViewSettingUtilityBar.cshtml")
    </div>

    <!-- Head -->
    <div class="bg-white border rounded p-3">

        <div class="row">

            <!-- Main Inputs -->
            <div class="col-sm-8">

                <!-- 1st Row Input -->
                <div class="row">

                    <div class="form-group">
                        <input type="text" class="form-control form-control-sm w-25 txtDocId d-none" value="0" />
                        <input type="text" class="form-control form-control-sm w-25 txtCheckDate d-none" value="0" />
                    </div>
                    <!-- Transaction Type -->
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label class="label-control small">@appResource._VoucherType</label>
                            <div class="d-flex">
                                <input type="number" class="form-control form-control-sm w-25 txtVoucherType" value="5" disabled />
                                @if (clsUser.vUserLanguageId == 1)
                                {
                                    <input type="text" id="start" class="form-control form-control-sm" value="@appResource.CreditNotice" disabled />
                                }
                                else
                                {
                                    <input type="text" id="start" class="form-control form-control-sm" value="@appResource.CreditNotice" disabled />
                                }
                            </div>
                        </div>
                    </div>


                    <!-- Is Posted -->
                    <div class="col-sm-2">
                        <div class="form-group">
                            <label class="label-control small">@appResource.PostingEntry</label>
                            <div class="row">
                                <div class="custom-control custom-checkbox">
                                    <input type="checkbox" class="custom-control-input chkDocIsPosted" disabled id="chkDocIsPosted">
                                    <label class="custom-control-label small" for="chkDocIsPosted">@appResource.Posted</label>
                                </div>
                                <div class="custom-control custom-checkbox">
                                    <input type="checkbox" class="custom-control-input chkIsDocCancelled" id="customCheck5">
                                    <label class="custom-control-label small" for="customCheck5">@appResource.CanceledNotice</label>
                                </div>
                            </div>
                        </div>
                    </div>

                </div> <!-- End of 1st Row of Main Inputs -->
                <!-- 2nd Row Input -->
                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group">
                            <label class="label-control small">@appResource._Note</label>
                            <textarea class="form-control form-control-sm txtDocNote" onblur="funFoucus('dtpDocDate')"></textarea>
                        </div>
                    </div>
                </div>


            </div> <!-- End of Main Inputs -->
            <!-- Left Controls [Doc No, Ref, ..] -->
            <div class="col-sm-4 mt-3">

                <!-- Doc No -->
                <div class="row controlRow">
                    <div class="col-sm-4">
                        <label class="small float-right pt-2">@appResource._No</label>
                    </div>
                    <div class="col-sm-8">
                        <input type="text" class="form-control form-control-sm txtDocNo" disabled />
                    </div>
                </div>

                <!-- Doc Date -->
                <div class="row controlRow">
                    <div class="col-sm-4">
                        <label class="small float-right pt-2">@appResource._Date</label>
                    </div>
                    <div class="col-sm-8">
                        <input type="date" class="form-control form-control-sm dtpDocDate" />
                    </div>
                </div>

                <!-- Ref Doc No -->
                <div class="row controlRow">
                    <div class="col-sm-4">
                        <label class="small float-right pt-2">@appResource.RefrenceNo</label>
                    </div>
                    <div class="col-sm-8">
                        <input type="text" class="form-control form-control-sm txtDocRefNo" />
                    </div>
                </div>

                <!-- Ref Doc Date -->
                <div class="row controlRow">
                    <div class="col-sm-4">
                        <label class="small float-right pt-2">@appResource.RefrenceDate</label>
                    </div>
                    <div class="col-sm-8">
                        <input type="date" class="form-control form-control-sm dtpDocRefDate" onblur="funFoucus('txtCSId')" />
                    </div>
                </div>

                <!-- Source -->
                <div class="row controlRow">
                    <div class="col-sm-4">
                        <label class="small float-right pt-2">@appResource._Customer/@appResource._Supplier</label>
                    </div>
                    <div class="col-sm-8 d-flex">
                        <input type="number" class="form-control form-control-sm w-25 txtCSId" onblur="funFoucus('txtAccountCode')" />
                        <input type="text" class="form-control form-control-sm w-75 txtCSName" value="" disabled />
                    </div>
                </div>

            </div>
        </div>
    </div>
    <!-- Details Main -->
    <div class="bg-white border rounded p-3 mt-3 divGlVoucher">
        <!-- Details -->
        <table class="table table-sm table-responsive-sm">
            <thead>
                <tr class="tblHead">
                    <th class=""></th>
                    <th class="" width="7%">
                        <div>@appResource.AccountNo</div>
                    </th>
                    <th class="" width="15%">
                        <div>@appResource.AccountDesc</div>
                    </th>
                    <th class="" width="5%">
                        <div>@appResource._Currency</div>
                        <div>@appResource.ExchangeRate</div>
                    </th>
                    <th class="">
                        <div>@appResource.RptDebitBase</div>
                        <div>@appResource._DebitBase</div>
                    </th>
                    <th class="">
                        <div>@appResource.RptCreditBase</div>
                        <div>@appResource._CreditBase</div>
                    </th>
                    <th class="" width="20%">
                        <div class="d-flex">

                            <div class="col-sm-3">
                                <div>@appResource._CostCenter</div>
                            </div>
                            <div class="col-sm-9">
                                <div>@appResource.CostCenterName</div>
                            </div>

                        </div>

                    </th>
                    <th class="">
                        <div>@appResource._Note</div>
                    </th>
                </tr>
            </thead>

            <tbody class="tblBody">
                <tr class="trBaseRow tblRow" data-id="0">
                    <td class="">
                        <button class="btn btn-light btn-sm border btnAddRow" type="submit">
                            <i class="fa fa-plus-circle"></i>
                        </button>
                    </td>

                    <td class="">
                        <input class="form-control form-control-sm text-center fullHeightInput d-none txtAccountId" type="text" required />
                        <input class="form-control form-control-sm text-center fullHeightInput d-none  txtAccountIsCostCenter" type="text" required />
                        <input class="form-control form-control-sm text-center fullHeightInput txtAccountCode" onblur="funFoucus('txtDebitCurrency')" type="text" title="@appResource.ChoseAccountTitle" required />
                    </td>
                    <td class="">
                        <textarea class="form-control form-control-sm text-center fullHeightInput txtAccountName" type="text" required readonly></textarea>
                    </td>
                    <td class="">
                        <input class="form-control form-control-sm text-center   txtAccountCurrency d-none" type="text" required disabled />
                        <input class="form-control form-control-sm text-center   txtAccountCurrencyName" type="text" required disabled />
                        <input class="form-control form-control-sm text-center  txtAccountCurrencyFactor" type="text" required disabled />
                    </td>
                    <td class="">
                        <input class="form-control form-control-sm text-center font-weight-bold txtDebitCurrency" value="0" type="text" min=0 required />
                        <input class="form-control form-control-sm text-center font-weight-bold txtDebitBase" type="text" value="0" min=0 required disabled />
                    </td>
                    <td class="">
                        <input class="form-control form-control-sm text-center font-weight-bold txtCreditCurrency" value="0" type="text" min=0 required />
                        <input class="form-control form-control-sm text-center font-weight-bold txtCreditBase" value="0" type="text" min=0 required disabled />
                    </td>
                    <td class="">

                        <div class="d-flex">
                            <div class="col-sm-4 p-0">
                                <input class="form-control form-control-sm text-center fullHeightInput d-none txtCostCenterId" type="text" required />
                                <input class="form-control form-control-sm text-center fullHeightInput txtCostCenterCode" onblur="funFoucus('txtNote')" title="@appResource.ChoseCostCenterTitle" type="text" required />
                            </div>
                            <div class="col-sm-8 p-0">
                                <input class="form-control form-control-sm text-center fullHeightInput txtCostCenterName" type="text" required readonly />
                            </div>
                        </div>

                    </td>


                    <td class="">
                        <textarea class="form-control form-control-sm text-center txtNote" onblur="funFoucus('btnSave')" style="height:50px" required></textarea>
                    </td>

                </tr>
            </tbody>

        </table>

        <!-- Details Footer -->
        <table class="table table-sm tblFooter border-0">
            <tbody class="">
                <tr class="d-flex">
                    <td class="col-sm-5">
                        <label class="small float-right mx-1 pt-2">@appResource._Total</label>
                    </td>
                    <td class="col-sm-2">
                        <input class="form-control form-control-sm text-center disabled font-weight-bold txtTotalDebit " disabled type="number" min=0 required />
                    </td>
                    <td class="col-sm-2">
                        <input class="form-control form-control-sm text-center disabled font-weight-bold   txtTotalCredit" disabled type="number" min=0 required />
                    </td>
                    <td class="col-sm-3">
                        <div class="d-flex">
                            <label class="small mx-1 pt-2">@appResource._Diff</label>
                            <input class="form-control form-control-sm text-center disabled txtDiff font-weight-bold" disabled type="text" required />
                        </div>

                    </td>
                </tr>
            </tbody>

        </table>
    </div>
</div>

<div class="container-fluid">
    <div class="d-flex bg-white p-3 border">
        <div class="w-100 ">
            <div class="btn-group m-2" role="group" aria-label="First group">
                <!-- Next -->
                <button class="btn btnUtility" id="btnFirst" title=" @appResource.ttFirst"><i class="fa  fa-fast-forward"></i></button>
                <!-- Prev -->
                <button class="btn btnUtility" id="btnNext" title="@appResource.ttNext"><i class="fa  fa-forward "></i></button>
                <!-- First -->
                <button class="btn btnUtility" id="btnPrev" title="@appResource.ttPrev"><i class="fa fa-backward"></i></button>
                <!-- Last -->
                <button class="btn btnUtility" id="btnLast" title="@appResource.ttLast"><i class="fa fa-fast-backward"></i></button>
            </div>
            <div>
               @appResource.SearchFrom
                <label class="txtCount"> 0</label>
                @appResource._To
                <label class="txtTotalCount"> 0</label>
                @appResource._Record
            </div>
        </div>
        <div class="flex-shrink-1">
            <div class="d-flex">
                @*<button class="btn btn-primary btnSearch">بحث</button>
                <button class="btn btn-success btnSave">حفظ</button>
                <button class="btn btn-warning btnVEdit">تعديل</button>
                <button class="btn btn-warning btnVPrint">طباعة</button>*@
            </div>
        </div>
    </div>
</div>



<!-- AccountData Modal -->
<div id="AccountDataModal" class="fade modal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="AccountDataModalContent"></div>
    </div>
</div>

<!-- CostCenterData Modal -->
<div id="CostCenterDataModal" class="fade modal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="CostCenterDataModalContent"></div>
    </div>
</div>

<!-- Include Scripts -->
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
@Scripts.Render("~/bundles/popper")
@Scripts.Render("~/bundles/bootstrap")

<!-- ToolTip -->
<script>
    $('.txtAccountCode, .txtCostCenterCode').tooltip({
        trigger: 'manual'
    });

    // Show Hide Tooltip
    function funShowHideToolTip() {
        $('.txtAccountCode, .txtCostCenterCode').tooltip('show');
        setTimeout(function () { $('.txtAccountCode, .txtCostCenterCode').tooltip('hide'); }, 3000);
    }

    $(document).ready(function () {
        funShowHideToolTip();

    });
</script>

<!-- Save -->
<script>

    $('.frmRow').on('submit', function (e) {
        e.preventDefault();
    })
    // Voucher Save
    function funSaveAll() {
        // Get Doc Id
        var vDocId = $('.txtDocId').val();
        // Get Doc Date
        var vDocDate = $('.dtpDocDate').val();
        // Get Vocher Type
        var vDocVoucherType = $('.txtVoucherType').val();
        // Is Posted
        var vDocIsPosted = $('.chkDocIsPosted').prop('checked');
        // Doc Note
        var vDocNote = $('.txtDocNote').val();
        // Doc Is Repeated
        var vDocIsRepeated = $('.chkIsDocRepeated').prop('checked');
        // Doc Is Opps
        var vDocIsOpps = $('.chkIsDocOpps').prop('checked');
        // Doc Is Wait
        var vDocIsWait = $('.chkIsDocWait').prop('checked');
        // Doc Is Cancelled
        var vDocIsCancelled = $('.chkIsDocCancelled').prop('checked');
        // Doc Ref No
        var vDocRefNo = $('.txtDocRefNo').val();
        // Doc Ref Date
        var vDocRefDate = $('.dtpDocRefDate').val();
        // Transaction Source - Voucher Category
        var vDocVoucherCategory = $('.txtTransactionSource').val();
        // Diff
        var vDiff = $('.txtDiff').val()
        // Valid Date
        var vDateCheck = $('.txtCheckDate').val();
        // Customer Supplier
        var vCS = $('.txtCSId').val();
        // Valid
        var vIsValid = false;
        var vIsValidData = false;
        var vIsValidDate = false;
        // Save Head
        $.get('/api/APIGLVoucher/GLVoucherGET',
            {
                // Head Parameters
                phGLVoucherId: vDocId,
                phVoucherTypeId: vDocVoucherType,
                phFinancialYearId: null,
                phSystemId: 1,
                phCashDeskId: null,
                phGLVoucherDate: vDocDate,
                phGLVoucherRef: vDocRefNo,
                phGLVoucherRefDate: vDocRefDate,
                phPaymentTypeId: null,
                phIsPosted: vDocIsPosted,
                phIsIssued: false,
                phIsOpps: vDocIsOpps,
                phGLVoucherNote: vDocNote,
                phDocIsCancelled: vDocIsCancelled,
                phDocIsWait: vDocIsWait,
                phGLVoucherIsRepeated: vDocIsRepeated,
                phGLIdPayType: null,
                phGLVoucherCategoryId: vDocVoucherCategory,
                phGLOppsVoucherValue: 0,
                phGLOppsVoucherId: 0,
                phGLOppsVoucherYearId: 0,
                phStoreId: null,
                phInvTransactionTypeId: null,
                phCSId: vCS,
                phVoucherSeq: null,
                phGLVoucherIsActive: this.translate,
                phIsDeleted: false,

                // Query Type Id
                pIsGLVoucherDetail: false,
                pQueryTypeId: '100'
            },
            function (data, status) {

                // JSON Parse
                var vDataResult = JSON.parse(data);
                // Row Id
                var vGLVoucherDtlId = vDataResult[0].GlVoucherDtlId
                localStorage.setItem('GlVoucherId', vDataResult[0].GlVoucherId)
                // vRow.attr('data-id', vGLVoucherDtlId);
                GlVoucherId = vDataResult[0].GlVoucherId
                // SET Doc Id
                $('.txtDocId').val(vDataResult[0].GlVoucherId);


                // Check Rows
                $('.tblRow').each(function () {
                    //// Detail Variables
                    // Get Row Id
                    var vRow = $(this);
                    var vRowId = $(this).attr('data-id');
                    // Account
                    var vAccountId = $(this).find('.txtAccountId').val();
                    // Debit
                    var vDebitValue = $(this).find('.txtDebitCurrency').val();
                    var vDebitValueBase = $(this).find('.txtDebitBase').val();
                    // Credit
                    var vCreditValue = $(this).find('.txtCreditCurrency').val();
                    var vCreditValueBase = $(this).find('.txtCreditBase').val();
                    // Currency, Factor
                    var vAccountCurrency = $(this).find('.txtAccountCurrency').val();
                    var vDebitCreditFactor = $(this).find('.txtAccountCurrencyFactor').val();
                    // Cost Center
                    var vCostCenterId = $(this).find('.txtCostCenterId').val();
                    // Note
                    var vNote = $(this).find('.txtNote').val();
                    // Check Date
                    if (vDateCheck == 'true') {
                        vIsValidDate = true;
                        if (vDiff == '0' || vDiff == '') {
                            vIsValid = true;
                            if (vAccountId != '') {

                                vIsValidData = true;
                                //Save Row Deatil Voucher
                                $.get('/api/APIGLVoucher/GLVoucherGET',
                                    {
                                        // Detail Parameters
                                        pdGLVoucherDtlId: vRowId,
                                        pdGLVoucherId: vDataResult[0].GlVoucherId,
                                        pdGLVoucherTypeId: vDocVoucherType,
                                        pdFinancialYearId: null,
                                        pdAccountId: vAccountId,
                                        pdCashDeskId: null,
                                        pdCurrencyId: vAccountCurrency,
                                        pdGLVoucherDtlDebit: vDebitValue,
                                        pdGLVoucherDtlCredit: vCreditValue,
                                        pdGLVoucherDtlDebitBase: vDebitValueBase,
                                        pdGLVoucherDtlCreditBase: vCreditValueBase,
                                        pdBaseCurrencyValue: vDebitCreditFactor,
                                        pdGLVoucherDtlPayDebit: null,
                                        pdGLVoucherDtlPayCredit: null,
                                        pdPayCurrencyValue: null,
                                        pdGLVoucherDtlNote: vNote,
                                        pdCostCenterId: vCostCenterId,
                                        pdIsPosted: vDocIsPosted,
                                        pdGLVoucherDtlTransSeq: 0,
                                        pdIsDeleted: false,
                                        // Query Type Id
                                        pIsGLVoucherDetail: true,
                                        pQueryTypeId: '100'
                                    },
                                    function (data, status) {

                                        // JSON Parse
                                        var vDataResult = JSON.parse(data);
                                        // Row Id
                                        var vGLVoucherDtlId = vDataResult[0].GlVoucherDtlId
                                        vRow.attr('data-id', vGLVoucherDtlId);

                                        // SET Doc Id
                                        $('.txtDocId').val(vDataResult[0].GlVoucherId);

                                    }) // End Of Save Detail
                            }
                        } // End Check Account
                    }// End Date Check
                })// ENd Check Rows

                // Notification - Field Required
                if (vIsValid) {
                    funNotification(vDataResult[0].SystemMessageText, vDataResult[0].SystemMessageTypeId);
                }
                else {

                    if (vDateCheck == 'false') {
                        funNotification('@appResource.msgCheckFinancialYear', '2');
                    }
                    else if (vIsValid == false) {
                        funNotification('@appResource.msgNotBalanced', '2');
                    }
                }
            })  // End Save Head

    }

    // Save
    $('.btnSave').on('click', function () {
        funSaveAll();

    }) // End BtnSave

    // Save Using F10
    $('body').on('keyup', function (e) {
        // Check F10
        if (e.keyCode == 121) {
            // Save  ALL
            funSaveAll()
        }
    })

</script>

<!-- Add New Row -->
<script>
    // Add Row - F6
    $('body').on('keydown', function (e) {
        if (e.keyCode == '117') {
            // Add Row
            funAddRow();
        }
    })
    // Add Row - Button Click
    $('body').on('click', '.btnAddRow', function () {
        // Add Row
        funAddRow();
        // Fill Note
        var vValue = $('.txtDocNote').val();
        $('.txtNote').val(vValue)
    })
    // Add Row
    function funAddRow() {
        // Closest Row
        var vRow = $('.tblRow')[0];
        // Cloned Row
        var vRowCloned = $(vRow).clone();
        // Clear
        vRowCloned.find(':input').val('');
        vRowCloned.closest('tr').attr('data-id', '0')
        // Append
        $('.tblBody').append(vRowCloned);
        // Get Index
        var vIndex = vRowCloned.index();
    }
</script>

<!-- Change Date - Check -->
<script>
    // Change Date - Check
    funCheckDate();
    $('.dtpDocDate').on('blur', function (e) {

    // Call Function Check Date
        var vCheck = funCheckDate()

    })
    // Fun Check Finanical Year
    function funCheckDate() {

        // Get Current Date
        var vDate = $('.dtpDocDate').val();
        var vDatePicker = $('.dtpDocDate');
        var vDateValid;
        // Check Date
        var fun = $.get('/GLVoucher/funFinancialDateCheckGET', { pDate: vDate }, function (data, status) {

            // JSON parse
            var vDataResult = JSON.parse(data);

            // Is Date Valid
            var vIsDateValid = vDataResult[0].vIsFullValid;
            localStorage.setItem('vIsDateValid', vIsDateValid)
            // Check Date
            if (!vIsDateValid) {

                // Doc Date InValid
                funDocDateValid(vDatePicker, false);
                // Notification
                //funNotification('لا يمكن إختيار التاريخ الحالى', 2);
                $('.txtCheckDate').val('false')
            }
            else {
                // Doc Date InValid
                funDocDateValid(vDatePicker, true);
                $('.txtCheckDate').val('true')
           }
           return data
        })

        //return vDateValid


    }

    // Doc Date Valid
    function funDocDateValid(pDatePickerElement, pIsValid) {

        // White Text - For Valid and InValid
        pDatePickerElement.addClass('text-white');

        // Check If Invalid
        if (pIsValid) {

            pDatePickerElement.removeClass('bg-danger');
            pDatePickerElement.addClass('bg-success');
        }
        else {

            pDatePickerElement.addClass('bg-danger');
            pDatePickerElement.removeClass('bg-success');

            // Set Date Today
            //funDateTodaySET(pDatePickerElement);
        }
    }

    // Date Today SET
    function funDateTodaySET(pDateElement) {
        pDateElement.val('@DateTime.Now.Date.ToString("yyyy-MM-dd")')
    }

    // SET Date Today
    funDateTodaySET($('.dtpDocDate'));
    funDateTodaySET($('.dtpDocRefDate'));

</script>

<!-- Debit, Credit and Factor -->
<script>

    // Debit Change
    $('body').on('change', '.txtDebitCurrency', function () {

        // Table Row
        var vTableRow = $(this).closest('.tblRow');
        // GET Value
        var vValue = $(this).val();
        // Factor
        var vCurrencyFactor = vTableRow.find('.txtAccountCurrencyFactor').val();
        // Base Value
        var vBaseValue = (vValue * vCurrencyFactor).toFixed(3);
        // SET Value to Base
        $(this).siblings('.txtDebitBase').val(vBaseValue);


        // Clear Credit
        var vCreditCurrencyValue = vTableRow.find('.txtCreditCurrency').val();

        // Total Debit, Credit and Diff
        funTotalDebitCreditDiff();
    })
    // Credit Change
    $('body').on('change', '.txtCreditCurrency', function () {
        // Table Row
        var vTableRow = $(this).closest('.tblRow');
        // GET Value
        var vValue = $(this).val();
        // Factor
        var vCurrencyFactor = vTableRow.find('.txtAccountCurrencyFactor').val();
        // Base Value
        var vBaseValue = (vValue * vCurrencyFactor).toFixed(3);
        // SET Value to Base
        $(this).siblings('.txtCreditBase').val(vBaseValue);

        // Clear Debit
        var vDebitCurrencyValue = vTableRow.find('.txtDebitCurrency').val();


        // Total Debit, Credit and Diff
        funTotalDebitCreditDiff();
    })

    // Debit Factor Calculate
    function funDebitFactorCalculate(pTableRow) {

        // GET Value
        var vDebitValue = pTableRow.find('.txtDebitCurrency').val();
        // Factor
        var vCurrencyFactor = pTableRow.find('.txtAccountCurrencyFactor').val();
        // Base Value
        var vBaseValue = (vDebitValue * vCurrencyFactor).toFixed(3);
        // SET Value to Base
        pTableRow.find('.txtDebitCurrency').siblings('.txtDebitBase').val(vBaseValue);
    }
    // Credit Factor Calculate
    function funCreditFactorCalculate(pTableRow) {

        // GET Value
        var vCreditValue = pTableRow.find('.txtCreditCurrency').val();
        // Factor
        var vCurrencyFactor = pTableRow.find('.txtAccountCurrencyFactor').val();
        // Base Value
        var vBaseValue = (vCreditValue * vCurrencyFactor).toFixed(3);
        // SET Value to Base
        pTableRow.find('.txtCreditCurrency').siblings('.txtCreditBase').val(vBaseValue);
    }

</script>

<!-- Totals -->
<script>

    // Total Debit, Credit and Diff
    function funTotalDebitCreditDiff() {

        // Total Debit
        var vTotalDebit = 0;
        $('.txtDebitBase').each(function () {
            // Get Value
            var vDebitValue = $(this).val();
            // Check Value
            if (vDebitValue == '' || vDebitValue == null || vDebitValue == undefined) {
                vDebitValue = 0;
            }
            // Add Value
            vTotalDebit += parseFloat(vDebitValue);
        })

        // Total Credit
        var vTotalCredit = 0;
        $('.txtCreditBase').each(function () {
            // Get Value
            var vCreditValue = $(this).val();
            // Check Value
            if (vCreditValue == '' || vCreditValue == null || vCreditValue == undefined) {
                vCreditValue = 0;
            }
            // Add Value
            vTotalCredit += parseFloat(vCreditValue);
        })

        // Diff
        var vDiff = vTotalDebit - vTotalCredit;

        // SET Values
        $('.txtTotalDebit').val(vTotalDebit);
        $('.txtTotalCredit').val(vTotalCredit);
        $('.txtDiff').val(vDiff);

        // Check Diff
        $('.txtDiff').addClass('text-white');
        if (vDiff != 0) {
            $('.txtDiff').addClass('bg-danger');
            $('.txtDiff').removeClass('bg-success');
        }
        else {
            $('.txtDiff').addClass('bg-success');
            $('.txtDiff').removeClass('bg-danger');
        }
    }

</script>

<!-- Get Account -->
<script>
    $(document).ready(function () {

        // Get Closest Row
        var vTableRow = '';

        // Account Code, Name - F9 - Double Click
        $('table').on('keyup dblclick', '.txtAccountCode', function (e) {

            // F9 - Double Click
            if (e.keyCode == 120 || e.type == 'dblclick') {

                // Table Row - Closest Row
                vTableRow = $(this).closest('tr');

                // Search Account
                var vURL = '/GLVoucher/AccountSearch';
                // Load Content of Account Search
                $('#AccountDataModalContent').load(vURL);
                // Modal Show
                $('#AccountDataModal').modal('show');
                // Focus
                $('#AccountDataModal').on('shown.bs.modal', function () {
                    $('.txtSearch').focus();

                    // Select Account
                    $('body').on('click', '.divAccountSelect', function () {

                        // Get Values
                        var vAccountId = $(this).attr('data-id');
                        var vAccountCodeValue = $(this).find('.divAccountNo').text();
                        var vAccountNameValue = $(this).find('.divAccountName').text();
                        var vAccountCurrencyFactor = $(this).find('.divAccountCurrencyFactor').text();
                        var vAccountIsCostCenter = $(this).find('.divAccountIsCostCenter').text();
                        var vAccountCurrency = $(this).find('.divAccountCurrency').text();
                        var vAccountCurrencyName = $(this).find('.divAccountCurrencyName').text();
                        var vCostCenterName = $(this).find('.divCostCenterName').text();
                        var vCostCenterId = $(this).find('.divCostCenterId').text();
                        var vCostCenterCode = $(this).find('.divCostCenterCode').text();
                        // Get Account Data
                        var vAccountIdElement = vTableRow.find('.txtAccountId');
                        var vAccountCodeElement = vTableRow.find('.txtAccountCode');
                        var vAccountNameElement = vTableRow.find('.txtAccountName');
                        var vAccountCurrencyFactorElement = vTableRow.find('.txtAccountCurrencyFactor');
                        var vAccountIsCostCenterElement = vTableRow.find('.txtAccountIsCostCenter');
                        var vAccountCurrencyElement = vTableRow.find('.txtAccountCurrency');
                        var vAccountCurrencyNameElement = vTableRow.find('.txtAccountCurrencyName');
                        var vCostCenterNameElement = vTableRow.find('.txtCostCenterName');
                        var vCostCenterIdElement = vTableRow.find('.txtCostCenterId');
                        var vCostCenterCodeElement = vTableRow.find('.txtCostCenterCode');



                        // Set Value
                        vAccountIdElement.val(vAccountId);
                        vAccountCodeElement.val(vAccountCodeValue);
                        vAccountNameElement.val(vAccountNameValue);
                        vAccountCurrencyFactorElement.val(vAccountCurrencyFactor);
                        vAccountIsCostCenterElement.val(vAccountIsCostCenter);
                        vAccountCurrencyElement.val(vAccountCurrency);
                        vAccountCurrencyNameElement.val(vAccountCurrencyName);
                        //vCostCenterNameElement.val(vCostCenterName)
                        //vCostCenterIdElement.val(vCostCenterId);
                        //vCostCenterCodeElement.val(vCostCenterCode);
                        // Debit Factor
                        funDebitFactorCalculate(vTableRow);
                        // Credit Factor
                        funCreditFactorCalculate(vTableRow);

                        // Modal Show
                        $('#AccountDataModal').modal('hide');
                        vTableRow.removeClass('table-info');

                        vTableRow = '';

                        // Add New Row
                        funAddRow();
                    })
                })
            }
        })
    })

</script>

<!-- Get CostCenter -->
<script>
    $(document).ready(function () {

        // Get Closest Row
        var vTableRow = '';
        // CostCenter Code, Name - F9
        $('body').on('keydown dblclick', '.txtCostCenterCode', function (e) {
            // Check F9
            if (e.keyCode == 120 || e.type == 'dblclick') {

                // Get Closest Row
                vTableRow = $(this).closest('.tblRow');

                // GET AccountId
                var vAccountId = vTableRow.find('.txtAccountId').val();
                var vAccountIsCostCenter = vTableRow.find('.txtAccountIsCostCenter').val();

                if (vAccountId) {

                    // Check If Account Is Cost Center
                    if (vAccountIsCostCenter == '1') {

                        // Search CostCenter
                        var vURL = '/GLVoucher/AccountCostCenter/?pAccountId=' + vAccountId;
                        // Load Content of CostCenter Search
                        $('#CostCenterDataModalContent').load(vURL);
                        // Modal Show
                        $('#CostCenterDataModal').modal('show');

                        // Focus
                        $('#CostCenterDataModal').on('shown.bs.modal', function () {

                            // Focuse
                            $('.txtSearch').focus();


                            // Select CostCenter
                            $('body').on('click', '.divAccountCostCenterSelect', function () {

                                // CostCenter Id
                                var vCostCenterId = $(this).attr('data-id');

                                // Get Values
                                var vCostCenterCodeValue = $(this).find('.divAccountCostCenterCode').text();
                                var vCostCenterNameValue = $(this).find('.divAccountCostCenterName').text();

                                // Get CostCenter Data
                                var vCostCenterIdElement = vTableRow.find('.txtCostCenterId');
                                var vCostCenterCodeElement = vTableRow.find('.txtCostCenterCode');
                                var vCostCenterNameElement = vTableRow.find('.txtCostCenterName');

                                // Set Value
                                vCostCenterIdElement.val(vCostCenterId);
                                vCostCenterCodeElement.val(vCostCenterCodeValue);
                                vCostCenterNameElement.val(vCostCenterNameValue);

                                // Modal Show
                                $('#CostCenterDataModal').modal('hide');

                                // Table Row Clear
                                vTableRow = '';

                            })

                        })// End of Modal Shown event
                    }
                    else {

                        funNotification('@appResource.msgNoCostCenters', 2);
                    }
                }
                else {
                    funNotification('@appResource.msgChooseAccountFirst', 2);
                }
            }
        })
    })
</script>
<script>
    var vDataSearch;
    var vCount = 0;
    $('.btnSearch').on('click', function () {
        // Search CostCenter
        var vURL = '/GLVoucher/GLVoucherSearch';
        // Load Content of CostCenter Search
        $('#CostCenterDataModalContent').load(vURL);
        // Modal Full
        $('#CostCenterDataModalContent').parent().addClass('modal-dialog-full');
        // Modal Show
        $('#CostCenterDataModal').modal('show');
    })
    // PRINT
    $('body').on('click', '.btnSelect', function () {

        var count = $("input[name='chkIsValid']:checked").length;
        if (count == 0) {
            // alert("No rows selected to Print");
            return false;
        }
        else {

            // Selected Permissions
            var vSelected = '';
            // Check If All True Or False
            $('table > tbody > tr ').each(function () {
                // Element
                var vElement = $(this).find('.clsChk')
                var vSelectedChk = vElement.prop('checked')
                // Check
                if (vSelectedChk) {
                    // Get Id
                    var vGlVoucherId = vElement.attr('data-id');
                    // Add Selected Action
                    vSelected += vGlVoucherId + ',';
                    vCount += $(this).length
                }
            });
            // close The Modal
            $('#CostCenterDataModal').modal('hide');
            $('.txtTotalCount').text(vCount)

            // Get Data From Gl Voucher After Select
            $.get('/api/APIGLVoucher/GLVoucherGET',
                {
                    // Head Parameters
                    phNumbers: vSelected,
                    phIsDeleted: false,
                    // Query Type Id
                    pQueryTypeId: '400'
                },
                function (data, status) {
                    // JSON Parse
                    vDataResult = JSON.parse(data);
                    vDataSearch = vDataResult
                    displayData(vDataSearch[0])
                })
        }
    });

    //Next-Previous-First-Last
    var index = 0;
    $('#btnNext').click(function () {
        if (index <= vDataSearch.length) {
            // Call Function Display Data

            displayData(vDataSearch[++index]);
            $('.txtCount').text(index)
        }
    });
    $('#btnPrev').click(function () {
        if (index > 0) {
            // Call Function Display Data
            displayData(vDataSearch[--index])
            $('.txtCount').text(index)
        }
    });
    $('#btnFirst').click(function () {
        $('.txtCount').text(1)
        displayData(vDataSearch[0])
    });
    $('#btnLast').click(function () {
        $('.txtCount').text(vDataSearch.length)
        displayData(vDataSearch[vDataSearch.length - 1])
    });

    //Check Date On Load
    funCheckDate();
    // Get Data
    function displayData(pData) {

        vGlVoucherDataResult = pData
        if (vGlVoucherDataResult) {
            $('.tblBody').html('')
            // For Each DocDetail  - Main
            for (var i = 0; i <= pData.DocDetail.length - 1; i++) {

                // GET Cash Desk Row Content
                var vContent = funGlVoucherConfig(vGlVoucherDataResult.DocDetail[i]);


                // Append Row Content
                $('.tblBody').append(vContent);
            }

            funGlVoucherHead(pData)
            funTotalDebitCreditDiff()
        }
        // Check Date
        funCheckDate();
        // Disable All Until Click Edit
        funDisabledAllInput();
    }
</script>
<script>
    //function Append
    function funGlVoucherConfig(pGLVoucherRow) {

        // Content
        var RowContent = '<tr class="trBaseRow tblRow" data-id="' + pGLVoucherRow.GLVoucherDtlId + '">' +
            ' <td class="">' +
            ' <button class="btn btn-light btn-sm border btnAddRow" type="submit">' +
            ' <i class="fa fa-plus-circle"></i>' +
            '     </button>' +
            ' </td>' +

            ' <td class="">' +
            ' <input class="form-control form-control-sm text-center fullHeightInput d-none txtAccountId" value="' + pGLVoucherRow.AccountId + '" type="text" required />' +
            ' <input class="form-control form-control-sm text-center fullHeightInput d-none txtAccountIsCostCenter" value="' + pGLVoucherRow.AccountIsCostCenter + '"  type="text" required />' +
            ' <input class="form-control form-control-sm text-center fullHeightInput txtAccountCode" value="' + pGLVoucherRow.AccNo + '" type="text" title="@appResource.ChoseAccountTitle" required />' +
            ' </td>' +
            ' <td class="">' +
            ' <textarea class="form-control form-control-sm text-center fullHeightInput txtAccountName"  type="text" required readonly>' + pGLVoucherRow.AccountNameL1 + '</textarea>' +
            ' </td>' +
            '<td class="">' +
            '<input class="form-control form-control-sm text-center fullHeightInput d-none txtAccountCurrency" value="' + pGLVoucherRow.CurrencyId + '"  type="text" required disabled />' +
            '<input class="form-control form-control-sm text-center fullHeightInput txtAccountCurrencyFactor" value="' + pGLVoucherRow.BaseCurrencyValue + '" type="text" required disabled />' +
            '</td>' +
            '<td class="">' +
            '<input class="form-control form-control-sm text-center font-weight-bold txtDebitCurrency" value="' + pGLVoucherRow.GLVoucherDtlDebit + '" type="text" min=0 required />' +
            '<input class="form-control form-control-sm text-center font-weight-bold txtDebitBase" type="text" value="' + pGLVoucherRow.GLVoucherDtlDebitBase + '" min=0 required disabled />' +
            '</td>' +
            '<td class="">' +
            '<input class="form-control form-control-sm text-center font-weight-bold txtCreditCurrency" value="' + pGLVoucherRow.GLVoucherDtlCredit + '" type="text" min=0 required />' +
            '<input class="form-control form-control-sm text-center font-weight-bold txtCreditBase" value="' + pGLVoucherRow.GLVoucherDtlCreditBase + '" type="text" min=0 required disabled />' +
            '</td>' +
            '<td class="">' +
            '<div class="d-flex">' +
            '<div class="col-sm-4 p-0">' +
            '<input class="form-control form-control-sm text-center fullHeightInput d-none txtCostCenterId" value="' + pGLVoucherRow.CostCenterId + '" type="text" required />' +
            '<input class="form-control form-control-sm text-center fullHeightInput txtCostCenterCode" value="' + pGLVoucherRow.CostCenterId + '" title="@appResource.ChoseCostCenterTitle" type="text" required />' +
            '</div>' +
            '<div class="col-sm-8 p-0">' +
            '<input class="form-control form-control-sm text-center fullHeightInput txtCostCenterName" value="' + pGLVoucherRow.CostCenterNameL1 + '" type="text" required readonly />' +
            '</div>' +
            '</div>' +
            '</td>' +
            '<td class="">' +
            '<textarea class="form-control form-control-sm text-center txtNote" value="' + pGLVoucherRow.GLVoucherDtlNote + '" style="height:50px" required>' + pGLVoucherRow.GLVoucherDtlNote + '</textarea>' +
            '</td>' +
            '<td><button class="btn btn-light btn-sm btnGLVoucherDtlDelete" data-id="' + pGLVoucherRow.GLVoucherDtlId + '"><i class="fa fa-trash"></i></button></td>' +
            '</tr>';
        return RowContent
    }
    function funGlVoucherHead(pGLVoucherHead) {
        // Get Doc Id
        $('.txtDocId').val(pGLVoucherHead.GLVoucherId);
        // Get Doc Id
        $('.txtDocNo').val(pGLVoucherHead.GLVoucherNo);
        // Get Doc Date
        $('.dtpDocDate').val(pGLVoucherHead.GLVoucherDate);
        // Get Vocher Type
        $('.txtVoucherType').val(pGLVoucherHead.VoucherTypeId);
        // Doc Note
        $('.txtDocNote').val(pGLVoucherHead.GLVoucherNote);
        // Doc Is Repeated
        $('.chkIsDocRepeated').prop('checked', pGLVoucherHead.GLVoucherIsRepeated);
        // Doc Is Opps
        $('.chkIsDocOpps').prop('checked', pGLVoucherHead.IsOpps);
        // Doc Is Wait
        $('.chkIsDocWait').prop('checked', pGLVoucherHead.DocIsWait);
        // Doc Is Cancelled
        $('.chkIsDocCancelled').prop('checked', pGLVoucherHead.DocIsCancelled);
        // Doc Ref No
        $('.txtDocRefNo').val(pGLVoucherHead.GLVoucherRef);
        // Doc Ref Date
        $('.dtpDocRefDate').val(pGLVoucherHead.GLVoucherRefDate);
        // Transaction Source - Voucher Category
        $('.txtTransactionSource').val(pGLVoucherHead.GLVoucherCategoryNameL1);
        //// Is Posted
        $('.chkDocIsPosted').prop('checked', pGLVoucherHead.IsPosted);
        // Customer Supplier
        $('.txtCSId').val(pGLVoucherHead.CSId);
        $('.txtCSName').val(pGLVoucherHead.CSNameL1);
    }
    $('body').on('click', '.btnGLVoucherDtlDelete', function () {
        //Element
        var vElement = $(this)
        var vId = $(this).attr('data-id')
        // Save Row
        $.get('/api/APIGLVoucher/GLVoucherGET',
            {
                // Detail Parameters
                pdGLVoucherDtlId: vId,
                pdIsDeleted: true,
                // Query Type Id
                pQueryTypeId: '300'
            },
            function (data, status) {
                var vResultData = JSON.parse(data)
                vElement.closest('tr').remove();
                // Notification
                funNotification(vResultData[0].SystemMessageText, vResultData[0].SystemMessageTypeId);
            })
    })
</script>
<!--Get Data On Change-->
<script>
    // When Change Value Of Id
    $('body').on('change', '.txtAccountCode', function () {
        var vAccountNo = $(this).val();
        var vAccountName = $(this).closest('tr').find('.txtAccountName');
        var vAccountId = $(this).closest('tr').find('.txtAccountId');
        var vTableRow = $(this).closest('tr');
        // Get Account Data
        var vAccountIdElement = vTableRow.find('.txtAccountId');
        var vAccountCodeElement = vTableRow.find('.txtAccountCode');
        var vAccountNameElement = vTableRow.find('.txtAccountName');
        var vAccountCurrencyFactorElement = vTableRow.find('.txtAccountCurrencyFactor');
        var vAccountIsCostCenterElement = vTableRow.find('.txtAccountIsCostCenter');
        var vAccountCurrencyElement = vTableRow.find('.txtAccountCurrency');
        var vAccountCurrencyNameElement = vTableRow.find('.txtAccountCurrencyName');
        var vCostCenterNameElement = vTableRow.find('.txtCostCenterName');
        var vCostCenterIdElement = vTableRow.find('.txtCostCenterId');
        var vCostCenterCodeElement = vTableRow.find('.txtCostCenterCode');
        // List GetAccount
        $.get('/api/APIGLVoucher/AccountLastChildGET',
            {
                pAccountNo: vAccountNo,
                pQueryTypeId: 400
            },
            function (data, status) {
                if (data == '') {
                    funNotification('@appResource.msgChooseCorrectAccount', '2')
                    // Set Value
                    vAccountIdElement.val('');
                    vAccountCodeElement.val('');
                    vAccountNameElement.val('');
                    vAccountCurrencyFactorElement.val('');
                    vAccountIsCostCenterElement.val('');
                    vAccountCurrencyElement.val('');
                    vAccountCurrencyNameElement.val('');
                    vCostCenterNameElement.val('')
                    vCostCenterIdElement.val('');
                    vCostCenterCodeElement.val('');
                }
                else {
                    var vDataJSON = JSON.parse(data);
                    $.each(vDataJSON, function (i, Account) {

                        // Set Value
                        vAccountName.val(Account.AccountNameL1)
                        vAccountId.val(Account.AccountId)
                        vAccountIdElement.val(Account.AccountId);
                        vAccountCodeElement.val(Account.AccountNo);
                        vAccountNameElement.val(Account.AccountNameL1);
                        vAccountCurrencyFactorElement.val(Account.CurrencyExchange);
                        vAccountIsCostCenterElement.val(Account.AccountIsCostCenter);
                        vAccountCurrencyElement.val(Account.AccountCurrency);
                        vAccountCurrencyNameElement.val(Account.CurrencyNameL1);
                        //vCostCenterNameElement.val(Account.CostCenterNameL1)
                        //vCostCenterIdElement.val(Account.CostCenterId);
                        //vCostCenterCodeElement.val(Account.CostCenterCode);
                        // Debit Factor
                        funDebitFactorCalculate(vTableRow);
                        // Credit Factor
                        funCreditFactorCalculate(vTableRow);
                        // Check Cost Center
                        if (vAccountIsCostCenterElement.val() == '0') {
                            vTableRow.find('.txtCostCenterCode').attr('disabled', true)
                        }
                        else {
                            vTableRow.find('.txtCostCenterCode').attr('disabled', false)
                        }

                    });
                }
            });
    });

    // When Change Value Of Id
    $('body').on('change', '.txtCostCenterCode', function () {
        var vTableRow = $(this).closest('tr');
        // Get AccountID
        var vAccountId = vTableRow.find('.txtAccountId').val();
        console.log(vAccountId)
        var vElement = $(this)
        var vCostCenterNo = $(this).val();
        var vCostCenterName = vTableRow.find('.txtCostCenterName');
        var vCostCenterId = vTableRow.find('.txtCostCenterId');
        if (vAccountId == '') {
            // Empty Fileds
            $(this).val('');
            vCostCenterName.val('')
            vCostCenterId.val('')
            funNotification('@appResource.msgChooseAccountFirst', 2);
        } else {
            // List GetCostCenter
            $.get('/api/APIGLVoucher/AccountCostCenterGET',
                {
                    pAccountId: vAccountId,
                    pCostCenterCode: vCostCenterNo,
                    pQueryTypeId: 400

                },
                function (data, status) {
                    if (data == '') {
                        // Empty Fileds
                        vElement.val('');
                        vCostCenterName.val('')
                        vCostCenterId.val('')
                        funNotification('@appResource.msgWrongCostCenter', 2);
                    } else {
                        var vDataJSON = JSON.parse(data);

                        $.each(vDataJSON, function (i, CostCenter) {
                            vCostCenterName.val(CostCenter.CostCenterNameL1)
                            vCostCenterId.val(CostCenter.CostCenterId)
                        });
                    }
                });
        }
    });
</script>
<script>
    //Edit
    //$('.btnVEdit').on('click', function () {
        $('#btnEdit').on('click', function () {
        // Is Posted
        var vDocIsPosted = $('#chkDocIsPosted').prop('checked');
        if (!vDocIsPosted) {
            funUnDisabledAllInput()
        }
        else {
            funNotification('@appResource.msgCannotEditPostedEntry', '2')
        }
    })
    // Disabled All Input Execpt Click Edit
    function funDisabledAllInput() {
        //$(':input').not('.btnVEdit,.btnSearch,.btnUtility,.btnCairo,.btnDubai,.btnVPrint').attr('disabled', true)
        $(':input').not('#btnEdit,.btnSearch,.btnUtility,.btnCairo,.btnDubai,.btnPrint').attr('disabled', true)
    }
    function funUnDisabledAllInput() {
        $(':input').not('.start,' +
            '.txtVoucherType,' +
            '.chkDocIsPosted, ' +
            '.txtAccountCurrencyFactor, ' +
            '.txtDebitBase, ' +
            '.txtTransactionSourceNamel1,' +
            '.txtTransactionSourceNamel2,' +
            '.txtVoucherTypeNamel1,' +
            '.txtCreditBase, ' +
            '.txtTotalDebit, ' +
            '.txtTotalCredit').attr('disabled', false)
    }
</script>
<script>
    // To Move Between Inputs Using Tabs
    function funFoucus(pElement) {
        $('.' + pElement).focus();
    }

    // Fill Notes In DTLS
    $('.txtDocNote').on('blur', function () {
        var vValue = $(this).val();
        $('.txtNote').val(vValue)
    })


</script>
<!--CS MODAL AND CHANGES-->
<script>
    // Open Voucher CSID Modal
    $('body').on('change', '.txtCSId', function (e) {

        // Get CS Data
        var vCSIdElement = $('.txtCSId');
        var vCSNameElement = $('.txtCSName');
        var vAccountIdElement = $('.txtAccountId')
        var vAccountCodeElement = $('.txtAccountCode')
        var vAccountNameElement = $('.txtAccountName')
        var vCurrencyNameElement = $('.txtAccountCurrencyName');
        var vCurrencyIdElement = $('.txtAccountCurrencyId');
        var vCurrencyExchangeElement = $('.txtAccountCurrencyFactor');
        var vCurrencyBaseExchangeElement = $('.txtBaseCurrencyValue');

        var vId = $(this).val();
        // List GetCostCenter
        $.get('/api/APICustomerSupplier/CustomerSupplierGET',
            {
                pCSId: vId,
                pQueryTypeId: '400'

            },
            function (data, status) {
                if (data == '') {
                    // Empty Fileds
                    vCSIdElement.val('');
                    vCSNameElement.val('');
                    funNotification('@appResource.msgChooseCorrectCustomer', 2);
                } else {
                    var vDataJSON = JSON.parse(data);
                    console.log(vDataJSON)
                    $.each(vDataJSON, function (i, CS) {

                        // Set Value
                        vCSIdElement.val(CS.CSId);
                        vCSNameElement.val(CS.CSNameL1);
                        vAccountIdElement.val(CS.AccountId)
                        vAccountCodeElement.val(CS.AccountNo)
                        vAccountNameElement.val(CS.AccountNameL1)
                        vCurrencyNameElement.val(CS.CurrencyNameL1)
                        vCurrencyIdElement.val(CS.CurrencyId)
                        vCurrencyExchangeElement.val(CS.CurrencyExchange)
                        vCurrencyBaseExchangeElement.val(CS.CurrencyExchange)
                    });
                }
            });
    })

    // Open Customer Supplier Modal
    $('body').on('keyup dblclick', '.txtCSId', function (e) {
        // F9 - Double Click
        if (e.keyCode == 120 || e.type == 'dblclick') {
            // Search Account
            var vURL = '/GLVoucher/CustomerSupplierSearch';
            // Load Content of Account Search
            $('#AccountDataModalContent').load(vURL);
            // Modal Show
            $('#AccountDataModal').modal('show');
            // Focus
            $('#AccountDataModal').on('shown.bs.modal', function () {
                $('.txtSearch').focus();

                // Select Account
                $('body').on('click', '.divCSSelect', function () {

                    // Get Values
                    var vCSId = $(this).attr('data-id');
                    var vCSNameValue = $(this).find('.divCSName').text();
                    var vAccountId = $(this).find('.divAccountId').text();
                    var vAccountNo = $(this).find('.divAccountNo').text();
                    var vAccountName = $(this).find('.divAccountName').text();
                    var vCurrencyName = $(this).find('.divCurrencyName').text();
                    var vCurrencyId = $(this).find('.divCurrencyId').text();
                    var vCurrencyExchange = $(this).find('.divCurrencyExchange').text();


                    // Get CS Data
                    var vCSIdElement = $('.txtCSId');
                    var vCSNameElement = $('.txtCSName');
                    var vAccountIdElement = $('.txtAccountId')
                    var vAccountCodeElement = $('.txtAccountCode')
                    var vAccountNameElement = $('.txtAccountName')
                    var vCurrencyNameElement = $('.txtAccountCurrencyName');
                    var vCurrencyIdElement = $('.txtAccountCurrencyId');
                    var vCurrencyExchangeElement = $('.txtAccountCurrencyFactor');
                    var vCurrencyBaseExchangeElement = $('.txtBaseCurrencyValue');

                    // Set Value
                    vCSIdElement.val(vCSId);
                    vCSNameElement.val(vCSNameValue);
                    vAccountIdElement.val(vAccountId)
                    vAccountCodeElement.val(vAccountNo)
                    vAccountNameElement.val(vAccountName)
                    vCurrencyNameElement.val(vCurrencyName)
                    vCurrencyIdElement.val(vCurrencyId)
                    vCurrencyExchangeElement.val(vCurrencyExchange)
                    vCurrencyBaseExchangeElement.val(vCurrencyExchange)
                    // Modal Show
                    $('#AccountDataModal').modal('hide');

                })
            })
        }
    })
</script>
<script>
    // Print
    //$('.btnVPrint').on('click', function () {
        $('.btnPrint').on('click', function () {
        var url = '/GLVoucher/CNReport?pGLVoucherId=' + $('.txtDocId').val()
        var popupWindow = window.open(url);
    });
    //SimpleInSameWin()


</script>
