@model appSERP.Models.FA.AssetContractDetailModel
@using appSERP.Views.Shared.appResource
@{
    ViewBag.Title = "DataModel";
    Layout = "~/Views/Shared/appLayout/_ModalLayout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <!-- Header -->
    <div class="container-fluid">
        @Html.Action("ViewSettingModalHeader", "ViewSetting", new { pModalHeaderTitle = appResource.AssetContractDetail, pId = Model.AssetContractDetailId })
    </div>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.HiddenFor(model => model.AssetContractDetailId, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.AssetContractDetailId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AssetContractDetailId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AssetContractDetailSeq, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AssetContractDetailSeq, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
            @Html.ValidationMessageFor(model => model.AssetContractDetailSeq, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AssetContractDetailQty, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AssetContractDetailQty, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
            @Html.ValidationMessageFor(model => model.AssetContractDetailQty, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AssetContractId, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AssetContractId, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
            @Html.ValidationMessageFor(model => model.AssetContractId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AssetId, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-10">
            <select id="selectAsset" class="selectpicker form-control form-control" name="AssetId" value="" data-live-search="true" data-live-search-placeholder="Search" data-actions-box="true"></select>
            @Html.ValidationMessageFor(model => model.AssetId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group m-3">
        <div class="custom-control custom-checkbox col-md-12">
            @Html.EditorFor(model => model.AssetContractDetailIsActive, new { htmlAttributes = new { @class = "custom-control-input", @id = "customCheck1" } })
            @Html.LabelFor(model => model.AssetContractDetailIsActive, htmlAttributes: new { @class = "custom-control-label", @for = "customCheck1" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="@appResource.btnSave" class="btn btn-success" />
            <button type="button" class="btn btn-light" data-dismiss="modal">@appResource.btnClose</button>
        </div>
    </div>
</div>
}

<script>
            // List GetAsset
    $.post('/Home/GetAsset',
        null,
        function (data, status) {
            var vDataJSON = JSON.parse(data);
            $.each(vDataJSON, function (i, Asset) {
                $('#selectAsset').append('<option data-id="' + Asset.AssetId + '" value="' + Asset.AssetId + '" sort-id="' + i + '">' + Asset.AssetNameL1 + '</option>')
            })
            var vData = '@Model.AssetId'

            if (vData != "0") {
                $('#selectAsset').val(@Model.AssetId);
            }
            // Refresh Select Picker
            $('.selectpicker').selectpicker('refresh');
        }
    )
</script>